{"mappings":"A,C,K,S,e,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,S,uB,C,C,C,E,O,O,I,C,G,O,C,S,C,E,Y,G,A,e,G,O,S,C,c,C,I,C,E,I,O,c,C,E,E,C,W,C,E,I,W,O,C,C,E,A,C,E,G,C,C,I,e,W,gB,C,E,c,C,E,c,e,iB,A,O,gB,A,C,c,S,C,E,G,K,gB,O,e,C,E,C,O,C,G,K,c,C,I,E,a,C,E,A,Q,a,C,E,C,I,E,C,G,E,Q,C,C,E,O,e,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,a,C,E,C,C,E,e,iB,C,e,I,e,c,Q,C,e,Q,S,M,C,O,E,e,O,O,C,U,I,0CCAA,IAAI,KAAO,WACT,aAGA,IAAM,KAAO,CAIX,OAAQ,KAER,QAAS,KAET,GAAI,KAEJ,IAAK,KAEL,QAAS,KAET,KAAM,KAGN,KAAM,KAEN,QAAS,KAET,QAAS,KAUT,OAAQ,SAAS,CAAG,CAAE,CAAI,EAExB,OAAO,AADa,eAAe,EAAK,GAAQ,QAC7B,MAAM,AAC3B,EAGA,OAAQ,KAER,SAAU,KAEV,YAAa,KAEb,YAAa,KAEb,UAAW,KAEX,KAAM,KAGN,gBAAiB,KAEjB,gBAAiB,KAGjB,OAAQ,KAER,QAAS,KAOT,OAAQ,KAQR,OAAQ,CAMN,eAAgB,CAAA,EAMhB,iBAAkB,GAKlB,qBAAsB,CAAA,EAMtB,iBAAkB,YAMlB,iBAAkB,EAMlB,mBAAoB,GAMpB,uBAAwB,CAAA,EAMxB,eAAgB,iBAMhB,aAAc,eAMd,WAAY,aAMZ,cAAe,gBAMf,cAAe,gBAMf,UAAW,CAAA,EAMX,gBAAiB,CAAA,EAMjB,kBAAmB,GAMnB,iBAAkB,GAMlB,mBAAoB,CAAC,QAAS,QAAS,QAAS,SAAS,CAMzD,gBAAiB,CAAA,EAKjB,QAAS,EAMT,iBAAkB,cAMlB,aAAc,OAKd,gBAAiB,kCAKjB,eAAgB,UAMhB,mBAAoB,CAAA,EAMpB,oBAAqB,CAAA,EAMrB,sBAAuB,CAAA,EAMvB,wBAAyB,CAAC,MAAO,SAAS,CAM1C,iBAAkB,CAAA,EAMlB,YAAa,CAAA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AAI,MAAM,CAErB,CAAA,GAAgB,EAAa,GAAG,EAClC,EAAa,GAAG,CAAC,KAAK,EAE1B,GAEA,IAAM,EAAmB,OAAO,UAAU,CAAG,OAAO,UAAU,CAAC,IAAI,CAAC,QAAU,IAE9E,CAAA,OAAO,UAAU,CAAG,SAAS,CAAK,EAC5B,EAAM,KAAK,EAAI,EAAM,KAAK,CAAC,IAAI,EACjC,iBACA,QAAQ,EAAc,SAAS,CAAG,EAChC,aAAa,EAAK,gBAAiB,CACjC,SAAU,cACV,aAAA,YACF,EACF,IAEI,GACF,EAAiB,EAGvB,EACA,YAAY,UAAU,CAAC,WACrB,aAAa,EAAM,YAAa,CAAC,GACjC,EAAO,IACT,EAAG,EACL,GAEO,IACT,IAqLA,yCAAe,I,G,I,0B,C,E,e,0B,Q,I,2C,e,0B,S,I,2C,e,0B,W,I,2C,e,0B,W,I,0C,e,0B,W,I,0C,e,0B,Q,I,2C,e,0B,Y,I,2C,e,0B,U,I,2C,e,0B,U,I,2C,e,0B,Y,I,2C,e,0B,M,I,2C,e,0B,Q,I,2C,I,0B,C,E,e,0B,kB,I,2C,e,0B,iB,I,0C,e,0B,mB,I,2C,e,0B,e,I,2C,e,0B,mB,I,2C,I,0B,C,E,e,0B,M,I,yC,e,0B,S,I,2C,e,0B,Q,I,2C,e,0B,O,I,2C,e,0B,O,I,0C,e,0B,iB,I,2C,e,0B,Q,I,2C,e,0B,M,I,2C,e,0B,kB,I,2C,e,0B,W,I,2C,e,0B,S,I,2C,e,0B,Y,I,2C,e,0B,sB,I,2C,e,0B,a,I,2C,e,0B,a,I,yC,e,0B,O,I,2C,e,0B,Y,I,2C,e,0B,a,I,2C,e,0B,O,I,2C,e,0B,Y,I,2C,e,0B,c,I,2C,e,0B,Q,I,2C,e,0B,a,I,2C,e,0B,iB,I,2C8B9rKR,IAAI,wCAAM,MACN,0CAAS,SACT,0CAAQ,QACR,0CAAO,OACP,yCAAO,OACP,0CAAiB,CAAC,wCAAK,0CAAQ,0CAAO,0CAAK,CAC3C,0CAAQ,QACR,0CAAM,MACN,0CAAkB,kBAClB,0CAAW,WACX,0CAAS,SACT,0CAAY,YACZ,0CAAmC,0CAAe,MAAM,CAAC,SAAU,CAAG,CAAE,CAAS,EAC1F,OAAO,EAAI,MAAM,CAAC,CAAC,EAAY,IAAM,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","sources":["<anon>","node_modules/htmx.org/dist/htmx.esm.js","core/assets/app.js","node_modules/bootstrap/dist/js/bootstrap.esm.js","node_modules/bootstrap/js/src/dom/data.js","node_modules/bootstrap/js/src/util/index.js","node_modules/bootstrap/js/src/dom/event-handler.js","node_modules/bootstrap/js/src/dom/manipulator.js","node_modules/bootstrap/js/src/util/config.js","node_modules/bootstrap/js/src/base-component.js","node_modules/bootstrap/js/src/dom/selector-engine.js","node_modules/bootstrap/js/src/util/component-functions.js","node_modules/bootstrap/js/src/alert.js","node_modules/bootstrap/js/src/button.js","node_modules/bootstrap/js/src/util/swipe.js","node_modules/bootstrap/js/src/carousel.js","node_modules/bootstrap/js/src/collapse.js","node_modules/bootstrap/js/src/dropdown.js","node_modules/bootstrap/js/src/util/backdrop.js","node_modules/bootstrap/js/src/util/focustrap.js","node_modules/bootstrap/js/src/util/scrollbar.js","node_modules/bootstrap/js/src/modal.js","node_modules/bootstrap/js/src/offcanvas.js","node_modules/bootstrap/js/src/util/sanitizer.js","node_modules/bootstrap/js/src/util/template-factory.js","node_modules/bootstrap/js/src/tooltip.js","node_modules/bootstrap/js/src/popover.js","node_modules/bootstrap/js/src/scrollspy.js","node_modules/bootstrap/js/src/tab.js","node_modules/bootstrap/js/src/toast.js","node_modules/@popperjs/core/lib/index.js","node_modules/@popperjs/core/lib/enums.js","node_modules/@popperjs/core/lib/modifiers/index.js","node_modules/@popperjs/core/lib/modifiers/applyStyles.js","node_modules/@popperjs/core/lib/dom-utils/getNodeName.js","node_modules/@popperjs/core/lib/dom-utils/instanceOf.js","node_modules/@popperjs/core/lib/dom-utils/getWindow.js","node_modules/@popperjs/core/lib/modifiers/arrow.js","node_modules/@popperjs/core/lib/utils/getBasePlacement.js","node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js","node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js","node_modules/@popperjs/core/lib/utils/math.js","node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js","node_modules/@popperjs/core/lib/utils/userAgent.js","node_modules/@popperjs/core/lib/dom-utils/contains.js","node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js","node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js","node_modules/@popperjs/core/lib/dom-utils/isTableElement.js","node_modules/@popperjs/core/lib/dom-utils/getParentNode.js","node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js","node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js","node_modules/@popperjs/core/lib/utils/within.js","node_modules/@popperjs/core/lib/utils/mergePaddingObject.js","node_modules/@popperjs/core/lib/utils/getFreshSideObject.js","node_modules/@popperjs/core/lib/utils/expandToHashMap.js","node_modules/@popperjs/core/lib/modifiers/computeStyles.js","node_modules/@popperjs/core/lib/utils/getVariation.js","node_modules/@popperjs/core/lib/modifiers/eventListeners.js","node_modules/@popperjs/core/lib/modifiers/flip.js","node_modules/@popperjs/core/lib/utils/getOppositePlacement.js","node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js","node_modules/@popperjs/core/lib/utils/detectOverflow.js","node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js","node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js","node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js","node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js","node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js","node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js","node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js","node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js","node_modules/@popperjs/core/lib/utils/rectToClientRect.js","node_modules/@popperjs/core/lib/utils/computeOffsets.js","node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js","node_modules/@popperjs/core/lib/modifiers/hide.js","node_modules/@popperjs/core/lib/modifiers/offset.js","node_modules/@popperjs/core/lib/modifiers/popperOffsets.js","node_modules/@popperjs/core/lib/modifiers/preventOverflow.js","node_modules/@popperjs/core/lib/utils/getAltAxis.js","node_modules/@popperjs/core/lib/createPopper.js","node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js","node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js","node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js","node_modules/@popperjs/core/lib/utils/orderModifiers.js","node_modules/@popperjs/core/lib/utils/debounce.js","node_modules/@popperjs/core/lib/utils/mergeByName.js","node_modules/@popperjs/core/lib/popper.js","node_modules/@popperjs/core/lib/popper-lite.js","core/assets/autocomplete.js"],"sourcesContent":["(() => {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule' || Object.prototype.hasOwnProperty.call(dest, key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      }\n    });\n  });\n\n  return dest;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequirecf40\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequirecf40\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"8if87\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $609bbda3516a49df$export$2e2bcd8739ae039);\nvar htmx = function() {\n    'use strict';\n    // Public API\n    const htmx = {\n        // Tsc madness here, assigning the functions directly results in an invalid TypeScript output, but reassigning is fine\n        /* Event processing */ /** @type {typeof onLoadHelper} */ onLoad: null,\n        /** @type {typeof processNode} */ process: null,\n        /** @type {typeof addEventListenerImpl} */ on: null,\n        /** @type {typeof removeEventListenerImpl} */ off: null,\n        /** @type {typeof triggerEvent} */ trigger: null,\n        /** @type {typeof ajaxHelper} */ ajax: null,\n        /* DOM querying helpers */ /** @type {typeof find} */ find: null,\n        /** @type {typeof findAll} */ findAll: null,\n        /** @type {typeof closest} */ closest: null,\n        /**\n     * Returns the input values that would resolve for a given element via the htmx value resolution mechanism\n     *\n     * @see https://htmx.org/api/#values\n     *\n     * @param {Element} elt the element to resolve values on\n     * @param {HttpVerb} type the request type (e.g. **get** or **post**) non-GET's will include the enclosing form of the element. Defaults to **post**\n     * @returns {Object}\n     */ values: function(elt, type) {\n            const inputValues = getInputValues(elt, type || 'post');\n            return inputValues.values;\n        },\n        /* DOM manipulation helpers */ /** @type {typeof removeElement} */ remove: null,\n        /** @type {typeof addClassToElement} */ addClass: null,\n        /** @type {typeof removeClassFromElement} */ removeClass: null,\n        /** @type {typeof toggleClassOnElement} */ toggleClass: null,\n        /** @type {typeof takeClassForElement} */ takeClass: null,\n        /** @type {typeof swap} */ swap: null,\n        /* Extension entrypoints */ /** @type {typeof defineExtension} */ defineExtension: null,\n        /** @type {typeof removeExtension} */ removeExtension: null,\n        /* Debugging */ /** @type {typeof logAll} */ logAll: null,\n        /** @type {typeof logNone} */ logNone: null,\n        /* Debugging */ /**\n     * The logger htmx uses to log with\n     *\n     * @see https://htmx.org/api/#logger\n     */ logger: null,\n        /**\n     * A property holding the configuration htmx uses at runtime.\n     *\n     * Note that using a [meta tag](https://htmx.org/docs/#config) is the preferred mechanism for setting these properties.\n     *\n     * @see https://htmx.org/api/#config\n     */ config: {\n            /**\n       * Whether to use history.\n       * @type boolean\n       * @default true\n       */ historyEnabled: true,\n            /**\n       * The number of pages to keep in **sessionStorage** for history support.\n       * @type number\n       * @default 10\n       */ historyCacheSize: 10,\n            /**\n       * @type boolean\n       * @default false\n       */ refreshOnHistoryMiss: false,\n            /**\n       * The default swap style to use if **[hx-swap](https://htmx.org/attributes/hx-swap)** is omitted.\n       * @type HtmxSwapStyle\n       * @default 'innerHTML'\n       */ defaultSwapStyle: 'innerHTML',\n            /**\n       * The default delay between receiving a response from the server and doing the swap.\n       * @type number\n       * @default 0\n       */ defaultSwapDelay: 0,\n            /**\n       * The default delay between completing the content swap and settling attributes.\n       * @type number\n       * @default 20\n       */ defaultSettleDelay: 20,\n            /**\n       * If true, htmx will inject a small amount of CSS into the page to make indicators invisible unless the **htmx-indicator** class is present.\n       * @type boolean\n       * @default true\n       */ includeIndicatorStyles: true,\n            /**\n       * The class to place on indicators when a request is in flight.\n       * @type string\n       * @default 'htmx-indicator'\n       */ indicatorClass: 'htmx-indicator',\n            /**\n       * The class to place on triggering elements when a request is in flight.\n       * @type string\n       * @default 'htmx-request'\n       */ requestClass: 'htmx-request',\n            /**\n       * The class to temporarily place on elements that htmx has added to the DOM.\n       * @type string\n       * @default 'htmx-added'\n       */ addedClass: 'htmx-added',\n            /**\n       * The class to place on target elements when htmx is in the settling phase.\n       * @type string\n       * @default 'htmx-settling'\n       */ settlingClass: 'htmx-settling',\n            /**\n       * The class to place on target elements when htmx is in the swapping phase.\n       * @type string\n       * @default 'htmx-swapping'\n       */ swappingClass: 'htmx-swapping',\n            /**\n       * Allows the use of eval-like functionality in htmx, to enable **hx-vars**, trigger conditions & script tag evaluation. Can be set to **false** for CSP compatibility.\n       * @type boolean\n       * @default true\n       */ allowEval: true,\n            /**\n       * If set to false, disables the interpretation of script tags.\n       * @type boolean\n       * @default true\n       */ allowScriptTags: true,\n            /**\n       * If set, the nonce will be added to inline scripts.\n       * @type string\n       * @default ''\n       */ inlineScriptNonce: '',\n            /**\n       * If set, the nonce will be added to inline styles.\n       * @type string\n       * @default ''\n       */ inlineStyleNonce: '',\n            /**\n       * The attributes to settle during the settling phase.\n       * @type string[]\n       * @default ['class', 'style', 'width', 'height']\n       */ attributesToSettle: [\n                'class',\n                'style',\n                'width',\n                'height'\n            ],\n            /**\n       * Allow cross-site Access-Control requests using credentials such as cookies, authorization headers or TLS client certificates.\n       * @type boolean\n       * @default false\n       */ withCredentials: false,\n            /**\n       * @type number\n       * @default 0\n       */ timeout: 0,\n            /**\n       * The default implementation of **getWebSocketReconnectDelay** for reconnecting after unexpected connection loss by the event code **Abnormal Closure**, **Service Restart** or **Try Again Later**.\n       * @type {'full-jitter' | ((retryCount:number) => number)}\n       * @default \"full-jitter\"\n       */ wsReconnectDelay: 'full-jitter',\n            /**\n       * The type of binary data being received over the WebSocket connection\n       * @type BinaryType\n       * @default 'blob'\n       */ wsBinaryType: 'blob',\n            /**\n       * @type string\n       * @default '[hx-disable], [data-hx-disable]'\n       */ disableSelector: '[hx-disable], [data-hx-disable]',\n            /**\n       * @type {'auto' | 'instant' | 'smooth'}\n       * @default 'instant'\n       */ scrollBehavior: 'instant',\n            /**\n       * If the focused element should be scrolled into view.\n       * @type boolean\n       * @default false\n       */ defaultFocusScroll: false,\n            /**\n       * If set to true htmx will include a cache-busting parameter in GET requests to avoid caching partial responses by the browser\n       * @type boolean\n       * @default false\n       */ getCacheBusterParam: false,\n            /**\n       * If set to true, htmx will use the View Transition API when swapping in new content.\n       * @type boolean\n       * @default false\n       */ globalViewTransitions: false,\n            /**\n       * htmx will format requests with these methods by encoding their parameters in the URL, not the request body\n       * @type {(HttpVerb)[]}\n       * @default ['get', 'delete']\n       */ methodsThatUseUrlParams: [\n                'get',\n                'delete'\n            ],\n            /**\n       * If set to true, disables htmx-based requests to non-origin hosts.\n       * @type boolean\n       * @default false\n       */ selfRequestsOnly: true,\n            /**\n       * If set to true htmx will not update the title of the document when a title tag is found in new content\n       * @type boolean\n       * @default false\n       */ ignoreTitle: false,\n            /**\n       * Whether the target of a boosted element is scrolled into the viewport.\n       * @type boolean\n       * @default true\n       */ scrollIntoViewOnBoost: true,\n            /**\n       * The cache to store evaluated trigger specifications into.\n       * You may define a simple object to use a never-clearing cache, or implement your own system using a [proxy object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Proxy)\n       * @type {Object|null}\n       * @default null\n       */ triggerSpecsCache: null,\n            /** @type boolean */ disableInheritance: false,\n            /** @type HtmxResponseHandlingConfig[] */ responseHandling: [\n                {\n                    code: '204',\n                    swap: false\n                },\n                {\n                    code: '[23]..',\n                    swap: true\n                },\n                {\n                    code: '[45]..',\n                    swap: false,\n                    error: true\n                }\n            ],\n            /**\n       * Whether to process OOB swaps on elements that are nested within the main response element.\n       * @type boolean\n       * @default true\n       */ allowNestedOobSwaps: true,\n            /**\n       * Whether to treat history cache miss full page reload requests as a \"HX-Request\" by returning this response header\n       * This should always be disabled when using HX-Request header to optionally return partial responses\n       * @type boolean\n       * @default true\n       */ historyRestoreAsHxRequest: true\n        },\n        /** @type {typeof parseInterval} */ parseInterval: null,\n        location: /**\n     * proxy of window.location used for page reload functions\n     * @type location\n     */ location,\n        /** @type {typeof internalEval} */ _: null,\n        version: '2.0.6'\n    };\n    // Tsc madness part 2\n    htmx.onLoad = onLoadHelper;\n    htmx.process = processNode;\n    htmx.on = addEventListenerImpl;\n    htmx.off = removeEventListenerImpl;\n    htmx.trigger = triggerEvent;\n    htmx.ajax = ajaxHelper;\n    htmx.find = find;\n    htmx.findAll = findAll;\n    htmx.closest = closest;\n    htmx.remove = removeElement;\n    htmx.addClass = addClassToElement;\n    htmx.removeClass = removeClassFromElement;\n    htmx.toggleClass = toggleClassOnElement;\n    htmx.takeClass = takeClassForElement;\n    htmx.swap = swap;\n    htmx.defineExtension = defineExtension;\n    htmx.removeExtension = removeExtension;\n    htmx.logAll = logAll;\n    htmx.logNone = logNone;\n    htmx.parseInterval = parseInterval;\n    htmx._ = internalEval;\n    const internalAPI = {\n        addTriggerHandler: addTriggerHandler,\n        bodyContains: bodyContains,\n        canAccessLocalStorage: canAccessLocalStorage,\n        findThisElement: findThisElement,\n        filterValues: filterValues,\n        swap: swap,\n        hasAttribute: hasAttribute,\n        getAttributeValue: getAttributeValue,\n        getClosestAttributeValue: getClosestAttributeValue,\n        getClosestMatch: getClosestMatch,\n        getExpressionVars: getExpressionVars,\n        getHeaders: getHeaders,\n        getInputValues: getInputValues,\n        getInternalData: getInternalData,\n        getSwapSpecification: getSwapSpecification,\n        getTriggerSpecs: getTriggerSpecs,\n        getTarget: getTarget,\n        makeFragment: makeFragment,\n        mergeObjects: mergeObjects,\n        makeSettleInfo: makeSettleInfo,\n        oobSwap: oobSwap,\n        querySelectorExt: querySelectorExt,\n        settleImmediately: settleImmediately,\n        shouldCancel: shouldCancel,\n        triggerEvent: triggerEvent,\n        triggerErrorEvent: triggerErrorEvent,\n        withExtensions: withExtensions\n    };\n    const VERBS = [\n        'get',\n        'post',\n        'put',\n        'delete',\n        'patch'\n    ];\n    const VERB_SELECTOR = VERBS.map(function(verb) {\n        return '[hx-' + verb + '], [data-hx-' + verb + ']';\n    }).join(', ');\n    //= ===================================================================\n    // Utilities\n    //= ===================================================================\n    /**\n   * Parses an interval string consistent with the way htmx does. Useful for plugins that have timing-related attributes.\n   *\n   * Caution: Accepts an int followed by either **s** or **ms**. All other values use **parseFloat**\n   *\n   * @see https://htmx.org/api/#parseInterval\n   *\n   * @param {string} str timing string\n   * @returns {number|undefined}\n   */ function parseInterval(str) {\n        if (str == undefined) return undefined;\n        let interval = NaN;\n        if (str.slice(-2) == 'ms') interval = parseFloat(str.slice(0, -2));\n        else if (str.slice(-1) == 's') interval = parseFloat(str.slice(0, -1)) * 1000;\n        else if (str.slice(-1) == 'm') interval = parseFloat(str.slice(0, -1)) * 60000;\n        else interval = parseFloat(str);\n        return isNaN(interval) ? undefined : interval;\n    }\n    /**\n   * @param {Node} elt\n   * @param {string} name\n   * @returns {(string | null)}\n   */ function getRawAttribute(elt, name) {\n        return elt instanceof Element && elt.getAttribute(name);\n    }\n    /**\n   * @param {Element} elt\n   * @param {string} qualifiedName\n   * @returns {boolean}\n   */ // resolve with both hx and data-hx prefixes\n    function hasAttribute(elt, qualifiedName) {\n        return !!elt.hasAttribute && (elt.hasAttribute(qualifiedName) || elt.hasAttribute('data-' + qualifiedName));\n    }\n    /**\n   *\n   * @param {Node} elt\n   * @param {string} qualifiedName\n   * @returns {(string | null)}\n   */ function getAttributeValue(elt, qualifiedName) {\n        return getRawAttribute(elt, qualifiedName) || getRawAttribute(elt, 'data-' + qualifiedName);\n    }\n    /**\n   * @param {Node} elt\n   * @returns {Node | null}\n   */ function parentElt(elt) {\n        const parent = elt.parentElement;\n        if (!parent && elt.parentNode instanceof ShadowRoot) return elt.parentNode;\n        return parent;\n    }\n    /**\n   * @returns {Document}\n   */ function getDocument() {\n        return document;\n    }\n    /**\n   * @param {Node} elt\n   * @param {boolean} global\n   * @returns {Node|Document}\n   */ function getRootNode(elt, global) {\n        return elt.getRootNode ? elt.getRootNode({\n            composed: global\n        }) : getDocument();\n    }\n    /**\n   * @param {Node} elt\n   * @param {(e:Node) => boolean} condition\n   * @returns {Node | null}\n   */ function getClosestMatch(elt, condition) {\n        while(elt && !condition(elt))elt = parentElt(elt);\n        return elt || null;\n    }\n    /**\n   * @param {Element} initialElement\n   * @param {Element} ancestor\n   * @param {string} attributeName\n   * @returns {string|null}\n   */ function getAttributeValueWithDisinheritance(initialElement, ancestor, attributeName) {\n        const attributeValue = getAttributeValue(ancestor, attributeName);\n        const disinherit = getAttributeValue(ancestor, 'hx-disinherit');\n        var inherit = getAttributeValue(ancestor, 'hx-inherit');\n        if (initialElement !== ancestor) {\n            if (htmx.config.disableInheritance) {\n                if (inherit && (inherit === '*' || inherit.split(' ').indexOf(attributeName) >= 0)) return attributeValue;\n                else return null;\n            }\n            if (disinherit && (disinherit === '*' || disinherit.split(' ').indexOf(attributeName) >= 0)) return 'unset';\n        }\n        return attributeValue;\n    }\n    /**\n   * @param {Element} elt\n   * @param {string} attributeName\n   * @returns {string | null}\n   */ function getClosestAttributeValue(elt, attributeName) {\n        let closestAttr = null;\n        getClosestMatch(elt, function(e) {\n            return !!(closestAttr = getAttributeValueWithDisinheritance(elt, asElement(e), attributeName));\n        });\n        if (closestAttr !== 'unset') return closestAttr;\n    }\n    /**\n   * @param {Node} elt\n   * @param {string} selector\n   * @returns {boolean}\n   */ function matches(elt, selector) {\n        return elt instanceof Element && elt.matches(selector);\n    }\n    /**\n   * @param {string} str\n   * @returns {string}\n   */ function getStartTag(str) {\n        const tagMatcher = /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i;\n        const match = tagMatcher.exec(str);\n        if (match) return match[1].toLowerCase();\n        else return '';\n    }\n    /**\n   * @param {string} resp\n   * @returns {Document}\n   */ function parseHTML(resp) {\n        const parser = new DOMParser();\n        return parser.parseFromString(resp, 'text/html');\n    }\n    /**\n   * @param {DocumentFragment} fragment\n   * @param {Node} elt\n   */ function takeChildrenFor(fragment, elt) {\n        while(elt.childNodes.length > 0)fragment.append(elt.childNodes[0]);\n    }\n    /**\n   * @param {HTMLScriptElement} script\n   * @returns {HTMLScriptElement}\n   */ function duplicateScript(script) {\n        const newScript = getDocument().createElement('script');\n        forEach(script.attributes, function(attr) {\n            newScript.setAttribute(attr.name, attr.value);\n        });\n        newScript.textContent = script.textContent;\n        newScript.async = false;\n        if (htmx.config.inlineScriptNonce) newScript.nonce = htmx.config.inlineScriptNonce;\n        return newScript;\n    }\n    /**\n   * @param {HTMLScriptElement} script\n   * @returns {boolean}\n   */ function isJavaScriptScriptNode(script) {\n        return script.matches('script') && (script.type === 'text/javascript' || script.type === 'module' || script.type === '');\n    }\n    /**\n   * we have to make new copies of script tags that we are going to insert because\n   * SOME browsers (not saying who, but it involves an element and an animal) don't\n   * execute scripts created in <template> tags when they are inserted into the DOM\n   * and all the others do lmao\n   * @param {DocumentFragment} fragment\n   */ function normalizeScriptTags(fragment) {\n        Array.from(fragment.querySelectorAll('script')).forEach(/** @param {HTMLScriptElement} script */ (script)=>{\n            if (isJavaScriptScriptNode(script)) {\n                const newScript = duplicateScript(script);\n                const parent = script.parentNode;\n                try {\n                    parent.insertBefore(newScript, script);\n                } catch (e) {\n                    logError(e);\n                } finally{\n                    script.remove();\n                }\n            }\n        });\n    }\n    /**\n   * @typedef {DocumentFragment & {title?: string}} DocumentFragmentWithTitle\n   * @description  a document fragment representing the response HTML, including\n   * a `title` property for any title information found\n   */ /**\n   * @param {string} response HTML\n   * @returns {DocumentFragmentWithTitle}\n   */ function makeFragment(response) {\n        // strip head tag to determine shape of response we are dealing with\n        const responseWithNoHead = response.replace(/<head(\\s[^>]*)?>[\\s\\S]*?<\\/head>/i, '');\n        const startTag = getStartTag(responseWithNoHead);\n        /** @type DocumentFragmentWithTitle */ let fragment;\n        if (startTag === 'html') {\n            // if it is a full document, parse it and return the body\n            fragment = /** @type DocumentFragmentWithTitle */ new DocumentFragment();\n            const doc = parseHTML(response);\n            takeChildrenFor(fragment, doc.body);\n            fragment.title = doc.title;\n        } else if (startTag === 'body') {\n            // parse body w/o wrapping in template\n            fragment = /** @type DocumentFragmentWithTitle */ new DocumentFragment();\n            const doc = parseHTML(responseWithNoHead);\n            takeChildrenFor(fragment, doc.body);\n            fragment.title = doc.title;\n        } else {\n            // otherwise we have non-body partial HTML content, so wrap it in a template to maximize parsing flexibility\n            const doc = parseHTML('<body><template class=\"internal-htmx-wrapper\">' + responseWithNoHead + '</template></body>');\n            fragment = /** @type DocumentFragmentWithTitle */ doc.querySelector('template').content;\n            // extract title into fragment for later processing\n            fragment.title = doc.title;\n            // for legacy reasons we support a title tag at the root level of non-body responses, so we need to handle it\n            var titleElement = fragment.querySelector('title');\n            if (titleElement && titleElement.parentNode === fragment) {\n                titleElement.remove();\n                fragment.title = titleElement.innerText;\n            }\n        }\n        if (fragment) {\n            if (htmx.config.allowScriptTags) normalizeScriptTags(fragment);\n            else // remove all script tags if scripts are disabled\n            fragment.querySelectorAll('script').forEach((script)=>script.remove());\n        }\n        return fragment;\n    }\n    /**\n   * @param {Function} func\n   */ function maybeCall(func) {\n        if (func) func();\n    }\n    /**\n   * @param {any} o\n   * @param {string} type\n   * @returns\n   */ function isType(o, type) {\n        return Object.prototype.toString.call(o) === '[object ' + type + ']';\n    }\n    /**\n   * @param {*} o\n   * @returns {o is Function}\n   */ function isFunction(o) {\n        return typeof o === 'function';\n    }\n    /**\n   * @param {*} o\n   * @returns {o is Object}\n   */ function isRawObject(o) {\n        return isType(o, 'Object');\n    }\n    /**\n   * @typedef {Object} OnHandler\n   * @property {(keyof HTMLElementEventMap)|string} event\n   * @property {EventListener} listener\n   */ /**\n   * @typedef {Object} ListenerInfo\n   * @property {string} trigger\n   * @property {EventListener} listener\n   * @property {EventTarget} on\n   */ /**\n   * @typedef {Object} HtmxNodeInternalData\n   * Element data\n   * @property {number} [initHash]\n   * @property {boolean} [boosted]\n   * @property {OnHandler[]} [onHandlers]\n   * @property {number} [timeout]\n   * @property {ListenerInfo[]} [listenerInfos]\n   * @property {boolean} [cancelled]\n   * @property {boolean} [triggeredOnce]\n   * @property {number} [delayed]\n   * @property {number|null} [throttle]\n   * @property {WeakMap<HtmxTriggerSpecification,WeakMap<EventTarget,string>>} [lastValue]\n   * @property {boolean} [loaded]\n   * @property {string} [path]\n   * @property {string} [verb]\n   * @property {boolean} [polling]\n   * @property {HTMLButtonElement|HTMLInputElement|null} [lastButtonClicked]\n   * @property {number} [requestCount]\n   * @property {XMLHttpRequest} [xhr]\n   * @property {(() => void)[]} [queuedRequests]\n   * @property {boolean} [abortable]\n   * @property {boolean} [firstInitCompleted]\n   *\n   * Event data\n   * @property {HtmxTriggerSpecification} [triggerSpec]\n   * @property {EventTarget[]} [handledFor]\n   */ /**\n   * getInternalData retrieves \"private\" data stored by htmx within an element\n   * @param {EventTarget|Event} elt\n   * @returns {HtmxNodeInternalData}\n   */ function getInternalData(elt) {\n        const dataProp = 'htmx-internal-data';\n        let data = elt[dataProp];\n        if (!data) data = elt[dataProp] = {};\n        return data;\n    }\n    /**\n   * toArray converts an ArrayLike object into a real array.\n   * @template T\n   * @param {ArrayLike<T>} arr\n   * @returns {T[]}\n   */ function toArray(arr) {\n        const returnArr = [];\n        if (arr) for(let i = 0; i < arr.length; i++)returnArr.push(arr[i]);\n        return returnArr;\n    }\n    /**\n   * @template T\n   * @param {T[]|NamedNodeMap|HTMLCollection|HTMLFormControlsCollection|ArrayLike<T>} arr\n   * @param {(T) => void} func\n   */ function forEach(arr, func) {\n        if (arr) for(let i = 0; i < arr.length; i++)func(arr[i]);\n    }\n    /**\n   * @param {Element} el\n   * @returns {boolean}\n   */ function isScrolledIntoView(el) {\n        const rect = el.getBoundingClientRect();\n        const elemTop = rect.top;\n        const elemBottom = rect.bottom;\n        return elemTop < window.innerHeight && elemBottom >= 0;\n    }\n    /**\n   * Checks whether the element is in the document (includes shadow roots).\n   * This function this is a slight misnomer; it will return true even for elements in the head.\n   *\n   * @param {Node} elt\n   * @returns {boolean}\n   */ function bodyContains(elt) {\n        return elt.getRootNode({\n            composed: true\n        }) === document;\n    }\n    /**\n   * @param {string} trigger\n   * @returns {string[]}\n   */ function splitOnWhitespace(trigger) {\n        return trigger.trim().split(/\\s+/);\n    }\n    /**\n   * mergeObjects takes all the keys from\n   * obj2 and duplicates them into obj1\n   * @template T1\n   * @template T2\n   * @param {T1} obj1\n   * @param {T2} obj2\n   * @returns {T1 & T2}\n   */ function mergeObjects(obj1, obj2) {\n        for(const key in obj2)if (obj2.hasOwnProperty(key)) // @ts-ignore tsc doesn't seem to properly handle types merging\n        obj1[key] = obj2[key];\n        // @ts-ignore tsc doesn't seem to properly handle types merging\n        return obj1;\n    }\n    /**\n   * @param {string} jString\n   * @returns {any|null}\n   */ function parseJSON(jString) {\n        try {\n            return JSON.parse(jString);\n        } catch (error) {\n            logError(error);\n            return null;\n        }\n    }\n    /**\n   * @returns {boolean}\n   */ function canAccessLocalStorage() {\n        const test = 'htmx:sessionStorageTest';\n        try {\n            sessionStorage.setItem(test, test);\n            sessionStorage.removeItem(test);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n    /**\n   * @param {string} path\n   * @returns {string}\n   */ function normalizePath(path) {\n        // use dummy base URL to allow normalize on path only\n        const url = new URL(path, 'http://x');\n        if (url) path = url.pathname + url.search;\n        // remove trailing slash, unless index page\n        if (path != '/') path = path.replace(/\\/+$/, '');\n        return path;\n    }\n    //= =========================================================================================\n    // public API\n    //= =========================================================================================\n    /**\n   * @param {string} str\n   * @returns {any}\n   */ function internalEval(str) {\n        return maybeEval(getDocument().body, function() {\n            return eval(str);\n        });\n    }\n    /**\n   * Adds a callback for the **htmx:load** event. This can be used to process new content, for example initializing the content with a javascript library\n   *\n   * @see https://htmx.org/api/#onLoad\n   *\n   * @param {(elt: Node) => void} callback the callback to call on newly loaded content\n   * @returns {EventListener}\n   */ function onLoadHelper(callback) {\n        const value = htmx.on('htmx:load', /** @param {CustomEvent} evt */ function(evt) {\n            callback(evt.detail.elt);\n        });\n        return value;\n    }\n    /**\n   * Log all htmx events, useful for debugging.\n   *\n   * @see https://htmx.org/api/#logAll\n   */ function logAll() {\n        htmx.logger = function(elt, event, data) {\n            if (console) console.log(event, elt, data);\n        };\n    }\n    function logNone() {\n        htmx.logger = null;\n    }\n    /**\n   * Finds an element matching the selector\n   *\n   * @see https://htmx.org/api/#find\n   *\n   * @param {ParentNode|string} eltOrSelector  the root element to find the matching element in, inclusive | the selector to match\n   * @param {string} [selector] the selector to match\n   * @returns {Element|null}\n   */ function find(eltOrSelector, selector) {\n        if (typeof eltOrSelector !== 'string') return eltOrSelector.querySelector(selector);\n        else return find(getDocument(), eltOrSelector);\n    }\n    /**\n   * Finds all elements matching the selector\n   *\n   * @see https://htmx.org/api/#findAll\n   *\n   * @param {ParentNode|string} eltOrSelector the root element to find the matching elements in, inclusive | the selector to match\n   * @param {string} [selector] the selector to match\n   * @returns {NodeListOf<Element>}\n   */ function findAll(eltOrSelector, selector) {\n        if (typeof eltOrSelector !== 'string') return eltOrSelector.querySelectorAll(selector);\n        else return findAll(getDocument(), eltOrSelector);\n    }\n    /**\n   * @returns Window\n   */ function getWindow() {\n        return window;\n    }\n    /**\n   * Removes an element from the DOM\n   *\n   * @see https://htmx.org/api/#remove\n   *\n   * @param {Node} elt\n   * @param {number} [delay]\n   */ function removeElement(elt, delay) {\n        elt = resolveTarget(elt);\n        if (delay) getWindow().setTimeout(function() {\n            removeElement(elt);\n            elt = null;\n        }, delay);\n        else parentElt(elt).removeChild(elt);\n    }\n    /**\n   * @param {any} elt\n   * @return {Element|null}\n   */ function asElement(elt) {\n        return elt instanceof Element ? elt : null;\n    }\n    /**\n   * @param {any} elt\n   * @return {HTMLElement|null}\n   */ function asHtmlElement(elt) {\n        return elt instanceof HTMLElement ? elt : null;\n    }\n    /**\n   * @param {any} value\n   * @return {string|null}\n   */ function asString(value) {\n        return typeof value === 'string' ? value : null;\n    }\n    /**\n   * @param {EventTarget} elt\n   * @return {ParentNode|null}\n   */ function asParentNode(elt) {\n        return elt instanceof Element || elt instanceof Document || elt instanceof DocumentFragment ? elt : null;\n    }\n    /**\n   * This method adds a class to the given element.\n   *\n   * @see https://htmx.org/api/#addClass\n   *\n   * @param {Element|string} elt the element to add the class to\n   * @param {string} clazz the class to add\n   * @param {number} [delay] the delay (in milliseconds) before class is added\n   */ function addClassToElement(elt, clazz, delay) {\n        elt = asElement(resolveTarget(elt));\n        if (!elt) return;\n        if (delay) getWindow().setTimeout(function() {\n            addClassToElement(elt, clazz);\n            elt = null;\n        }, delay);\n        else elt.classList && elt.classList.add(clazz);\n    }\n    /**\n   * Removes a class from the given element\n   *\n   * @see https://htmx.org/api/#removeClass\n   *\n   * @param {Node|string} node element to remove the class from\n   * @param {string} clazz the class to remove\n   * @param {number} [delay] the delay (in milliseconds before class is removed)\n   */ function removeClassFromElement(node, clazz, delay) {\n        let elt = asElement(resolveTarget(node));\n        if (!elt) return;\n        if (delay) getWindow().setTimeout(function() {\n            removeClassFromElement(elt, clazz);\n            elt = null;\n        }, delay);\n        else if (elt.classList) {\n            elt.classList.remove(clazz);\n            // if there are no classes left, remove the class attribute\n            if (elt.classList.length === 0) elt.removeAttribute('class');\n        }\n    }\n    /**\n   * Toggles the given class on an element\n   *\n   * @see https://htmx.org/api/#toggleClass\n   *\n   * @param {Element|string} elt the element to toggle the class on\n   * @param {string} clazz the class to toggle\n   */ function toggleClassOnElement(elt, clazz) {\n        elt = resolveTarget(elt);\n        elt.classList.toggle(clazz);\n    }\n    /**\n   * Takes the given class from its siblings, so that among its siblings, only the given element will have the class.\n   *\n   * @see https://htmx.org/api/#takeClass\n   *\n   * @param {Node|string} elt the element that will take the class\n   * @param {string} clazz the class to take\n   */ function takeClassForElement(elt, clazz) {\n        elt = resolveTarget(elt);\n        forEach(elt.parentElement.children, function(child) {\n            removeClassFromElement(child, clazz);\n        });\n        addClassToElement(asElement(elt), clazz);\n    }\n    /**\n   * Finds the closest matching element in the given elements parentage, inclusive of the element\n   *\n   * @see https://htmx.org/api/#closest\n   *\n   * @param {Element|string} elt the element to find the selector from\n   * @param {string} selector the selector to find\n   * @returns {Element|null}\n   */ function closest(elt, selector) {\n        elt = asElement(resolveTarget(elt));\n        if (elt) return elt.closest(selector);\n        return null;\n    }\n    /**\n   * @param {string} str\n   * @param {string} prefix\n   * @returns {boolean}\n   */ function startsWith(str, prefix) {\n        return str.substring(0, prefix.length) === prefix;\n    }\n    /**\n   * @param {string} str\n   * @param {string} suffix\n   * @returns {boolean}\n   */ function endsWith(str, suffix) {\n        return str.substring(str.length - suffix.length) === suffix;\n    }\n    /**\n   * @param {string} selector\n   * @returns {string}\n   */ function normalizeSelector(selector) {\n        const trimmedSelector = selector.trim();\n        if (startsWith(trimmedSelector, '<') && endsWith(trimmedSelector, '/>')) return trimmedSelector.substring(1, trimmedSelector.length - 2);\n        else return trimmedSelector;\n    }\n    /**\n   * @param {Node|Element|Document|string} elt\n   * @param {string} selector\n   * @param {boolean=} global\n   * @returns {(Node|Window)[]}\n   */ function querySelectorAllExt(elt, selector, global) {\n        if (selector.indexOf('global ') === 0) return querySelectorAllExt(elt, selector.slice(7), true);\n        elt = resolveTarget(elt);\n        const parts = [];\n        {\n            let chevronsCount = 0;\n            let offset = 0;\n            for(let i = 0; i < selector.length; i++){\n                const char = selector[i];\n                if (char === ',' && chevronsCount === 0) {\n                    parts.push(selector.substring(offset, i));\n                    offset = i + 1;\n                    continue;\n                }\n                if (char === '<') chevronsCount++;\n                else if (char === '/' && i < selector.length - 1 && selector[i + 1] === '>') chevronsCount--;\n            }\n            if (offset < selector.length) parts.push(selector.substring(offset));\n        }\n        const result = [];\n        const unprocessedParts = [];\n        while(parts.length > 0){\n            const selector = normalizeSelector(parts.shift());\n            let item;\n            if (selector.indexOf('closest ') === 0) item = closest(asElement(elt), normalizeSelector(selector.slice(8)));\n            else if (selector.indexOf('find ') === 0) item = find(asParentNode(elt), normalizeSelector(selector.slice(5)));\n            else if (selector === 'next' || selector === 'nextElementSibling') item = asElement(elt).nextElementSibling;\n            else if (selector.indexOf('next ') === 0) item = scanForwardQuery(elt, normalizeSelector(selector.slice(5)), !!global);\n            else if (selector === 'previous' || selector === 'previousElementSibling') item = asElement(elt).previousElementSibling;\n            else if (selector.indexOf('previous ') === 0) item = scanBackwardsQuery(elt, normalizeSelector(selector.slice(9)), !!global);\n            else if (selector === 'document') item = document;\n            else if (selector === 'window') item = window;\n            else if (selector === 'body') item = document.body;\n            else if (selector === 'root') item = getRootNode(elt, !!global);\n            else if (selector === 'host') item = /** @type ShadowRoot */ elt.getRootNode().host;\n            else unprocessedParts.push(selector);\n            if (item) result.push(item);\n        }\n        if (unprocessedParts.length > 0) {\n            const standardSelector = unprocessedParts.join(',');\n            const rootNode = asParentNode(getRootNode(elt, !!global));\n            result.push(...toArray(rootNode.querySelectorAll(standardSelector)));\n        }\n        return result;\n    }\n    /**\n   * @param {Node} start\n   * @param {string} match\n   * @param {boolean} global\n   * @returns {Element}\n   */ var scanForwardQuery = function(start, match, global) {\n        const results = asParentNode(getRootNode(start, global)).querySelectorAll(match);\n        for(let i = 0; i < results.length; i++){\n            const elt = results[i];\n            if (elt.compareDocumentPosition(start) === Node.DOCUMENT_POSITION_PRECEDING) return elt;\n        }\n    };\n    /**\n   * @param {Node} start\n   * @param {string} match\n   * @param {boolean} global\n   * @returns {Element}\n   */ var scanBackwardsQuery = function(start, match, global) {\n        const results = asParentNode(getRootNode(start, global)).querySelectorAll(match);\n        for(let i = results.length - 1; i >= 0; i--){\n            const elt = results[i];\n            if (elt.compareDocumentPosition(start) === Node.DOCUMENT_POSITION_FOLLOWING) return elt;\n        }\n    };\n    /**\n   * @param {Node|string} eltOrSelector\n   * @param {string=} selector\n   * @returns {Node|Window}\n   */ function querySelectorExt(eltOrSelector, selector) {\n        if (typeof eltOrSelector !== 'string') return querySelectorAllExt(eltOrSelector, selector)[0];\n        else return querySelectorAllExt(getDocument().body, eltOrSelector)[0];\n    }\n    /**\n   * @template {EventTarget} T\n   * @param {T|string} eltOrSelector\n   * @param {T} [context]\n   * @returns {Element|T|null}\n   */ function resolveTarget(eltOrSelector, context) {\n        if (typeof eltOrSelector === 'string') return find(asParentNode(context) || document, eltOrSelector);\n        else return eltOrSelector;\n    }\n    /**\n   * @typedef {keyof HTMLElementEventMap|string} AnyEventName\n   */ /**\n   * @typedef {Object} EventArgs\n   * @property {EventTarget} target\n   * @property {AnyEventName} event\n   * @property {EventListener} listener\n   * @property {Object|boolean} options\n   */ /**\n   * @param {EventTarget|AnyEventName} arg1\n   * @param {AnyEventName|EventListener} arg2\n   * @param {EventListener|Object|boolean} [arg3]\n   * @param {Object|boolean} [arg4]\n   * @returns {EventArgs}\n   */ function processEventArgs(arg1, arg2, arg3, arg4) {\n        if (isFunction(arg2)) return {\n            target: getDocument().body,\n            event: asString(arg1),\n            listener: arg2,\n            options: arg3\n        };\n        else return {\n            target: resolveTarget(arg1),\n            event: asString(arg2),\n            listener: arg3,\n            options: arg4\n        };\n    }\n    /**\n   * Adds an event listener to an element\n   *\n   * @see https://htmx.org/api/#on\n   *\n   * @param {EventTarget|string} arg1 the element to add the listener to | the event name to add the listener for\n   * @param {string|EventListener} arg2 the event name to add the listener for | the listener to add\n   * @param {EventListener|Object|boolean} [arg3] the listener to add | options to add\n   * @param {Object|boolean} [arg4] options to add\n   * @returns {EventListener}\n   */ function addEventListenerImpl(arg1, arg2, arg3, arg4) {\n        ready(function() {\n            const eventArgs = processEventArgs(arg1, arg2, arg3, arg4);\n            eventArgs.target.addEventListener(eventArgs.event, eventArgs.listener, eventArgs.options);\n        });\n        const b = isFunction(arg2);\n        return b ? arg2 : arg3;\n    }\n    /**\n   * Removes an event listener from an element\n   *\n   * @see https://htmx.org/api/#off\n   *\n   * @param {EventTarget|string} arg1 the element to remove the listener from | the event name to remove the listener from\n   * @param {string|EventListener} arg2 the event name to remove the listener from | the listener to remove\n   * @param {EventListener} [arg3] the listener to remove\n   * @returns {EventListener}\n   */ function removeEventListenerImpl(arg1, arg2, arg3) {\n        ready(function() {\n            const eventArgs = processEventArgs(arg1, arg2, arg3);\n            eventArgs.target.removeEventListener(eventArgs.event, eventArgs.listener);\n        });\n        return isFunction(arg2) ? arg2 : arg3;\n    }\n    //= ===================================================================\n    // Node processing\n    //= ===================================================================\n    const DUMMY_ELT = getDocument().createElement('output') // dummy element for bad selectors\n    ;\n    /**\n   * @param {Element} elt\n   * @param {string} attrName\n   * @returns {(Node|Window)[]}\n   */ function findAttributeTargets(elt, attrName) {\n        const attrTarget = getClosestAttributeValue(elt, attrName);\n        if (attrTarget) {\n            if (attrTarget === 'this') return [\n                findThisElement(elt, attrName)\n            ];\n            else {\n                const result = querySelectorAllExt(elt, attrTarget);\n                // find `inherit` whole word in value, make sure it's surrounded by commas or is at the start/end of string\n                const shouldInherit = /(^|,)(\\s*)inherit(\\s*)($|,)/.test(attrTarget);\n                if (shouldInherit) {\n                    const eltToInheritFrom = asElement(getClosestMatch(elt, function(parent) {\n                        return parent !== elt && hasAttribute(asElement(parent), attrName);\n                    }));\n                    if (eltToInheritFrom) result.push(...findAttributeTargets(eltToInheritFrom, attrName));\n                }\n                if (result.length === 0) {\n                    logError('The selector \"' + attrTarget + '\" on ' + attrName + ' returned no matches!');\n                    return [\n                        DUMMY_ELT\n                    ];\n                } else return result;\n            }\n        }\n    }\n    /**\n   * @param {Element} elt\n   * @param {string} attribute\n   * @returns {Element|null}\n   */ function findThisElement(elt, attribute) {\n        return asElement(getClosestMatch(elt, function(elt) {\n            return getAttributeValue(asElement(elt), attribute) != null;\n        }));\n    }\n    /**\n   * @param {Element} elt\n   * @returns {Node|Window|null}\n   */ function getTarget(elt) {\n        const targetStr = getClosestAttributeValue(elt, 'hx-target');\n        if (targetStr) {\n            if (targetStr === 'this') return findThisElement(elt, 'hx-target');\n            else return querySelectorExt(elt, targetStr);\n        } else {\n            const data = getInternalData(elt);\n            if (data.boosted) return getDocument().body;\n            else return elt;\n        }\n    }\n    /**\n   * @param {string} name\n   * @returns {boolean}\n   */ function shouldSettleAttribute(name) {\n        return htmx.config.attributesToSettle.includes(name);\n    }\n    /**\n   * @param {Element} mergeTo\n   * @param {Element} mergeFrom\n   */ function cloneAttributes(mergeTo, mergeFrom) {\n        forEach(mergeTo.attributes, function(attr) {\n            if (!mergeFrom.hasAttribute(attr.name) && shouldSettleAttribute(attr.name)) mergeTo.removeAttribute(attr.name);\n        });\n        forEach(mergeFrom.attributes, function(attr) {\n            if (shouldSettleAttribute(attr.name)) mergeTo.setAttribute(attr.name, attr.value);\n        });\n    }\n    /**\n   * @param {HtmxSwapStyle} swapStyle\n   * @param {Element} target\n   * @returns {boolean}\n   */ function isInlineSwap(swapStyle, target) {\n        const extensions = getExtensions(target);\n        for(let i = 0; i < extensions.length; i++){\n            const extension = extensions[i];\n            try {\n                if (extension.isInlineSwap(swapStyle)) return true;\n            } catch (e) {\n                logError(e);\n            }\n        }\n        return swapStyle === 'outerHTML';\n    }\n    /**\n   * @param {string} oobValue\n   * @param {Element} oobElement\n   * @param {HtmxSettleInfo} settleInfo\n   * @param {Node|Document} [rootNode]\n   * @returns\n   */ function oobSwap(oobValue, oobElement, settleInfo, rootNode) {\n        rootNode = rootNode || getDocument();\n        let selector = '#' + CSS.escape(getRawAttribute(oobElement, 'id'));\n        /** @type HtmxSwapStyle */ let swapStyle = 'outerHTML';\n        if (oobValue === 'true') ;\n        else if (oobValue.indexOf(':') > 0) {\n            swapStyle = oobValue.substring(0, oobValue.indexOf(':'));\n            selector = oobValue.substring(oobValue.indexOf(':') + 1);\n        } else swapStyle = oobValue;\n        oobElement.removeAttribute('hx-swap-oob');\n        oobElement.removeAttribute('data-hx-swap-oob');\n        const targets = querySelectorAllExt(rootNode, selector, false);\n        if (targets.length) {\n            forEach(targets, function(target) {\n                let fragment;\n                const oobElementClone = oobElement.cloneNode(true);\n                fragment = getDocument().createDocumentFragment();\n                fragment.appendChild(oobElementClone);\n                if (!isInlineSwap(swapStyle, target)) fragment = asParentNode(oobElementClone) // if this is not an inline swap, we use the content of the node, not the node itself\n                ;\n                const beforeSwapDetails = {\n                    shouldSwap: true,\n                    target: target,\n                    fragment: fragment\n                };\n                if (!triggerEvent(target, 'htmx:oobBeforeSwap', beforeSwapDetails)) return;\n                target = beforeSwapDetails.target // allow re-targeting\n                ;\n                if (beforeSwapDetails.shouldSwap) {\n                    handlePreservedElements(fragment);\n                    swapWithStyle(swapStyle, target, target, fragment, settleInfo);\n                    restorePreservedElements();\n                }\n                forEach(settleInfo.elts, function(elt) {\n                    triggerEvent(elt, 'htmx:oobAfterSwap', beforeSwapDetails);\n                });\n            });\n            oobElement.parentNode.removeChild(oobElement);\n        } else {\n            oobElement.parentNode.removeChild(oobElement);\n            triggerErrorEvent(getDocument().body, 'htmx:oobErrorNoTarget', {\n                content: oobElement\n            });\n        }\n        return oobValue;\n    }\n    function restorePreservedElements() {\n        const pantry = find('#--htmx-preserve-pantry--');\n        if (pantry) {\n            for (const preservedElt of [\n                ...pantry.children\n            ]){\n                const existingElement = find('#' + preservedElt.id);\n                // @ts-ignore - use proposed moveBefore feature\n                existingElement.parentNode.moveBefore(preservedElt, existingElement);\n                existingElement.remove();\n            }\n            pantry.remove();\n        }\n    }\n    /**\n   * @param {DocumentFragment|ParentNode} fragment\n   */ function handlePreservedElements(fragment) {\n        forEach(findAll(fragment, '[hx-preserve], [data-hx-preserve]'), function(preservedElt) {\n            const id = getAttributeValue(preservedElt, 'id');\n            const existingElement = getDocument().getElementById(id);\n            if (existingElement != null) {\n                if (preservedElt.moveBefore) {\n                    // get or create a storage spot for stuff\n                    let pantry = find('#--htmx-preserve-pantry--');\n                    if (pantry == null) {\n                        getDocument().body.insertAdjacentHTML('afterend', \"<div id='--htmx-preserve-pantry--'></div>\");\n                        pantry = find('#--htmx-preserve-pantry--');\n                    }\n                    // @ts-ignore - use proposed moveBefore feature\n                    pantry.moveBefore(existingElement, null);\n                } else preservedElt.parentNode.replaceChild(existingElement, preservedElt);\n            }\n        });\n    }\n    /**\n   * @param {Node} parentNode\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */ function handleAttributes(parentNode, fragment, settleInfo) {\n        forEach(fragment.querySelectorAll('[id]'), function(newNode) {\n            const id = getRawAttribute(newNode, 'id');\n            if (id && id.length > 0) {\n                const normalizedId = id.replace(\"'\", \"\\\\'\");\n                const normalizedTag = newNode.tagName.replace(':', '\\\\:');\n                const parentElt = asParentNode(parentNode);\n                const oldNode = parentElt && parentElt.querySelector(normalizedTag + \"[id='\" + normalizedId + \"']\");\n                if (oldNode && oldNode !== parentElt) {\n                    const newAttributes = newNode.cloneNode();\n                    cloneAttributes(newNode, oldNode);\n                    settleInfo.tasks.push(function() {\n                        cloneAttributes(newNode, newAttributes);\n                    });\n                }\n            }\n        });\n    }\n    /**\n   * @param {Node} child\n   * @returns {HtmxSettleTask}\n   */ function makeAjaxLoadTask(child) {\n        return function() {\n            removeClassFromElement(child, htmx.config.addedClass);\n            processNode(asElement(child));\n            processFocus(asParentNode(child));\n            triggerEvent(child, 'htmx:load');\n        };\n    }\n    /**\n   * @param {ParentNode} child\n   */ function processFocus(child) {\n        const autofocus = '[autofocus]';\n        const autoFocusedElt = asHtmlElement(matches(child, autofocus) ? child : child.querySelector(autofocus));\n        if (autoFocusedElt != null) autoFocusedElt.focus();\n    }\n    /**\n   * @param {Node} parentNode\n   * @param {Node} insertBefore\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */ function insertNodesBefore(parentNode, insertBefore, fragment, settleInfo) {\n        handleAttributes(parentNode, fragment, settleInfo);\n        while(fragment.childNodes.length > 0){\n            const child = fragment.firstChild;\n            addClassToElement(asElement(child), htmx.config.addedClass);\n            parentNode.insertBefore(child, insertBefore);\n            if (child.nodeType !== Node.TEXT_NODE && child.nodeType !== Node.COMMENT_NODE) settleInfo.tasks.push(makeAjaxLoadTask(child));\n        }\n    }\n    /**\n   * based on https://gist.github.com/hyamamoto/fd435505d29ebfa3d9716fd2be8d42f0,\n   * derived from Java's string hashcode implementation\n   * @param {string} string\n   * @param {number} hash\n   * @returns {number}\n   */ function stringHash(string, hash) {\n        let char = 0;\n        while(char < string.length)hash = (hash << 5) - hash + string.charCodeAt(char++) | 0 // bitwise or ensures we have a 32-bit int\n        ;\n        return hash;\n    }\n    /**\n   * @param {Element} elt\n   * @returns {number}\n   */ function attributeHash(elt) {\n        let hash = 0;\n        for(let i = 0; i < elt.attributes.length; i++){\n            const attribute = elt.attributes[i];\n            if (attribute.value) {\n                hash = stringHash(attribute.name, hash);\n                hash = stringHash(attribute.value, hash);\n            }\n        }\n        return hash;\n    }\n    /**\n   * @param {EventTarget} elt\n   */ function deInitOnHandlers(elt) {\n        const internalData = getInternalData(elt);\n        if (internalData.onHandlers) {\n            for(let i = 0; i < internalData.onHandlers.length; i++){\n                const handlerInfo = internalData.onHandlers[i];\n                removeEventListenerImpl(elt, handlerInfo.event, handlerInfo.listener);\n            }\n            delete internalData.onHandlers;\n        }\n    }\n    /**\n   * @param {Node} element\n   */ function deInitNode(element) {\n        const internalData = getInternalData(element);\n        if (internalData.timeout) clearTimeout(internalData.timeout);\n        if (internalData.listenerInfos) forEach(internalData.listenerInfos, function(info) {\n            if (info.on) removeEventListenerImpl(info.on, info.trigger, info.listener);\n        });\n        deInitOnHandlers(element);\n        forEach(Object.keys(internalData), function(key) {\n            if (key !== 'firstInitCompleted') delete internalData[key];\n        });\n    }\n    /**\n   * @param {Node} element\n   */ function cleanUpElement(element) {\n        triggerEvent(element, 'htmx:beforeCleanupElement');\n        deInitNode(element);\n        // @ts-ignore\n        forEach(element.children, function(child) {\n            cleanUpElement(child);\n        });\n    }\n    /**\n   * @param {Element} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */ function swapOuterHTML(target, fragment, settleInfo) {\n        if (target.tagName === 'BODY') return swapInnerHTML(target, fragment, settleInfo);\n        /** @type {Node} */ let newElt;\n        const eltBeforeNewContent = target.previousSibling;\n        const parentNode = parentElt(target);\n        if (!parentNode) return;\n        insertNodesBefore(parentNode, target, fragment, settleInfo);\n        if (eltBeforeNewContent == null) newElt = parentNode.firstChild;\n        else newElt = eltBeforeNewContent.nextSibling;\n        settleInfo.elts = settleInfo.elts.filter(function(e) {\n            return e !== target;\n        });\n        // scan through all newly added content and add all elements to the settle info so we trigger\n        // events properly on them\n        while(newElt && newElt !== target){\n            if (newElt instanceof Element) settleInfo.elts.push(newElt);\n            newElt = newElt.nextSibling;\n        }\n        cleanUpElement(target);\n        target.remove();\n    }\n    /**\n   * @param {Element} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */ function swapAfterBegin(target, fragment, settleInfo) {\n        return insertNodesBefore(target, target.firstChild, fragment, settleInfo);\n    }\n    /**\n   * @param {Element} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */ function swapBeforeBegin(target, fragment, settleInfo) {\n        return insertNodesBefore(parentElt(target), target, fragment, settleInfo);\n    }\n    /**\n   * @param {Element} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */ function swapBeforeEnd(target, fragment, settleInfo) {\n        return insertNodesBefore(target, null, fragment, settleInfo);\n    }\n    /**\n   * @param {Element} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */ function swapAfterEnd(target, fragment, settleInfo) {\n        return insertNodesBefore(parentElt(target), target.nextSibling, fragment, settleInfo);\n    }\n    /**\n   * @param {Element} target\n   */ function swapDelete(target) {\n        cleanUpElement(target);\n        const parent = parentElt(target);\n        if (parent) return parent.removeChild(target);\n    }\n    /**\n   * @param {Element} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */ function swapInnerHTML(target, fragment, settleInfo) {\n        const firstChild = target.firstChild;\n        insertNodesBefore(target, firstChild, fragment, settleInfo);\n        if (firstChild) {\n            while(firstChild.nextSibling){\n                cleanUpElement(firstChild.nextSibling);\n                target.removeChild(firstChild.nextSibling);\n            }\n            cleanUpElement(firstChild);\n            target.removeChild(firstChild);\n        }\n    }\n    /**\n   * @param {HtmxSwapStyle} swapStyle\n   * @param {Element} elt\n   * @param {Element} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */ function swapWithStyle(swapStyle, elt, target, fragment, settleInfo) {\n        switch(swapStyle){\n            case 'none':\n                return;\n            case 'outerHTML':\n                swapOuterHTML(target, fragment, settleInfo);\n                return;\n            case 'afterbegin':\n                swapAfterBegin(target, fragment, settleInfo);\n                return;\n            case 'beforebegin':\n                swapBeforeBegin(target, fragment, settleInfo);\n                return;\n            case 'beforeend':\n                swapBeforeEnd(target, fragment, settleInfo);\n                return;\n            case 'afterend':\n                swapAfterEnd(target, fragment, settleInfo);\n                return;\n            case 'delete':\n                swapDelete(target);\n                return;\n            default:\n                var extensions = getExtensions(elt);\n                for(let i = 0; i < extensions.length; i++){\n                    const ext = extensions[i];\n                    try {\n                        const newElements = ext.handleSwap(swapStyle, target, fragment, settleInfo);\n                        if (newElements) {\n                            if (Array.isArray(newElements)) // if handleSwap returns an array (like) of elements, we handle them\n                            for(let j = 0; j < newElements.length; j++){\n                                const child = newElements[j];\n                                if (child.nodeType !== Node.TEXT_NODE && child.nodeType !== Node.COMMENT_NODE) settleInfo.tasks.push(makeAjaxLoadTask(child));\n                            }\n                            return;\n                        }\n                    } catch (e) {\n                        logError(e);\n                    }\n                }\n                if (swapStyle === 'innerHTML') swapInnerHTML(target, fragment, settleInfo);\n                else swapWithStyle(htmx.config.defaultSwapStyle, elt, target, fragment, settleInfo);\n        }\n    }\n    /**\n   * @param {DocumentFragment} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   * @param {Node|Document} [rootNode]\n   */ function findAndSwapOobElements(fragment, settleInfo, rootNode) {\n        var oobElts = findAll(fragment, '[hx-swap-oob], [data-hx-swap-oob]');\n        forEach(oobElts, function(oobElement) {\n            if (htmx.config.allowNestedOobSwaps || oobElement.parentElement === null) {\n                const oobValue = getAttributeValue(oobElement, 'hx-swap-oob');\n                if (oobValue != null) oobSwap(oobValue, oobElement, settleInfo, rootNode);\n            } else {\n                oobElement.removeAttribute('hx-swap-oob');\n                oobElement.removeAttribute('data-hx-swap-oob');\n            }\n        });\n        return oobElts.length > 0;\n    }\n    /**\n   * Implements complete swapping pipeline, including: delay, view transitions, focus and selection preservation,\n   * title updates, scroll, OOB swapping, normal swapping and settling\n   * @param {string|Element} target\n   * @param {string} content\n   * @param {HtmxSwapSpecification} swapSpec\n   * @param {SwapOptions} [swapOptions]\n   */ function swap(target, content, swapSpec, swapOptions) {\n        if (!swapOptions) swapOptions = {};\n        // optional transition API promise callbacks\n        let settleResolve = null;\n        let settleReject = null;\n        let doSwap = function() {\n            maybeCall(swapOptions.beforeSwapCallback);\n            target = resolveTarget(target);\n            const rootNode = swapOptions.contextElement ? getRootNode(swapOptions.contextElement, false) : getDocument();\n            // preserve focus and selection\n            const activeElt = document.activeElement;\n            let selectionInfo = {};\n            selectionInfo = {\n                elt: activeElt,\n                // @ts-ignore\n                start: activeElt ? activeElt.selectionStart : null,\n                // @ts-ignore\n                end: activeElt ? activeElt.selectionEnd : null\n            };\n            const settleInfo = makeSettleInfo(target);\n            // For text content swaps, don't parse the response as HTML, just insert it\n            if (swapSpec.swapStyle === 'textContent') target.textContent = content;\n            else {\n                let fragment = makeFragment(content);\n                settleInfo.title = swapOptions.title || fragment.title;\n                if (swapOptions.historyRequest) // @ts-ignore fragment can be a parentNode Element\n                fragment = fragment.querySelector('[hx-history-elt],[data-hx-history-elt]') || fragment;\n                // select-oob swaps\n                if (swapOptions.selectOOB) {\n                    const oobSelectValues = swapOptions.selectOOB.split(',');\n                    for(let i = 0; i < oobSelectValues.length; i++){\n                        const oobSelectValue = oobSelectValues[i].split(':', 2);\n                        let id = oobSelectValue[0].trim();\n                        if (id.indexOf('#') === 0) id = id.substring(1);\n                        const oobValue = oobSelectValue[1] || 'true';\n                        const oobElement = fragment.querySelector('#' + id);\n                        if (oobElement) oobSwap(oobValue, oobElement, settleInfo, rootNode);\n                    }\n                }\n                // oob swaps\n                findAndSwapOobElements(fragment, settleInfo, rootNode);\n                forEach(findAll(fragment, 'template'), /** @param {HTMLTemplateElement} template */ function(template) {\n                    if (template.content && findAndSwapOobElements(template.content, settleInfo, rootNode)) // Avoid polluting the DOM with empty templates that were only used to encapsulate oob swap\n                    template.remove();\n                });\n                // normal swap\n                if (swapOptions.select) {\n                    const newFragment = getDocument().createDocumentFragment();\n                    forEach(fragment.querySelectorAll(swapOptions.select), function(node) {\n                        newFragment.appendChild(node);\n                    });\n                    fragment = newFragment;\n                }\n                handlePreservedElements(fragment);\n                swapWithStyle(swapSpec.swapStyle, swapOptions.contextElement, target, fragment, settleInfo);\n                restorePreservedElements();\n            }\n            // apply saved focus and selection information to swapped content\n            if (selectionInfo.elt && !bodyContains(selectionInfo.elt) && getRawAttribute(selectionInfo.elt, 'id')) {\n                const newActiveElt = document.getElementById(getRawAttribute(selectionInfo.elt, 'id'));\n                const focusOptions = {\n                    preventScroll: swapSpec.focusScroll !== undefined ? !swapSpec.focusScroll : !htmx.config.defaultFocusScroll\n                };\n                if (newActiveElt) {\n                    // @ts-ignore\n                    if (selectionInfo.start && newActiveElt.setSelectionRange) try {\n                        // @ts-ignore\n                        newActiveElt.setSelectionRange(selectionInfo.start, selectionInfo.end);\n                    } catch (e) {\n                    // the setSelectionRange method is present on fields that don't support it, so just let this fail\n                    }\n                    newActiveElt.focus(focusOptions);\n                }\n            }\n            target.classList.remove(htmx.config.swappingClass);\n            forEach(settleInfo.elts, function(elt) {\n                if (elt.classList) elt.classList.add(htmx.config.settlingClass);\n                triggerEvent(elt, 'htmx:afterSwap', swapOptions.eventInfo);\n            });\n            maybeCall(swapOptions.afterSwapCallback);\n            // merge in new title after swap but before settle\n            if (!swapSpec.ignoreTitle) handleTitle(settleInfo.title);\n            // settle\n            const doSettle = function() {\n                forEach(settleInfo.tasks, function(task) {\n                    task.call();\n                });\n                forEach(settleInfo.elts, function(elt) {\n                    if (elt.classList) elt.classList.remove(htmx.config.settlingClass);\n                    triggerEvent(elt, 'htmx:afterSettle', swapOptions.eventInfo);\n                });\n                if (swapOptions.anchor) {\n                    const anchorTarget = asElement(resolveTarget('#' + swapOptions.anchor));\n                    if (anchorTarget) anchorTarget.scrollIntoView({\n                        block: 'start',\n                        behavior: 'auto'\n                    });\n                }\n                updateScrollState(settleInfo.elts, swapSpec);\n                maybeCall(swapOptions.afterSettleCallback);\n                maybeCall(settleResolve);\n            };\n            if (swapSpec.settleDelay > 0) getWindow().setTimeout(doSettle, swapSpec.settleDelay);\n            else doSettle();\n        };\n        let shouldTransition = htmx.config.globalViewTransitions;\n        if (swapSpec.hasOwnProperty('transition')) shouldTransition = swapSpec.transition;\n        const elt = swapOptions.contextElement || getDocument();\n        if (shouldTransition && triggerEvent(elt, 'htmx:beforeTransition', swapOptions.eventInfo) && typeof Promise !== 'undefined' && // @ts-ignore experimental feature atm\n        document.startViewTransition) {\n            const settlePromise = new Promise(function(_resolve, _reject) {\n                settleResolve = _resolve;\n                settleReject = _reject;\n            });\n            // wrap the original doSwap() in a call to startViewTransition()\n            const innerDoSwap = doSwap;\n            doSwap = function() {\n                // @ts-ignore experimental feature atm\n                document.startViewTransition(function() {\n                    innerDoSwap();\n                    return settlePromise;\n                });\n            };\n        }\n        try {\n            if (swapSpec?.swapDelay && swapSpec.swapDelay > 0) getWindow().setTimeout(doSwap, swapSpec.swapDelay);\n            else doSwap();\n        } catch (e) {\n            triggerErrorEvent(elt, 'htmx:swapError', swapOptions.eventInfo);\n            maybeCall(settleReject);\n            throw e;\n        }\n    }\n    /**\n   * @param {XMLHttpRequest} xhr\n   * @param {string} header\n   * @param {EventTarget} elt\n   */ function handleTriggerHeader(xhr, header, elt) {\n        const triggerBody = xhr.getResponseHeader(header);\n        if (triggerBody.indexOf('{') === 0) {\n            const triggers = parseJSON(triggerBody);\n            for(const eventName in triggers)if (triggers.hasOwnProperty(eventName)) {\n                let detail = triggers[eventName];\n                if (isRawObject(detail)) // @ts-ignore\n                elt = detail.target !== undefined ? detail.target : elt;\n                else detail = {\n                    value: detail\n                };\n                triggerEvent(elt, eventName, detail);\n            }\n        } else {\n            const eventNames = triggerBody.split(',');\n            for(let i = 0; i < eventNames.length; i++)triggerEvent(elt, eventNames[i].trim(), []);\n        }\n    }\n    const WHITESPACE = /\\s/;\n    const WHITESPACE_OR_COMMA = /[\\s,]/;\n    const SYMBOL_START = /[_$a-zA-Z]/;\n    const SYMBOL_CONT = /[_$a-zA-Z0-9]/;\n    const STRINGISH_START = [\n        '\"',\n        \"'\",\n        '/'\n    ];\n    const NOT_WHITESPACE = /[^\\s]/;\n    const COMBINED_SELECTOR_START = /[{(]/;\n    const COMBINED_SELECTOR_END = /[})]/;\n    /**\n   * @param {string} str\n   * @returns {string[]}\n   */ function tokenizeString(str) {\n        /** @type string[] */ const tokens = [];\n        let position = 0;\n        while(position < str.length){\n            if (SYMBOL_START.exec(str.charAt(position))) {\n                var startPosition = position;\n                while(SYMBOL_CONT.exec(str.charAt(position + 1)))position++;\n                tokens.push(str.substring(startPosition, position + 1));\n            } else if (STRINGISH_START.indexOf(str.charAt(position)) !== -1) {\n                const startChar = str.charAt(position);\n                var startPosition = position;\n                position++;\n                while(position < str.length && str.charAt(position) !== startChar){\n                    if (str.charAt(position) === '\\\\') position++;\n                    position++;\n                }\n                tokens.push(str.substring(startPosition, position + 1));\n            } else {\n                const symbol = str.charAt(position);\n                tokens.push(symbol);\n            }\n            position++;\n        }\n        return tokens;\n    }\n    /**\n   * @param {string} token\n   * @param {string|null} last\n   * @param {string} paramName\n   * @returns {boolean}\n   */ function isPossibleRelativeReference(token, last, paramName) {\n        return SYMBOL_START.exec(token.charAt(0)) && token !== 'true' && token !== 'false' && token !== 'this' && token !== paramName && last !== '.';\n    }\n    /**\n   * @param {EventTarget|string} elt\n   * @param {string[]} tokens\n   * @param {string} paramName\n   * @returns {ConditionalFunction|null}\n   */ function maybeGenerateConditional(elt, tokens, paramName) {\n        if (tokens[0] === '[') {\n            tokens.shift();\n            let bracketCount = 1;\n            let conditionalSource = ' return (function(' + paramName + '){ return (';\n            let last = null;\n            while(tokens.length > 0){\n                const token = tokens[0];\n                // @ts-ignore For some reason tsc doesn't understand the shift call, and thinks we're comparing the same value here, i.e. '[' vs ']'\n                if (token === ']') {\n                    bracketCount--;\n                    if (bracketCount === 0) {\n                        if (last === null) conditionalSource = conditionalSource + 'true';\n                        tokens.shift();\n                        conditionalSource += ')})';\n                        try {\n                            const conditionFunction = maybeEval(elt, function() {\n                                return Function(conditionalSource)();\n                            }, function() {\n                                return true;\n                            });\n                            conditionFunction.source = conditionalSource;\n                            return conditionFunction;\n                        } catch (e) {\n                            triggerErrorEvent(getDocument().body, 'htmx:syntax:error', {\n                                error: e,\n                                source: conditionalSource\n                            });\n                            return null;\n                        }\n                    }\n                } else if (token === '[') bracketCount++;\n                if (isPossibleRelativeReference(token, last, paramName)) conditionalSource += '((' + paramName + '.' + token + ') ? (' + paramName + '.' + token + ') : (window.' + token + '))';\n                else conditionalSource = conditionalSource + token;\n                last = tokens.shift();\n            }\n        }\n    }\n    /**\n   * @param {string[]} tokens\n   * @param {RegExp} match\n   * @returns {string}\n   */ function consumeUntil(tokens, match) {\n        let result = '';\n        while(tokens.length > 0 && !match.test(tokens[0]))result += tokens.shift();\n        return result;\n    }\n    /**\n   * @param {string[]} tokens\n   * @returns {string}\n   */ function consumeCSSSelector(tokens) {\n        let result;\n        if (tokens.length > 0 && COMBINED_SELECTOR_START.test(tokens[0])) {\n            tokens.shift();\n            result = consumeUntil(tokens, COMBINED_SELECTOR_END).trim();\n            tokens.shift();\n        } else result = consumeUntil(tokens, WHITESPACE_OR_COMMA);\n        return result;\n    }\n    const INPUT_SELECTOR = 'input, textarea, select';\n    /**\n   * @param {Element} elt\n   * @param {string} explicitTrigger\n   * @param {Object} cache for trigger specs\n   * @returns {HtmxTriggerSpecification[]}\n   */ function parseAndCacheTrigger(elt, explicitTrigger, cache) {\n        /** @type HtmxTriggerSpecification[] */ const triggerSpecs = [];\n        const tokens = tokenizeString(explicitTrigger);\n        do {\n            consumeUntil(tokens, NOT_WHITESPACE);\n            const initialLength = tokens.length;\n            const trigger = consumeUntil(tokens, /[,\\[\\s]/);\n            if (trigger !== '') {\n                if (trigger === 'every') {\n                    /** @type HtmxTriggerSpecification */ const every = {\n                        trigger: 'every'\n                    };\n                    consumeUntil(tokens, NOT_WHITESPACE);\n                    every.pollInterval = parseInterval(consumeUntil(tokens, /[,\\[\\s]/));\n                    consumeUntil(tokens, NOT_WHITESPACE);\n                    var eventFilter = maybeGenerateConditional(elt, tokens, 'event');\n                    if (eventFilter) every.eventFilter = eventFilter;\n                    triggerSpecs.push(every);\n                } else {\n                    /** @type HtmxTriggerSpecification */ const triggerSpec = {\n                        trigger: trigger\n                    };\n                    var eventFilter = maybeGenerateConditional(elt, tokens, 'event');\n                    if (eventFilter) triggerSpec.eventFilter = eventFilter;\n                    consumeUntil(tokens, NOT_WHITESPACE);\n                    while(tokens.length > 0 && tokens[0] !== ','){\n                        const token = tokens.shift();\n                        if (token === 'changed') triggerSpec.changed = true;\n                        else if (token === 'once') triggerSpec.once = true;\n                        else if (token === 'consume') triggerSpec.consume = true;\n                        else if (token === 'delay' && tokens[0] === ':') {\n                            tokens.shift();\n                            triggerSpec.delay = parseInterval(consumeUntil(tokens, WHITESPACE_OR_COMMA));\n                        } else if (token === 'from' && tokens[0] === ':') {\n                            tokens.shift();\n                            if (COMBINED_SELECTOR_START.test(tokens[0])) var from_arg = consumeCSSSelector(tokens);\n                            else {\n                                var from_arg = consumeUntil(tokens, WHITESPACE_OR_COMMA);\n                                if (from_arg === 'closest' || from_arg === 'find' || from_arg === 'next' || from_arg === 'previous') {\n                                    tokens.shift();\n                                    const selector = consumeCSSSelector(tokens);\n                                    // `next` and `previous` allow a selector-less syntax\n                                    if (selector.length > 0) from_arg += ' ' + selector;\n                                }\n                            }\n                            triggerSpec.from = from_arg;\n                        } else if (token === 'target' && tokens[0] === ':') {\n                            tokens.shift();\n                            triggerSpec.target = consumeCSSSelector(tokens);\n                        } else if (token === 'throttle' && tokens[0] === ':') {\n                            tokens.shift();\n                            triggerSpec.throttle = parseInterval(consumeUntil(tokens, WHITESPACE_OR_COMMA));\n                        } else if (token === 'queue' && tokens[0] === ':') {\n                            tokens.shift();\n                            triggerSpec.queue = consumeUntil(tokens, WHITESPACE_OR_COMMA);\n                        } else if (token === 'root' && tokens[0] === ':') {\n                            tokens.shift();\n                            triggerSpec[token] = consumeCSSSelector(tokens);\n                        } else if (token === 'threshold' && tokens[0] === ':') {\n                            tokens.shift();\n                            triggerSpec[token] = consumeUntil(tokens, WHITESPACE_OR_COMMA);\n                        } else triggerErrorEvent(elt, 'htmx:syntax:error', {\n                            token: tokens.shift()\n                        });\n                        consumeUntil(tokens, NOT_WHITESPACE);\n                    }\n                    triggerSpecs.push(triggerSpec);\n                }\n            }\n            if (tokens.length === initialLength) triggerErrorEvent(elt, 'htmx:syntax:error', {\n                token: tokens.shift()\n            });\n            consumeUntil(tokens, NOT_WHITESPACE);\n        }while (tokens[0] === ',' && tokens.shift());\n        if (cache) cache[explicitTrigger] = triggerSpecs;\n        return triggerSpecs;\n    }\n    /**\n   * @param {Element} elt\n   * @returns {HtmxTriggerSpecification[]}\n   */ function getTriggerSpecs(elt) {\n        const explicitTrigger = getAttributeValue(elt, 'hx-trigger');\n        let triggerSpecs = [];\n        if (explicitTrigger) {\n            const cache = htmx.config.triggerSpecsCache;\n            triggerSpecs = cache && cache[explicitTrigger] || parseAndCacheTrigger(elt, explicitTrigger, cache);\n        }\n        if (triggerSpecs.length > 0) return triggerSpecs;\n        else if (matches(elt, 'form')) return [\n            {\n                trigger: 'submit'\n            }\n        ];\n        else if (matches(elt, 'input[type=\"button\"], input[type=\"submit\"]')) return [\n            {\n                trigger: 'click'\n            }\n        ];\n        else if (matches(elt, INPUT_SELECTOR)) return [\n            {\n                trigger: 'change'\n            }\n        ];\n        else return [\n            {\n                trigger: 'click'\n            }\n        ];\n    }\n    /**\n   * @param {Element} elt\n   */ function cancelPolling(elt) {\n        getInternalData(elt).cancelled = true;\n    }\n    /**\n   * @param {Element} elt\n   * @param {TriggerHandler} handler\n   * @param {HtmxTriggerSpecification} spec\n   */ function processPolling(elt, handler, spec) {\n        const nodeData = getInternalData(elt);\n        nodeData.timeout = getWindow().setTimeout(function() {\n            if (bodyContains(elt) && nodeData.cancelled !== true) {\n                if (!maybeFilterEvent(spec, elt, makeEvent('hx:poll:trigger', {\n                    triggerSpec: spec,\n                    target: elt\n                }))) handler(elt);\n                processPolling(elt, handler, spec);\n            }\n        }, spec.pollInterval);\n    }\n    /**\n   * @param {HTMLAnchorElement} elt\n   * @returns {boolean}\n   */ function isLocalLink(elt) {\n        return location.hostname === elt.hostname && getRawAttribute(elt, 'href') && getRawAttribute(elt, 'href').indexOf('#') !== 0;\n    }\n    /**\n   * @param {Element} elt\n   */ function eltIsDisabled(elt) {\n        return closest(elt, htmx.config.disableSelector);\n    }\n    /**\n   * @param {Element} elt\n   * @param {HtmxNodeInternalData} nodeData\n   * @param {HtmxTriggerSpecification[]} triggerSpecs\n   */ function boostElement(elt, nodeData, triggerSpecs) {\n        if (elt instanceof HTMLAnchorElement && isLocalLink(elt) && (elt.target === '' || elt.target === '_self') || elt.tagName === 'FORM' && String(getRawAttribute(elt, 'method')).toLowerCase() !== 'dialog') {\n            nodeData.boosted = true;\n            let verb, path;\n            if (elt.tagName === 'A') {\n                verb = /** @type HttpVerb */ 'get';\n                path = getRawAttribute(elt, 'href');\n            } else {\n                const rawAttribute = getRawAttribute(elt, 'method');\n                verb = /** @type HttpVerb */ rawAttribute ? rawAttribute.toLowerCase() : 'get';\n                path = getRawAttribute(elt, 'action');\n                if (path == null || path === '') // if there is no action attribute on the form set path to current href before the\n                // following logic to properly clear parameters on a GET (not on a POST!)\n                path = location.href;\n                if (verb === 'get' && path.includes('?')) path = path.replace(/\\?[^#]+/, '');\n            }\n            triggerSpecs.forEach(function(triggerSpec) {\n                addEventListener(elt, function(node, evt) {\n                    const elt = asElement(node);\n                    if (eltIsDisabled(elt)) {\n                        cleanUpElement(elt);\n                        return;\n                    }\n                    issueAjaxRequest(verb, path, elt, evt);\n                }, nodeData, triggerSpec, true);\n            });\n        }\n    }\n    /**\n   * @param {Event} evt\n   * @param {Element} elt\n   * @returns {boolean}\n   */ function shouldCancel(evt, elt) {\n        if (evt.type === 'submit' || evt.type === 'click') {\n            // use elt from event that was submitted/clicked where possible to determining if default form/link behavior should be canceled\n            elt = asElement(evt.target) || elt;\n            if (elt.tagName === 'FORM') return true;\n            // @ts-ignore Do not cancel on buttons that 1) don't have a related form or 2) have a type attribute of 'reset'/'button'.\n            // The properties will resolve to undefined for elements that don't define 'type' or 'form', which is fine\n            if (elt.form && elt.type === 'submit') return true;\n            elt = elt.closest('a');\n            // @ts-ignore check for a link wrapping the event elt or if elt is a link. elt will be link so href check is fine\n            if (elt && elt.href && (elt.getAttribute('href') === '#' || elt.getAttribute('href').indexOf('#') !== 0)) return true;\n        }\n        return false;\n    }\n    /**\n   * @param {Node} elt\n   * @param {Event|MouseEvent|KeyboardEvent|TouchEvent} evt\n   * @returns {boolean}\n   */ function ignoreBoostedAnchorCtrlClick(elt, evt) {\n        return getInternalData(elt).boosted && elt instanceof HTMLAnchorElement && evt.type === 'click' && // @ts-ignore this will resolve to undefined for events that don't define those properties, which is fine\n        (evt.ctrlKey || evt.metaKey);\n    }\n    /**\n   * @param {HtmxTriggerSpecification} triggerSpec\n   * @param {Node} elt\n   * @param {Event} evt\n   * @returns {boolean}\n   */ function maybeFilterEvent(triggerSpec, elt, evt) {\n        const eventFilter = triggerSpec.eventFilter;\n        if (eventFilter) try {\n            return eventFilter.call(elt, evt) !== true;\n        } catch (e) {\n            const source = eventFilter.source;\n            triggerErrorEvent(getDocument().body, 'htmx:eventFilter:error', {\n                error: e,\n                source: source\n            });\n            return true;\n        }\n        return false;\n    }\n    /**\n   * @param {Element} elt\n   * @param {TriggerHandler} handler\n   * @param {HtmxNodeInternalData} nodeData\n   * @param {HtmxTriggerSpecification} triggerSpec\n   * @param {boolean} [explicitCancel]\n   */ function addEventListener(elt, handler, nodeData, triggerSpec, explicitCancel) {\n        const elementData = getInternalData(elt);\n        /** @type {(Node|Window)[]} */ let eltsToListenOn;\n        if (triggerSpec.from) eltsToListenOn = querySelectorAllExt(elt, triggerSpec.from);\n        else eltsToListenOn = [\n            elt\n        ];\n        // store the initial values of the elements, so we can tell if they change\n        if (triggerSpec.changed) {\n            if (!('lastValue' in elementData)) elementData.lastValue = new WeakMap();\n            eltsToListenOn.forEach(function(eltToListenOn) {\n                if (!elementData.lastValue.has(triggerSpec)) elementData.lastValue.set(triggerSpec, new WeakMap());\n                // @ts-ignore value will be undefined for non-input elements, which is fine\n                elementData.lastValue.get(triggerSpec).set(eltToListenOn, eltToListenOn.value);\n            });\n        }\n        forEach(eltsToListenOn, function(eltToListenOn) {\n            /** @type EventListener */ const eventListener = function(evt) {\n                if (!bodyContains(elt)) {\n                    eltToListenOn.removeEventListener(triggerSpec.trigger, eventListener);\n                    return;\n                }\n                if (ignoreBoostedAnchorCtrlClick(elt, evt)) return;\n                if (explicitCancel || shouldCancel(evt, elt)) evt.preventDefault();\n                if (maybeFilterEvent(triggerSpec, elt, evt)) return;\n                const eventData = getInternalData(evt);\n                eventData.triggerSpec = triggerSpec;\n                if (eventData.handledFor == null) eventData.handledFor = [];\n                if (eventData.handledFor.indexOf(elt) < 0) {\n                    eventData.handledFor.push(elt);\n                    if (triggerSpec.consume) evt.stopPropagation();\n                    if (triggerSpec.target && evt.target) {\n                        if (!matches(asElement(evt.target), triggerSpec.target)) return;\n                    }\n                    if (triggerSpec.once) {\n                        if (elementData.triggeredOnce) return;\n                        else elementData.triggeredOnce = true;\n                    }\n                    if (triggerSpec.changed) {\n                        const node = evt.target;\n                        // @ts-ignore value will be undefined for non-input elements, which is fine\n                        const value = node.value;\n                        const lastValue = elementData.lastValue.get(triggerSpec);\n                        if (lastValue.has(node) && lastValue.get(node) === value) return;\n                        lastValue.set(node, value);\n                    }\n                    if (elementData.delayed) clearTimeout(elementData.delayed);\n                    if (elementData.throttle) return;\n                    if (triggerSpec.throttle > 0) {\n                        if (!elementData.throttle) {\n                            triggerEvent(elt, 'htmx:trigger');\n                            handler(elt, evt);\n                            elementData.throttle = getWindow().setTimeout(function() {\n                                elementData.throttle = null;\n                            }, triggerSpec.throttle);\n                        }\n                    } else if (triggerSpec.delay > 0) elementData.delayed = getWindow().setTimeout(function() {\n                        triggerEvent(elt, 'htmx:trigger');\n                        handler(elt, evt);\n                    }, triggerSpec.delay);\n                    else {\n                        triggerEvent(elt, 'htmx:trigger');\n                        handler(elt, evt);\n                    }\n                }\n            };\n            if (nodeData.listenerInfos == null) nodeData.listenerInfos = [];\n            nodeData.listenerInfos.push({\n                trigger: triggerSpec.trigger,\n                listener: eventListener,\n                on: eltToListenOn\n            });\n            eltToListenOn.addEventListener(triggerSpec.trigger, eventListener);\n        });\n    }\n    let windowIsScrolling = false // used by initScrollHandler\n    ;\n    let scrollHandler = null;\n    function initScrollHandler() {\n        if (!scrollHandler) {\n            scrollHandler = function() {\n                windowIsScrolling = true;\n            };\n            window.addEventListener('scroll', scrollHandler);\n            window.addEventListener('resize', scrollHandler);\n            setInterval(function() {\n                if (windowIsScrolling) {\n                    windowIsScrolling = false;\n                    forEach(getDocument().querySelectorAll(\"[hx-trigger*='revealed'],[data-hx-trigger*='revealed']\"), function(elt) {\n                        maybeReveal(elt);\n                    });\n                }\n            }, 200);\n        }\n    }\n    /**\n   * @param {Element} elt\n   */ function maybeReveal(elt) {\n        if (!hasAttribute(elt, 'data-hx-revealed') && isScrolledIntoView(elt)) {\n            elt.setAttribute('data-hx-revealed', 'true');\n            const nodeData = getInternalData(elt);\n            if (nodeData.initHash) triggerEvent(elt, 'revealed');\n            else // if the node isn't initialized, wait for it before triggering the request\n            elt.addEventListener('htmx:afterProcessNode', function() {\n                triggerEvent(elt, 'revealed');\n            }, {\n                once: true\n            });\n        }\n    }\n    //= ===================================================================\n    /**\n   * @param {Element} elt\n   * @param {TriggerHandler} handler\n   * @param {HtmxNodeInternalData} nodeData\n   * @param {number} delay\n   */ function loadImmediately(elt, handler, nodeData, delay) {\n        const load = function() {\n            if (!nodeData.loaded) {\n                nodeData.loaded = true;\n                triggerEvent(elt, 'htmx:trigger');\n                handler(elt);\n            }\n        };\n        if (delay > 0) getWindow().setTimeout(load, delay);\n        else load();\n    }\n    /**\n   * @param {Element} elt\n   * @param {HtmxNodeInternalData} nodeData\n   * @param {HtmxTriggerSpecification[]} triggerSpecs\n   * @returns {boolean}\n   */ function processVerbs(elt, nodeData, triggerSpecs) {\n        let explicitAction = false;\n        forEach(VERBS, function(verb) {\n            if (hasAttribute(elt, 'hx-' + verb)) {\n                const path = getAttributeValue(elt, 'hx-' + verb);\n                explicitAction = true;\n                nodeData.path = path;\n                nodeData.verb = verb;\n                triggerSpecs.forEach(function(triggerSpec) {\n                    addTriggerHandler(elt, triggerSpec, nodeData, function(node, evt) {\n                        const elt = asElement(node);\n                        if (eltIsDisabled(elt)) {\n                            cleanUpElement(elt);\n                            return;\n                        }\n                        issueAjaxRequest(verb, path, elt, evt);\n                    });\n                });\n            }\n        });\n        return explicitAction;\n    }\n    /**\n   * @callback TriggerHandler\n   * @param {Element} elt\n   * @param {Event} [evt]\n   */ /**\n   * @param {Element} elt\n   * @param {HtmxTriggerSpecification} triggerSpec\n   * @param {HtmxNodeInternalData} nodeData\n   * @param {TriggerHandler} handler\n   */ function addTriggerHandler(elt, triggerSpec, nodeData, handler) {\n        if (triggerSpec.trigger === 'revealed') {\n            initScrollHandler();\n            addEventListener(elt, handler, nodeData, triggerSpec);\n            maybeReveal(asElement(elt));\n        } else if (triggerSpec.trigger === 'intersect') {\n            const observerOptions = {};\n            if (triggerSpec.root) observerOptions.root = querySelectorExt(elt, triggerSpec.root);\n            if (triggerSpec.threshold) observerOptions.threshold = parseFloat(triggerSpec.threshold);\n            const observer = new IntersectionObserver(function(entries) {\n                for(let i = 0; i < entries.length; i++){\n                    const entry = entries[i];\n                    if (entry.isIntersecting) {\n                        triggerEvent(elt, 'intersect');\n                        break;\n                    }\n                }\n            }, observerOptions);\n            observer.observe(asElement(elt));\n            addEventListener(asElement(elt), handler, nodeData, triggerSpec);\n        } else if (!nodeData.firstInitCompleted && triggerSpec.trigger === 'load') {\n            if (!maybeFilterEvent(triggerSpec, elt, makeEvent('load', {\n                elt: elt\n            }))) loadImmediately(asElement(elt), handler, nodeData, triggerSpec.delay);\n        } else if (triggerSpec.pollInterval > 0) {\n            nodeData.polling = true;\n            processPolling(asElement(elt), handler, triggerSpec);\n        } else addEventListener(elt, handler, nodeData, triggerSpec);\n    }\n    /**\n   * @param {Node} node\n   * @returns {boolean}\n   */ function shouldProcessHxOn(node) {\n        const elt = asElement(node);\n        if (!elt) return false;\n        const attributes = elt.attributes;\n        for(let j = 0; j < attributes.length; j++){\n            const attrName = attributes[j].name;\n            if (startsWith(attrName, 'hx-on:') || startsWith(attrName, 'data-hx-on:') || startsWith(attrName, 'hx-on-') || startsWith(attrName, 'data-hx-on-')) return true;\n        }\n        return false;\n    }\n    /**\n   * @param {Node} elt\n   * @returns {Element[]}\n   */ const HX_ON_QUERY = new XPathEvaluator().createExpression('.//*[@*[ starts-with(name(), \"hx-on:\") or starts-with(name(), \"data-hx-on:\") or starts-with(name(), \"hx-on-\") or starts-with(name(), \"data-hx-on-\") ]]');\n    function processHXOnRoot(elt, elements) {\n        if (shouldProcessHxOn(elt)) elements.push(asElement(elt));\n        const iter = HX_ON_QUERY.evaluate(elt);\n        let node = null;\n        while(node = iter.iterateNext())elements.push(asElement(node));\n    }\n    function findHxOnWildcardElements(elt) {\n        /** @type {Element[]} */ const elements = [];\n        if (elt instanceof DocumentFragment) for (const child of elt.childNodes)processHXOnRoot(child, elements);\n        else processHXOnRoot(elt, elements);\n        return elements;\n    }\n    /**\n   * @param {Element} elt\n   * @returns {NodeListOf<Element>|[]}\n   */ function findElementsToProcess(elt) {\n        if (elt.querySelectorAll) {\n            const boostedSelector = ', [hx-boost] a, [data-hx-boost] a, a[hx-boost], a[data-hx-boost]';\n            const extensionSelectors = [];\n            for(const e in extensions){\n                const extension = extensions[e];\n                if (extension.getSelectors) {\n                    var selectors = extension.getSelectors();\n                    if (selectors) extensionSelectors.push(selectors);\n                }\n            }\n            const results = elt.querySelectorAll(VERB_SELECTOR + boostedSelector + \", form, [type='submit'],\" + ' [hx-ext], [data-hx-ext], [hx-trigger], [data-hx-trigger]' + extensionSelectors.flat().map((s)=>', ' + s).join(''));\n            return results;\n        } else return [];\n    }\n    /**\n   * Handle submit buttons/inputs that have the form attribute set\n   * see https://developer.mozilla.org/docs/Web/HTML/Element/button\n   * @param {Event} evt\n   */ function maybeSetLastButtonClicked(evt) {\n        const elt = getTargetButton(evt.target);\n        const internalData = getRelatedFormData(evt);\n        if (internalData) internalData.lastButtonClicked = elt;\n    }\n    /**\n   * @param {Event} evt\n   */ function maybeUnsetLastButtonClicked(evt) {\n        const internalData = getRelatedFormData(evt);\n        if (internalData) internalData.lastButtonClicked = null;\n    }\n    /**\n   * @param {EventTarget} target\n   * @returns {HTMLButtonElement|HTMLInputElement|null}\n   */ function getTargetButton(target) {\n        return /** @type {HTMLButtonElement|HTMLInputElement|null} */ closest(asElement(target), \"button, input[type='submit']\");\n    }\n    /**\n   * @param {Element} elt\n   * @returns {HTMLFormElement|null}\n   */ function getRelatedForm(elt) {\n        // @ts-ignore Get the related form if available, else find the closest parent form\n        return elt.form || closest(elt, 'form');\n    }\n    /**\n   * @param {Event} evt\n   * @returns {HtmxNodeInternalData|undefined}\n   */ function getRelatedFormData(evt) {\n        const elt = getTargetButton(evt.target);\n        if (!elt) return;\n        const form = getRelatedForm(elt);\n        return getInternalData(form);\n    }\n    /**\n   * @param {EventTarget} elt\n   */ function initButtonTracking(elt) {\n        // need to handle both click and focus in:\n        //   focusin - in case someone tabs in to a button and hits the space bar\n        //   click - on OSX buttons do not focus on click see https://bugs.webkit.org/show_bug.cgi?id=13724\n        elt.addEventListener('click', maybeSetLastButtonClicked);\n        elt.addEventListener('focusin', maybeSetLastButtonClicked);\n        elt.addEventListener('focusout', maybeUnsetLastButtonClicked);\n    }\n    /**\n   * @param {Element} elt\n   * @param {string} eventName\n   * @param {string} code\n   */ function addHxOnEventHandler(elt, eventName, code) {\n        const nodeData = getInternalData(elt);\n        if (!Array.isArray(nodeData.onHandlers)) nodeData.onHandlers = [];\n        let func;\n        /** @type EventListener */ const listener = function(e) {\n            maybeEval(elt, function() {\n                if (eltIsDisabled(elt)) return;\n                if (!func) func = new Function('event', code);\n                func.call(elt, e);\n            });\n        };\n        elt.addEventListener(eventName, listener);\n        nodeData.onHandlers.push({\n            event: eventName,\n            listener: listener\n        });\n    }\n    /**\n   * @param {Element} elt\n   */ function processHxOnWildcard(elt) {\n        // wipe any previous on handlers so that this function takes precedence\n        deInitOnHandlers(elt);\n        for(let i = 0; i < elt.attributes.length; i++){\n            const name = elt.attributes[i].name;\n            const value = elt.attributes[i].value;\n            if (startsWith(name, 'hx-on') || startsWith(name, 'data-hx-on')) {\n                const afterOnPosition = name.indexOf('-on') + 3;\n                const nextChar = name.slice(afterOnPosition, afterOnPosition + 1);\n                if (nextChar === '-' || nextChar === ':') {\n                    let eventName = name.slice(afterOnPosition + 1);\n                    // if the eventName starts with a colon or dash, prepend \"htmx\" for shorthand support\n                    if (startsWith(eventName, ':')) eventName = 'htmx' + eventName;\n                    else if (startsWith(eventName, '-')) eventName = 'htmx:' + eventName.slice(1);\n                    else if (startsWith(eventName, 'htmx-')) eventName = 'htmx:' + eventName.slice(5);\n                    addHxOnEventHandler(elt, eventName, value);\n                }\n            }\n        }\n    }\n    /**\n   * @param {Element|HTMLInputElement} elt\n   */ function initNode(elt) {\n        triggerEvent(elt, 'htmx:beforeProcessNode');\n        const nodeData = getInternalData(elt);\n        const triggerSpecs = getTriggerSpecs(elt);\n        const hasExplicitHttpAction = processVerbs(elt, nodeData, triggerSpecs);\n        if (!hasExplicitHttpAction) {\n            if (getClosestAttributeValue(elt, 'hx-boost') === 'true') boostElement(elt, nodeData, triggerSpecs);\n            else if (hasAttribute(elt, 'hx-trigger')) triggerSpecs.forEach(function(triggerSpec) {\n                // For \"naked\" triggers, don't do anything at all\n                addTriggerHandler(elt, triggerSpec, nodeData, function() {});\n            });\n        }\n        // Handle submit buttons/inputs that have the form attribute set\n        // see https://developer.mozilla.org/docs/Web/HTML/Element/button\n        if (elt.tagName === 'FORM' || getRawAttribute(elt, 'type') === 'submit' && hasAttribute(elt, 'form')) initButtonTracking(elt);\n        nodeData.firstInitCompleted = true;\n        triggerEvent(elt, 'htmx:afterProcessNode');\n    }\n    /**\n   * @param {Element} elt\n   * @returns {boolean}\n   */ function maybeDeInitAndHash(elt) {\n        // Ensure only valid Elements and not shadow DOM roots are inited\n        if (!(elt instanceof Element)) return false;\n        const nodeData = getInternalData(elt);\n        const hash = attributeHash(elt);\n        if (nodeData.initHash !== hash) {\n            deInitNode(elt);\n            nodeData.initHash = hash;\n            return true;\n        }\n        return false;\n    }\n    /**\n   * Processes new content, enabling htmx behavior. This can be useful if you have content that is added to the DOM outside of the normal htmx request cycle but still want htmx attributes to work.\n   *\n   * @see https://htmx.org/api/#process\n   *\n   * @param {Element|string} elt element to process\n   */ function processNode(elt) {\n        elt = resolveTarget(elt);\n        if (eltIsDisabled(elt)) {\n            cleanUpElement(elt);\n            return;\n        }\n        const elementsToInit = [];\n        if (maybeDeInitAndHash(elt)) elementsToInit.push(elt);\n        forEach(findElementsToProcess(elt), function(child) {\n            if (eltIsDisabled(child)) {\n                cleanUpElement(child);\n                return;\n            }\n            if (maybeDeInitAndHash(child)) elementsToInit.push(child);\n        });\n        forEach(findHxOnWildcardElements(elt), processHxOnWildcard);\n        forEach(elementsToInit, initNode);\n    }\n    //= ===================================================================\n    // Event/Log Support\n    //= ===================================================================\n    /**\n   * @param {string} str\n   * @returns {string}\n   */ function kebabEventName(str) {\n        return str.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n    }\n    /**\n   * @param {string} eventName\n   * @param {any} detail\n   * @returns {CustomEvent}\n   */ function makeEvent(eventName, detail) {\n        // TODO: `composed: true` here is a hack to make global event handlers work with events in shadow DOM\n        // This breaks expected encapsulation but needs to be here until decided otherwise by core devs\n        return new CustomEvent(eventName, {\n            bubbles: true,\n            cancelable: true,\n            composed: true,\n            detail: detail\n        });\n    }\n    /**\n   * @param {EventTarget|string} elt\n   * @param {string} eventName\n   * @param {any=} detail\n   */ function triggerErrorEvent(elt, eventName, detail) {\n        triggerEvent(elt, eventName, mergeObjects({\n            error: eventName\n        }, detail));\n    }\n    /**\n   * @param {string} eventName\n   * @returns {boolean}\n   */ function ignoreEventForLogging(eventName) {\n        return eventName === 'htmx:afterProcessNode';\n    }\n    /**\n   * `withExtensions` locates all active extensions for a provided element, then\n   * executes the provided function using each of the active extensions. You can filter\n   * the element's extensions by giving it a list of extensions to ignore. It should\n   * be called internally at every extendable execution point in htmx.\n   *\n   * @param {Element} elt\n   * @param {(extension:HtmxExtension) => void} toDo\n   * @param {string[]=} extensionsToIgnore\n   * @returns void\n   */ function withExtensions(elt, toDo, extensionsToIgnore) {\n        forEach(getExtensions(elt, [], extensionsToIgnore), function(extension) {\n            try {\n                toDo(extension);\n            } catch (e) {\n                logError(e);\n            }\n        });\n    }\n    function logError(msg) {\n        console.error(msg);\n    }\n    /**\n   * Triggers a given event on an element\n   *\n   * @see https://htmx.org/api/#trigger\n   *\n   * @param {EventTarget|string} elt the element to trigger the event on\n   * @param {string} eventName the name of the event to trigger\n   * @param {any=} detail details for the event\n   * @returns {boolean}\n   */ function triggerEvent(elt, eventName, detail) {\n        elt = resolveTarget(elt);\n        if (detail == null) detail = {};\n        detail.elt = elt;\n        const event = makeEvent(eventName, detail);\n        if (htmx.logger && !ignoreEventForLogging(eventName)) htmx.logger(elt, eventName, detail);\n        if (detail.error) {\n            logError(detail.error);\n            triggerEvent(elt, 'htmx:error', {\n                errorInfo: detail\n            });\n        }\n        let eventResult = elt.dispatchEvent(event);\n        const kebabName = kebabEventName(eventName);\n        if (eventResult && kebabName !== eventName) {\n            const kebabedEvent = makeEvent(kebabName, event.detail);\n            eventResult = eventResult && elt.dispatchEvent(kebabedEvent);\n        }\n        withExtensions(asElement(elt), function(extension) {\n            eventResult = eventResult && extension.onEvent(eventName, event) !== false && !event.defaultPrevented;\n        });\n        return eventResult;\n    }\n    //= ===================================================================\n    // History Support\n    //= ===================================================================\n    let currentPathForHistory = location.pathname + location.search;\n    /**\n   * @param {string} path\n   */ function setCurrentPathForHistory(path) {\n        currentPathForHistory = path;\n        if (canAccessLocalStorage()) sessionStorage.setItem('htmx-current-path-for-history', path);\n    }\n    /**\n   * @returns {Element}\n   */ function getHistoryElement() {\n        const historyElt = getDocument().querySelector('[hx-history-elt],[data-hx-history-elt]');\n        return historyElt || getDocument().body;\n    }\n    /**\n   * @param {string} url\n   * @param {Element} rootElt\n   */ function saveToHistoryCache(url, rootElt) {\n        if (!canAccessLocalStorage()) return;\n        // get state to save\n        const innerHTML = cleanInnerHtmlForHistory(rootElt);\n        const title = getDocument().title;\n        const scroll = window.scrollY;\n        if (htmx.config.historyCacheSize <= 0) {\n            // make sure that an eventually already existing cache is purged\n            sessionStorage.removeItem('htmx-history-cache');\n            return;\n        }\n        url = normalizePath(url);\n        const historyCache = parseJSON(sessionStorage.getItem('htmx-history-cache')) || [];\n        for(let i = 0; i < historyCache.length; i++)if (historyCache[i].url === url) {\n            historyCache.splice(i, 1);\n            break;\n        }\n        /** @type HtmxHistoryItem */ const newHistoryItem = {\n            url: url,\n            content: innerHTML,\n            title: title,\n            scroll: scroll\n        };\n        triggerEvent(getDocument().body, 'htmx:historyItemCreated', {\n            item: newHistoryItem,\n            cache: historyCache\n        });\n        historyCache.push(newHistoryItem);\n        while(historyCache.length > htmx.config.historyCacheSize)historyCache.shift();\n        // keep trying to save the cache until it succeeds or is empty\n        while(historyCache.length > 0)try {\n            sessionStorage.setItem('htmx-history-cache', JSON.stringify(historyCache));\n            break;\n        } catch (e) {\n            triggerErrorEvent(getDocument().body, 'htmx:historyCacheError', {\n                cause: e,\n                cache: historyCache\n            });\n            historyCache.shift() // shrink the cache and retry\n            ;\n        }\n    }\n    /**\n   * @typedef {Object} HtmxHistoryItem\n   * @property {string} url\n   * @property {string} content\n   * @property {string} title\n   * @property {number} scroll\n   */ /**\n   * @param {string} url\n   * @returns {HtmxHistoryItem|null}\n   */ function getCachedHistory(url) {\n        if (!canAccessLocalStorage()) return null;\n        url = normalizePath(url);\n        const historyCache = parseJSON(sessionStorage.getItem('htmx-history-cache')) || [];\n        for(let i = 0; i < historyCache.length; i++){\n            if (historyCache[i].url === url) return historyCache[i];\n        }\n        return null;\n    }\n    /**\n   * @param {Element} elt\n   * @returns {string}\n   */ function cleanInnerHtmlForHistory(elt) {\n        const className = htmx.config.requestClass;\n        const clone = /** @type Element */ elt.cloneNode(true);\n        forEach(findAll(clone, '.' + className), function(child) {\n            removeClassFromElement(child, className);\n        });\n        // remove the disabled attribute for any element disabled due to an htmx request\n        forEach(findAll(clone, '[data-disabled-by-htmx]'), function(child) {\n            child.removeAttribute('disabled');\n        });\n        return clone.innerHTML;\n    }\n    function saveCurrentPageToHistory() {\n        const elt = getHistoryElement();\n        let path = currentPathForHistory;\n        if (canAccessLocalStorage()) path = sessionStorage.getItem('htmx-current-path-for-history');\n        path = path || location.pathname + location.search;\n        // Allow history snapshot feature to be disabled where hx-history=\"false\"\n        // is present *anywhere* in the current document we're about to save,\n        // so we can prevent privileged data entering the cache.\n        // The page will still be reachable as a history entry, but htmx will fetch it\n        // live from the server onpopstate rather than look in the sessionStorage cache\n        const disableHistoryCache = getDocument().querySelector('[hx-history=\"false\" i],[data-hx-history=\"false\" i]');\n        if (!disableHistoryCache) {\n            triggerEvent(getDocument().body, 'htmx:beforeHistorySave', {\n                path: path,\n                historyElt: elt\n            });\n            saveToHistoryCache(path, elt);\n        }\n        if (htmx.config.historyEnabled) history.replaceState({\n            htmx: true\n        }, getDocument().title, location.href);\n    }\n    /**\n   * @param {string} path\n   */ function pushUrlIntoHistory(path) {\n        // remove the cache buster parameter, if any\n        if (htmx.config.getCacheBusterParam) {\n            path = path.replace(/org\\.htmx\\.cache-buster=[^&]*&?/, '');\n            if (endsWith(path, '&') || endsWith(path, '?')) path = path.slice(0, -1);\n        }\n        if (htmx.config.historyEnabled) history.pushState({\n            htmx: true\n        }, '', path);\n        setCurrentPathForHistory(path);\n    }\n    /**\n   * @param {string} path\n   */ function replaceUrlInHistory(path) {\n        if (htmx.config.historyEnabled) history.replaceState({\n            htmx: true\n        }, '', path);\n        setCurrentPathForHistory(path);\n    }\n    /**\n   * @param {HtmxSettleTask[]} tasks\n   */ function settleImmediately(tasks) {\n        forEach(tasks, function(task) {\n            task.call(undefined);\n        });\n    }\n    /**\n   * @param {string} path\n   */ function loadHistoryFromServer(path) {\n        const request = new XMLHttpRequest();\n        const swapSpec = {\n            swapStyle: 'innerHTML',\n            swapDelay: 0,\n            settleDelay: 0\n        };\n        const details = {\n            path: path,\n            xhr: request,\n            historyElt: getHistoryElement(),\n            swapSpec: swapSpec\n        };\n        request.open('GET', path, true);\n        if (htmx.config.historyRestoreAsHxRequest) request.setRequestHeader('HX-Request', 'true');\n        request.setRequestHeader('HX-History-Restore-Request', 'true');\n        request.setRequestHeader('HX-Current-URL', location.href);\n        request.onload = function() {\n            if (this.status >= 200 && this.status < 400) {\n                details.response = this.response;\n                triggerEvent(getDocument().body, 'htmx:historyCacheMissLoad', details);\n                swap(details.historyElt, details.response, swapSpec, {\n                    contextElement: details.historyElt,\n                    historyRequest: true\n                });\n                setCurrentPathForHistory(details.path);\n                triggerEvent(getDocument().body, 'htmx:historyRestore', {\n                    path: path,\n                    cacheMiss: true,\n                    serverResponse: details.response\n                });\n            } else triggerErrorEvent(getDocument().body, 'htmx:historyCacheMissLoadError', details);\n        };\n        if (triggerEvent(getDocument().body, 'htmx:historyCacheMiss', details)) request.send() // only send request if event not prevented\n        ;\n    }\n    /**\n   * @param {string} [path]\n   */ function restoreHistory(path) {\n        saveCurrentPageToHistory();\n        path = path || location.pathname + location.search;\n        const cached = getCachedHistory(path);\n        if (cached) {\n            const swapSpec = {\n                swapStyle: 'innerHTML',\n                swapDelay: 0,\n                settleDelay: 0,\n                scroll: cached.scroll\n            };\n            const details = {\n                path: path,\n                item: cached,\n                historyElt: getHistoryElement(),\n                swapSpec: swapSpec\n            };\n            if (triggerEvent(getDocument().body, 'htmx:historyCacheHit', details)) {\n                swap(details.historyElt, cached.content, swapSpec, {\n                    contextElement: details.historyElt,\n                    title: cached.title\n                });\n                setCurrentPathForHistory(details.path);\n                triggerEvent(getDocument().body, 'htmx:historyRestore', details);\n            }\n        } else if (htmx.config.refreshOnHistoryMiss) // @ts-ignore: optional parameter in reload() function throws error\n        // noinspection JSUnresolvedReference\n        htmx.location.reload(true);\n        else loadHistoryFromServer(path);\n    }\n    /**\n   * @param {Element} elt\n   * @returns {Element[]}\n   */ function addRequestIndicatorClasses(elt) {\n        let indicators = /** @type Element[] */ findAttributeTargets(elt, 'hx-indicator');\n        if (indicators == null) indicators = [\n            elt\n        ];\n        forEach(indicators, function(ic) {\n            const internalData = getInternalData(ic);\n            internalData.requestCount = (internalData.requestCount || 0) + 1;\n            ic.classList.add.call(ic.classList, htmx.config.requestClass);\n        });\n        return indicators;\n    }\n    /**\n   * @param {Element} elt\n   * @returns {Element[]}\n   */ function disableElements(elt) {\n        let disabledElts = /** @type Element[] */ findAttributeTargets(elt, 'hx-disabled-elt');\n        if (disabledElts == null) disabledElts = [];\n        forEach(disabledElts, function(disabledElement) {\n            const internalData = getInternalData(disabledElement);\n            internalData.requestCount = (internalData.requestCount || 0) + 1;\n            disabledElement.setAttribute('disabled', '');\n            disabledElement.setAttribute('data-disabled-by-htmx', '');\n        });\n        return disabledElts;\n    }\n    /**\n   * @param {Element[]} indicators\n   * @param {Element[]} disabled\n   */ function removeRequestIndicators(indicators, disabled) {\n        forEach(indicators.concat(disabled), function(ele) {\n            const internalData = getInternalData(ele);\n            internalData.requestCount = (internalData.requestCount || 1) - 1;\n        });\n        forEach(indicators, function(ic) {\n            const internalData = getInternalData(ic);\n            if (internalData.requestCount === 0) ic.classList.remove.call(ic.classList, htmx.config.requestClass);\n        });\n        forEach(disabled, function(disabledElement) {\n            const internalData = getInternalData(disabledElement);\n            if (internalData.requestCount === 0) {\n                disabledElement.removeAttribute('disabled');\n                disabledElement.removeAttribute('data-disabled-by-htmx');\n            }\n        });\n    }\n    //= ===================================================================\n    // Input Value Processing\n    //= ===================================================================\n    /**\n   * @param {Element[]} processed\n   * @param {Element} elt\n   * @returns {boolean}\n   */ function haveSeenNode(processed, elt) {\n        for(let i = 0; i < processed.length; i++){\n            const node = processed[i];\n            if (node.isSameNode(elt)) return true;\n        }\n        return false;\n    }\n    /**\n   * @param {Element} element\n   * @return {boolean}\n   */ function shouldInclude(element) {\n        // Cast to trick tsc, undefined values will work fine here\n        const elt = /** @type {HTMLInputElement} */ element;\n        if (elt.name === '' || elt.name == null || elt.disabled || closest(elt, 'fieldset[disabled]')) return false;\n        // ignore \"submitter\" types (see jQuery src/serialize.js)\n        if (elt.type === 'button' || elt.type === 'submit' || elt.tagName === 'image' || elt.tagName === 'reset' || elt.tagName === 'file') return false;\n        if (elt.type === 'checkbox' || elt.type === 'radio') return elt.checked;\n        return true;\n    }\n    /**\n   * @param {string} name\n   * @param {string|Array|FormDataEntryValue} value\n   * @param {FormData} formData */ function addValueToFormData(name, value, formData) {\n        if (name != null && value != null) {\n            if (Array.isArray(value)) value.forEach(function(v) {\n                formData.append(name, v);\n            });\n            else formData.append(name, value);\n        }\n    }\n    /**\n   * @param {string} name\n   * @param {string|Array} value\n   * @param {FormData} formData */ function removeValueFromFormData(name, value, formData) {\n        if (name != null && value != null) {\n            let values = formData.getAll(name);\n            if (Array.isArray(value)) values = values.filter((v)=>value.indexOf(v) < 0);\n            else values = values.filter((v)=>v !== value);\n            formData.delete(name);\n            forEach(values, (v)=>formData.append(name, v));\n        }\n    }\n    /**\n   * @param {Element} elt\n   * @returns {string|Array}\n   */ function getValueFromInput(elt) {\n        if (elt instanceof HTMLSelectElement && elt.multiple) return toArray(elt.querySelectorAll('option:checked')).map(function(e) {\n            return /** @type HTMLOptionElement */ e.value;\n        });\n        // include file inputs\n        if (elt instanceof HTMLInputElement && elt.files) return toArray(elt.files);\n        // @ts-ignore value will be undefined for non-input elements, which is fine\n        return elt.value;\n    }\n    /**\n   * @param {Element[]} processed\n   * @param {FormData} formData\n   * @param {HtmxElementValidationError[]} errors\n   * @param {Element|HTMLInputElement|HTMLSelectElement|HTMLFormElement} elt\n   * @param {boolean} validate\n   */ function processInputValue(processed, formData, errors, elt, validate) {\n        if (elt == null || haveSeenNode(processed, elt)) return;\n        else processed.push(elt);\n        if (shouldInclude(elt)) {\n            const name = getRawAttribute(elt, 'name');\n            addValueToFormData(name, getValueFromInput(elt), formData);\n            if (validate) validateElement(elt, errors);\n        }\n        if (elt instanceof HTMLFormElement) {\n            forEach(elt.elements, function(input) {\n                if (processed.indexOf(input) >= 0) // The input has already been processed and added to the values, but the FormData that will be\n                //  constructed right after on the form, will include it once again. So remove that input's value\n                //  now to avoid duplicates\n                removeValueFromFormData(input.name, getValueFromInput(input), formData);\n                else processed.push(input);\n                if (validate) validateElement(input, errors);\n            });\n            new FormData(elt).forEach(function(value, name) {\n                if (value instanceof File && value.name === '') return; // ignore no-name files\n                addValueToFormData(name, value, formData);\n            });\n        }\n    }\n    /**\n   * @param {Element} elt\n   * @param {HtmxElementValidationError[]} errors\n   */ function validateElement(elt, errors) {\n        const element = /** @type {HTMLElement & ElementInternals} */ elt;\n        if (element.willValidate) {\n            triggerEvent(element, 'htmx:validation:validate');\n            if (!element.checkValidity()) {\n                errors.push({\n                    elt: element,\n                    message: element.validationMessage,\n                    validity: element.validity\n                });\n                triggerEvent(element, 'htmx:validation:failed', {\n                    message: element.validationMessage,\n                    validity: element.validity\n                });\n            }\n        }\n    }\n    /**\n   * Override values in the one FormData with those from another.\n   * @param {FormData} receiver the formdata that will be mutated\n   * @param {FormData} donor the formdata that will provide the overriding values\n   * @returns {FormData} the {@linkcode receiver}\n   */ function overrideFormData(receiver, donor) {\n        for (const key of donor.keys())receiver.delete(key);\n        donor.forEach(function(value, key) {\n            receiver.append(key, value);\n        });\n        return receiver;\n    }\n    /**\n * @param {Element|HTMLFormElement} elt\n * @param {HttpVerb} verb\n * @returns {{errors: HtmxElementValidationError[], formData: FormData, values: Object}}\n */ function getInputValues(elt, verb) {\n        /** @type Element[] */ const processed = [];\n        const formData = new FormData();\n        const priorityFormData = new FormData();\n        /** @type HtmxElementValidationError[] */ const errors = [];\n        const internalData = getInternalData(elt);\n        if (internalData.lastButtonClicked && !bodyContains(internalData.lastButtonClicked)) internalData.lastButtonClicked = null;\n        // only validate when form is directly submitted and novalidate or formnovalidate are not set\n        // or if the element has an explicit hx-validate=\"true\" on it\n        let validate = elt instanceof HTMLFormElement && elt.noValidate !== true || getAttributeValue(elt, 'hx-validate') === 'true';\n        if (internalData.lastButtonClicked) validate = validate && internalData.lastButtonClicked.formNoValidate !== true;\n        // for a non-GET include the related form, which may or may not be a parent element of elt\n        if (verb !== 'get') processInputValue(processed, priorityFormData, errors, getRelatedForm(elt), validate);\n        // include the element itself\n        processInputValue(processed, formData, errors, elt, validate);\n        // if a button or submit was clicked last, include its value\n        if (internalData.lastButtonClicked || elt.tagName === 'BUTTON' || elt.tagName === 'INPUT' && getRawAttribute(elt, 'type') === 'submit') {\n            const button = internalData.lastButtonClicked || /** @type HTMLInputElement|HTMLButtonElement */ elt;\n            const name = getRawAttribute(button, 'name');\n            addValueToFormData(name, button.value, priorityFormData);\n        }\n        // include any explicit includes\n        const includes = findAttributeTargets(elt, 'hx-include');\n        forEach(includes, function(node) {\n            processInputValue(processed, formData, errors, asElement(node), validate);\n            // if a non-form is included, include any input values within it\n            if (!matches(node, 'form')) forEach(asParentNode(node).querySelectorAll(INPUT_SELECTOR), function(descendant) {\n                processInputValue(processed, formData, errors, descendant, validate);\n            });\n        });\n        // values from a <form> take precedence, overriding the regular values\n        overrideFormData(formData, priorityFormData);\n        return {\n            errors: errors,\n            formData: formData,\n            values: formDataProxy(formData)\n        };\n    }\n    /**\n   * @param {string} returnStr\n   * @param {string} name\n   * @param {any} realValue\n   * @returns {string}\n   */ function appendParam(returnStr, name, realValue) {\n        if (returnStr !== '') returnStr += '&';\n        if (String(realValue) === '[object Object]') realValue = JSON.stringify(realValue);\n        const s = encodeURIComponent(realValue);\n        returnStr += encodeURIComponent(name) + '=' + s;\n        return returnStr;\n    }\n    /**\n   * @param {FormData|Object} values\n   * @returns string\n   */ function urlEncode(values) {\n        values = formDataFromObject(values);\n        let returnStr = '';\n        values.forEach(function(value, key) {\n            returnStr = appendParam(returnStr, key, value);\n        });\n        return returnStr;\n    }\n    //= ===================================================================\n    // Ajax\n    //= ===================================================================\n    /**\n * @param {Element} elt\n * @param {Element} target\n * @param {string} prompt\n * @returns {HtmxHeaderSpecification}\n */ function getHeaders(elt, target, prompt1) {\n        /** @type HtmxHeaderSpecification */ const headers = {\n            'HX-Request': 'true',\n            'HX-Trigger': getRawAttribute(elt, 'id'),\n            'HX-Trigger-Name': getRawAttribute(elt, 'name'),\n            'HX-Target': getAttributeValue(target, 'id'),\n            'HX-Current-URL': location.href\n        };\n        getValuesForElement(elt, 'hx-headers', false, headers);\n        if (prompt1 !== undefined) headers['HX-Prompt'] = prompt1;\n        if (getInternalData(elt).boosted) headers['HX-Boosted'] = 'true';\n        return headers;\n    }\n    /**\n * filterValues takes an object containing form input values\n * and returns a new object that only contains keys that are\n * specified by the closest \"hx-params\" attribute\n * @param {FormData} inputValues\n * @param {Element} elt\n * @returns {FormData}\n */ function filterValues(inputValues, elt) {\n        const paramsValue = getClosestAttributeValue(elt, 'hx-params');\n        if (paramsValue) {\n            if (paramsValue === 'none') return new FormData();\n            else if (paramsValue === '*') return inputValues;\n            else if (paramsValue.indexOf('not ') === 0) {\n                forEach(paramsValue.slice(4).split(','), function(name) {\n                    name = name.trim();\n                    inputValues.delete(name);\n                });\n                return inputValues;\n            } else {\n                const newValues = new FormData();\n                forEach(paramsValue.split(','), function(name) {\n                    name = name.trim();\n                    if (inputValues.has(name)) inputValues.getAll(name).forEach(function(value) {\n                        newValues.append(name, value);\n                    });\n                });\n                return newValues;\n            }\n        } else return inputValues;\n    }\n    /**\n   * @param {Element} elt\n   * @return {boolean}\n   */ function isAnchorLink(elt) {\n        return !!getRawAttribute(elt, 'href') && getRawAttribute(elt, 'href').indexOf('#') >= 0;\n    }\n    /**\n * @param {Element} elt\n * @param {HtmxSwapStyle} [swapInfoOverride]\n * @returns {HtmxSwapSpecification}\n */ function getSwapSpecification(elt, swapInfoOverride) {\n        const swapInfo = swapInfoOverride || getClosestAttributeValue(elt, 'hx-swap');\n        /** @type HtmxSwapSpecification */ const swapSpec = {\n            swapStyle: getInternalData(elt).boosted ? 'innerHTML' : htmx.config.defaultSwapStyle,\n            swapDelay: htmx.config.defaultSwapDelay,\n            settleDelay: htmx.config.defaultSettleDelay\n        };\n        if (htmx.config.scrollIntoViewOnBoost && getInternalData(elt).boosted && !isAnchorLink(elt)) swapSpec.show = 'top';\n        if (swapInfo) {\n            const split = splitOnWhitespace(swapInfo);\n            if (split.length > 0) for(let i = 0; i < split.length; i++){\n                const value = split[i];\n                if (value.indexOf('swap:') === 0) swapSpec.swapDelay = parseInterval(value.slice(5));\n                else if (value.indexOf('settle:') === 0) swapSpec.settleDelay = parseInterval(value.slice(7));\n                else if (value.indexOf('transition:') === 0) swapSpec.transition = value.slice(11) === 'true';\n                else if (value.indexOf('ignoreTitle:') === 0) swapSpec.ignoreTitle = value.slice(12) === 'true';\n                else if (value.indexOf('scroll:') === 0) {\n                    const scrollSpec = value.slice(7);\n                    var splitSpec = scrollSpec.split(':');\n                    const scrollVal = splitSpec.pop();\n                    var selectorVal = splitSpec.length > 0 ? splitSpec.join(':') : null;\n                    // @ts-ignore\n                    swapSpec.scroll = scrollVal;\n                    swapSpec.scrollTarget = selectorVal;\n                } else if (value.indexOf('show:') === 0) {\n                    const showSpec = value.slice(5);\n                    var splitSpec = showSpec.split(':');\n                    const showVal = splitSpec.pop();\n                    var selectorVal = splitSpec.length > 0 ? splitSpec.join(':') : null;\n                    swapSpec.show = showVal;\n                    swapSpec.showTarget = selectorVal;\n                } else if (value.indexOf('focus-scroll:') === 0) {\n                    const focusScrollVal = value.slice(13);\n                    swapSpec.focusScroll = focusScrollVal == 'true';\n                } else if (i == 0) swapSpec.swapStyle = value;\n                else logError('Unknown modifier in hx-swap: ' + value);\n            }\n        }\n        return swapSpec;\n    }\n    /**\n   * @param {Element} elt\n   * @return {boolean}\n   */ function usesFormData(elt) {\n        return getClosestAttributeValue(elt, 'hx-encoding') === 'multipart/form-data' || matches(elt, 'form') && getRawAttribute(elt, 'enctype') === 'multipart/form-data';\n    }\n    /**\n   * @param {XMLHttpRequest} xhr\n   * @param {Element} elt\n   * @param {FormData} filteredParameters\n   * @returns {*|string|null}\n   */ function encodeParamsForBody(xhr, elt, filteredParameters) {\n        let encodedParameters = null;\n        withExtensions(elt, function(extension) {\n            if (encodedParameters == null) encodedParameters = extension.encodeParameters(xhr, filteredParameters, elt);\n        });\n        if (encodedParameters != null) return encodedParameters;\n        else {\n            if (usesFormData(elt)) // Force conversion to an actual FormData object in case filteredParameters is a formDataProxy\n            // See https://github.com/bigskysoftware/htmx/issues/2317\n            return overrideFormData(new FormData(), formDataFromObject(filteredParameters));\n            else return urlEncode(filteredParameters);\n        }\n    }\n    /**\n *\n * @param {Element} target\n * @returns {HtmxSettleInfo}\n */ function makeSettleInfo(target) {\n        return {\n            tasks: [],\n            elts: [\n                target\n            ]\n        };\n    }\n    /**\n   * @param {Element[]} content\n   * @param {HtmxSwapSpecification} swapSpec\n   */ function updateScrollState(content, swapSpec) {\n        const first = content[0];\n        const last = content[content.length - 1];\n        if (swapSpec.scroll) {\n            var target = null;\n            if (swapSpec.scrollTarget) target = asElement(querySelectorExt(first, swapSpec.scrollTarget));\n            if (swapSpec.scroll === 'top' && (first || target)) {\n                target = target || first;\n                target.scrollTop = 0;\n            }\n            if (swapSpec.scroll === 'bottom' && (last || target)) {\n                target = target || last;\n                target.scrollTop = target.scrollHeight;\n            }\n            if (typeof swapSpec.scroll === 'number') getWindow().setTimeout(function() {\n                window.scrollTo(0, /** @type number */ swapSpec.scroll);\n            }, 0) // next 'tick', so browser has time to render layout\n            ;\n        }\n        if (swapSpec.show) {\n            var target = null;\n            if (swapSpec.showTarget) {\n                let targetStr = swapSpec.showTarget;\n                if (swapSpec.showTarget === 'window') targetStr = 'body';\n                target = asElement(querySelectorExt(first, targetStr));\n            }\n            if (swapSpec.show === 'top' && (first || target)) {\n                target = target || first;\n                // @ts-ignore For some reason tsc doesn't recognize \"instant\" as a valid option for now\n                target.scrollIntoView({\n                    block: 'start',\n                    behavior: htmx.config.scrollBehavior\n                });\n            }\n            if (swapSpec.show === 'bottom' && (last || target)) {\n                target = target || last;\n                // @ts-ignore For some reason tsc doesn't recognize \"instant\" as a valid option for now\n                target.scrollIntoView({\n                    block: 'end',\n                    behavior: htmx.config.scrollBehavior\n                });\n            }\n        }\n    }\n    /**\n * @param {Element} elt\n * @param {string} attr\n * @param {boolean=} evalAsDefault\n * @param {Object=} values\n * @param {Event=} event\n * @returns {Object}\n */ function getValuesForElement(elt, attr, evalAsDefault, values, event) {\n        if (values == null) values = {};\n        if (elt == null) return values;\n        const attributeValue = getAttributeValue(elt, attr);\n        if (attributeValue) {\n            let str = attributeValue.trim();\n            let evaluateValue = evalAsDefault;\n            if (str === 'unset') return null;\n            if (str.indexOf('javascript:') === 0) {\n                str = str.slice(11);\n                evaluateValue = true;\n            } else if (str.indexOf('js:') === 0) {\n                str = str.slice(3);\n                evaluateValue = true;\n            }\n            if (str.indexOf('{') !== 0) str = '{' + str + '}';\n            let varsValues;\n            if (evaluateValue) varsValues = maybeEval(elt, function() {\n                if (event) return Function('event', 'return (' + str + ')').call(elt, event);\n                else return Function('return (' + str + ')').call(elt);\n            }, {});\n            else varsValues = parseJSON(str);\n            for(const key in varsValues){\n                if (varsValues.hasOwnProperty(key)) {\n                    if (values[key] == null) values[key] = varsValues[key];\n                }\n            }\n        }\n        return getValuesForElement(asElement(parentElt(elt)), attr, evalAsDefault, values, event);\n    }\n    /**\n   * @param {EventTarget|string} elt\n   * @param {() => any} toEval\n   * @param {any=} defaultVal\n   * @returns {any}\n   */ function maybeEval(elt, toEval, defaultVal) {\n        if (htmx.config.allowEval) return toEval();\n        else {\n            triggerErrorEvent(elt, 'htmx:evalDisallowedError');\n            return defaultVal;\n        }\n    }\n    /**\n * @param {Element} elt\n * @param {Event=} event\n * @param {*?=} expressionVars\n * @returns\n */ function getHXVarsForElement(elt, event, expressionVars) {\n        return getValuesForElement(elt, 'hx-vars', true, expressionVars, event);\n    }\n    /**\n * @param {Element} elt\n * @param {Event=} event\n * @param {*?=} expressionVars\n * @returns\n */ function getHXValsForElement(elt, event, expressionVars) {\n        return getValuesForElement(elt, 'hx-vals', false, expressionVars, event);\n    }\n    /**\n * @param {Element} elt\n * @param {Event=} event\n * @returns {FormData}\n */ function getExpressionVars(elt, event) {\n        return mergeObjects(getHXVarsForElement(elt, event), getHXValsForElement(elt, event));\n    }\n    /**\n   * @param {XMLHttpRequest} xhr\n   * @param {string} header\n   * @param {string|null} headerValue\n   */ function safelySetHeaderValue(xhr, header, headerValue) {\n        if (headerValue !== null) try {\n            xhr.setRequestHeader(header, headerValue);\n        } catch (e) {\n            // On an exception, try to set the header URI encoded instead\n            xhr.setRequestHeader(header, encodeURIComponent(headerValue));\n            xhr.setRequestHeader(header + '-URI-AutoEncoded', 'true');\n        }\n    }\n    /**\n   * @param {XMLHttpRequest} xhr\n   * @return {string}\n   */ function getPathFromResponse(xhr) {\n        if (xhr.responseURL) try {\n            const url = new URL(xhr.responseURL);\n            return url.pathname + url.search;\n        } catch (e) {\n            triggerErrorEvent(getDocument().body, 'htmx:badResponseUrl', {\n                url: xhr.responseURL\n            });\n        }\n    }\n    /**\n   * @param {XMLHttpRequest} xhr\n   * @param {RegExp} regexp\n   * @return {boolean}\n   */ function hasHeader(xhr, regexp) {\n        return regexp.test(xhr.getAllResponseHeaders());\n    }\n    /**\n   * Issues an htmx-style AJAX request\n   *\n   * @see https://htmx.org/api/#ajax\n   *\n   * @param {HttpVerb} verb\n   * @param {string} path the URL path to make the AJAX\n   * @param {Element|string|HtmxAjaxHelperContext} context the element to target (defaults to the **body**) | a selector for the target | a context object that contains any of the following\n   * @return {Promise<void>} Promise that resolves immediately if no request is sent, or when the request is complete\n   */ function ajaxHelper(verb, path, context) {\n        verb = /** @type HttpVerb */ verb.toLowerCase();\n        if (context) {\n            if (context instanceof Element || typeof context === 'string') return issueAjaxRequest(verb, path, null, null, {\n                targetOverride: resolveTarget(context) || DUMMY_ELT,\n                returnPromise: true\n            });\n            else {\n                let resolvedTarget = resolveTarget(context.target);\n                // If target is supplied but can't resolve OR source is supplied but both target and source can't be resolved\n                // then use DUMMY_ELT to abort the request with htmx:targetError to avoid it replacing body by mistake\n                if (context.target && !resolvedTarget || context.source && !resolvedTarget && !resolveTarget(context.source)) resolvedTarget = DUMMY_ELT;\n                return issueAjaxRequest(verb, path, resolveTarget(context.source), context.event, {\n                    handler: context.handler,\n                    headers: context.headers,\n                    values: context.values,\n                    targetOverride: resolvedTarget,\n                    swapOverride: context.swap,\n                    select: context.select,\n                    returnPromise: true\n                });\n            }\n        } else return issueAjaxRequest(verb, path, null, null, {\n            returnPromise: true\n        });\n    }\n    /**\n   * @param {Element} elt\n   * @return {Element[]}\n   */ function hierarchyForElt(elt) {\n        const arr = [];\n        while(elt){\n            arr.push(elt);\n            elt = elt.parentElement;\n        }\n        return arr;\n    }\n    /**\n   * @param {Element} elt\n   * @param {string} path\n   * @param {HtmxRequestConfig} requestConfig\n   * @return {boolean}\n   */ function verifyPath(elt, path, requestConfig) {\n        const url = new URL(path, location.protocol !== 'about:' ? location.href : window.origin);\n        const origin = location.protocol !== 'about:' ? location.origin : window.origin;\n        const sameHost = origin === url.origin;\n        if (htmx.config.selfRequestsOnly) {\n            if (!sameHost) return false;\n        }\n        return triggerEvent(elt, 'htmx:validateUrl', mergeObjects({\n            url: url,\n            sameHost: sameHost\n        }, requestConfig));\n    }\n    /**\n   * @param {Object|FormData} obj\n   * @return {FormData}\n   */ function formDataFromObject(obj) {\n        if (obj instanceof FormData) return obj;\n        const formData = new FormData();\n        for(const key in obj)if (obj.hasOwnProperty(key)) {\n            if (obj[key] && typeof obj[key].forEach === 'function') obj[key].forEach(function(v) {\n                formData.append(key, v);\n            });\n            else if (typeof obj[key] === 'object' && !(obj[key] instanceof Blob)) formData.append(key, JSON.stringify(obj[key]));\n            else formData.append(key, obj[key]);\n        }\n        return formData;\n    }\n    /**\n   * @param {FormData} formData\n   * @param {string} name\n   * @param {Array} array\n   * @returns {Array}\n   */ function formDataArrayProxy(formData, name, array) {\n        // mutating the array should mutate the underlying form data\n        return new Proxy(array, {\n            get: function(target, key) {\n                if (typeof key === 'number') return target[key];\n                if (key === 'length') return target.length;\n                if (key === 'push') return function(value) {\n                    target.push(value);\n                    formData.append(name, value);\n                };\n                if (typeof target[key] === 'function') return function() {\n                    target[key].apply(target, arguments);\n                    formData.delete(name);\n                    target.forEach(function(v) {\n                        formData.append(name, v);\n                    });\n                };\n                if (target[key] && target[key].length === 1) return target[key][0];\n                else return target[key];\n            },\n            set: function(target, index, value) {\n                target[index] = value;\n                formData.delete(name);\n                target.forEach(function(v) {\n                    formData.append(name, v);\n                });\n                return true;\n            }\n        });\n    }\n    /**\n   * @param {FormData} formData\n   * @returns {Object}\n   */ function formDataProxy(formData) {\n        return new Proxy(formData, {\n            get: function(target, name) {\n                if (typeof name === 'symbol') {\n                    // Forward symbol calls to the FormData itself directly\n                    const result = Reflect.get(target, name);\n                    // Wrap in function with apply to correctly bind the FormData context, as a direct call would result in an illegal invocation error\n                    if (typeof result === 'function') return function() {\n                        return result.apply(formData, arguments);\n                    };\n                    else return result;\n                }\n                if (name === 'toJSON') // Support JSON.stringify call on proxy\n                return ()=>Object.fromEntries(formData);\n                if (name in target) {\n                    // Wrap in function with apply to correctly bind the FormData context, as a direct call would result in an illegal invocation error\n                    if (typeof target[name] === 'function') return function() {\n                        return formData[name].apply(formData, arguments);\n                    };\n                }\n                const array = formData.getAll(name);\n                // Those 2 undefined & single value returns are for retro-compatibility as we weren't using FormData before\n                if (array.length === 0) return undefined;\n                else if (array.length === 1) return array[0];\n                else return formDataArrayProxy(target, name, array);\n            },\n            set: function(target, name, value) {\n                if (typeof name !== 'string') return false;\n                target.delete(name);\n                if (value && typeof value.forEach === 'function') value.forEach(function(v) {\n                    target.append(name, v);\n                });\n                else if (typeof value === 'object' && !(value instanceof Blob)) target.append(name, JSON.stringify(value));\n                else target.append(name, value);\n                return true;\n            },\n            deleteProperty: function(target, name) {\n                if (typeof name === 'string') target.delete(name);\n                return true;\n            },\n            // Support Object.assign call from proxy\n            ownKeys: function(target) {\n                return Reflect.ownKeys(Object.fromEntries(target));\n            },\n            getOwnPropertyDescriptor: function(target, prop) {\n                return Reflect.getOwnPropertyDescriptor(Object.fromEntries(target), prop);\n            }\n        });\n    }\n    /**\n   * @param {HttpVerb} verb\n   * @param {string} path\n   * @param {Element} elt\n   * @param {Event} event\n   * @param {HtmxAjaxEtc} [etc]\n   * @param {boolean} [confirmed]\n   * @return {Promise<void>}\n   */ function issueAjaxRequest(verb, path, elt, event, etc, confirmed) {\n        let resolve = null;\n        let reject = null;\n        etc = etc != null ? etc : {};\n        if (etc.returnPromise && typeof Promise !== 'undefined') var promise = new Promise(function(_resolve, _reject) {\n            resolve = _resolve;\n            reject = _reject;\n        });\n        if (elt == null) elt = getDocument().body;\n        const responseHandler = etc.handler || handleAjaxResponse;\n        const select = etc.select || null;\n        if (!bodyContains(elt)) {\n            // do not issue requests for elements removed from the DOM\n            maybeCall(resolve);\n            return promise;\n        }\n        const target = etc.targetOverride || asElement(getTarget(elt));\n        if (target == null || target == DUMMY_ELT) {\n            triggerErrorEvent(elt, 'htmx:targetError', {\n                target: getClosestAttributeValue(elt, 'hx-target')\n            });\n            maybeCall(reject);\n            return promise;\n        }\n        let eltData = getInternalData(elt);\n        const submitter = eltData.lastButtonClicked;\n        if (submitter) {\n            const buttonPath = getRawAttribute(submitter, 'formaction');\n            if (buttonPath != null) path = buttonPath;\n            const buttonVerb = getRawAttribute(submitter, 'formmethod');\n            if (buttonVerb != null) {\n                if (VERBS.includes(buttonVerb.toLowerCase())) verb = /** @type HttpVerb */ buttonVerb;\n                else {\n                    maybeCall(resolve);\n                    return promise;\n                }\n            }\n        }\n        const confirmQuestion = getClosestAttributeValue(elt, 'hx-confirm');\n        // allow event-based confirmation w/ a callback\n        if (confirmed === undefined) {\n            const issueRequest = function(skipConfirmation) {\n                return issueAjaxRequest(verb, path, elt, event, etc, !!skipConfirmation);\n            };\n            const confirmDetails = {\n                target: target,\n                elt: elt,\n                path: path,\n                verb: verb,\n                triggeringEvent: event,\n                etc: etc,\n                issueRequest: issueRequest,\n                question: confirmQuestion\n            };\n            if (triggerEvent(elt, 'htmx:confirm', confirmDetails) === false) {\n                maybeCall(resolve);\n                return promise;\n            }\n        }\n        let syncElt = elt;\n        let syncStrategy = getClosestAttributeValue(elt, 'hx-sync');\n        let queueStrategy = null;\n        let abortable = false;\n        if (syncStrategy) {\n            const syncStrings = syncStrategy.split(':');\n            const selector = syncStrings[0].trim();\n            if (selector === 'this') syncElt = findThisElement(elt, 'hx-sync');\n            else syncElt = asElement(querySelectorExt(elt, selector));\n            // default to the drop strategy\n            syncStrategy = (syncStrings[1] || 'drop').trim();\n            eltData = getInternalData(syncElt);\n            if (syncStrategy === 'drop' && eltData.xhr && eltData.abortable !== true) {\n                maybeCall(resolve);\n                return promise;\n            } else if (syncStrategy === 'abort') {\n                if (eltData.xhr) {\n                    maybeCall(resolve);\n                    return promise;\n                } else abortable = true;\n            } else if (syncStrategy === 'replace') triggerEvent(syncElt, 'htmx:abort') // abort the current request and continue\n            ;\n            else if (syncStrategy.indexOf('queue') === 0) {\n                const queueStrArray = syncStrategy.split(' ');\n                queueStrategy = (queueStrArray[1] || 'last').trim();\n            }\n        }\n        if (eltData.xhr) {\n            if (eltData.abortable) triggerEvent(syncElt, 'htmx:abort') // abort the current request and continue\n            ;\n            else {\n                if (queueStrategy == null) {\n                    if (event) {\n                        const eventData = getInternalData(event);\n                        if (eventData && eventData.triggerSpec && eventData.triggerSpec.queue) queueStrategy = eventData.triggerSpec.queue;\n                    }\n                    if (queueStrategy == null) queueStrategy = 'last';\n                }\n                if (eltData.queuedRequests == null) eltData.queuedRequests = [];\n                if (queueStrategy === 'first' && eltData.queuedRequests.length === 0) eltData.queuedRequests.push(function() {\n                    issueAjaxRequest(verb, path, elt, event, etc);\n                });\n                else if (queueStrategy === 'all') eltData.queuedRequests.push(function() {\n                    issueAjaxRequest(verb, path, elt, event, etc);\n                });\n                else if (queueStrategy === 'last') {\n                    eltData.queuedRequests = [] // dump existing queue\n                    ;\n                    eltData.queuedRequests.push(function() {\n                        issueAjaxRequest(verb, path, elt, event, etc);\n                    });\n                }\n                maybeCall(resolve);\n                return promise;\n            }\n        }\n        const xhr = new XMLHttpRequest();\n        eltData.xhr = xhr;\n        eltData.abortable = abortable;\n        const endRequestLock = function() {\n            eltData.xhr = null;\n            eltData.abortable = false;\n            if (eltData.queuedRequests != null && eltData.queuedRequests.length > 0) {\n                const queuedRequest = eltData.queuedRequests.shift();\n                queuedRequest();\n            }\n        };\n        const promptQuestion = getClosestAttributeValue(elt, 'hx-prompt');\n        if (promptQuestion) {\n            var promptResponse = prompt(promptQuestion);\n            // prompt returns null if cancelled and empty string if accepted with no entry\n            if (promptResponse === null || !triggerEvent(elt, 'htmx:prompt', {\n                prompt: promptResponse,\n                target: target\n            })) {\n                maybeCall(resolve);\n                endRequestLock();\n                return promise;\n            }\n        }\n        if (confirmQuestion && !confirmed) {\n            if (!confirm(confirmQuestion)) {\n                maybeCall(resolve);\n                endRequestLock();\n                return promise;\n            }\n        }\n        let headers = getHeaders(elt, target, promptResponse);\n        if (verb !== 'get' && !usesFormData(elt)) headers['Content-Type'] = 'application/x-www-form-urlencoded';\n        if (etc.headers) headers = mergeObjects(headers, etc.headers);\n        const results = getInputValues(elt, verb);\n        let errors = results.errors;\n        const rawFormData = results.formData;\n        if (etc.values) overrideFormData(rawFormData, formDataFromObject(etc.values));\n        const expressionVars = formDataFromObject(getExpressionVars(elt, event));\n        const allFormData = overrideFormData(rawFormData, expressionVars);\n        let filteredFormData = filterValues(allFormData, elt);\n        if (htmx.config.getCacheBusterParam && verb === 'get') filteredFormData.set('org.htmx.cache-buster', getRawAttribute(target, 'id') || 'true');\n        // behavior of anchors w/ empty href is to use the current URL\n        if (path == null || path === '') path = location.href;\n        /**\n     * @type {Object}\n     * @property {boolean} [credentials]\n     * @property {number} [timeout]\n     * @property {boolean} [noHeaders]\n     */ const requestAttrValues = getValuesForElement(elt, 'hx-request');\n        const eltIsBoosted = getInternalData(elt).boosted;\n        let useUrlParams = htmx.config.methodsThatUseUrlParams.indexOf(verb) >= 0;\n        /** @type HtmxRequestConfig */ const requestConfig = {\n            boosted: eltIsBoosted,\n            useUrlParams: useUrlParams,\n            formData: filteredFormData,\n            parameters: formDataProxy(filteredFormData),\n            unfilteredFormData: allFormData,\n            unfilteredParameters: formDataProxy(allFormData),\n            headers: headers,\n            elt: elt,\n            target: target,\n            verb: verb,\n            errors: errors,\n            withCredentials: etc.credentials || requestAttrValues.credentials || htmx.config.withCredentials,\n            timeout: etc.timeout || requestAttrValues.timeout || htmx.config.timeout,\n            path: path,\n            triggeringEvent: event\n        };\n        if (!triggerEvent(elt, 'htmx:configRequest', requestConfig)) {\n            maybeCall(resolve);\n            endRequestLock();\n            return promise;\n        }\n        // copy out in case the object was overwritten\n        path = requestConfig.path;\n        verb = requestConfig.verb;\n        headers = requestConfig.headers;\n        filteredFormData = formDataFromObject(requestConfig.parameters);\n        errors = requestConfig.errors;\n        useUrlParams = requestConfig.useUrlParams;\n        if (errors && errors.length > 0) {\n            triggerEvent(elt, 'htmx:validation:halted', requestConfig);\n            maybeCall(resolve);\n            endRequestLock();\n            return promise;\n        }\n        const splitPath = path.split('#');\n        const pathNoAnchor = splitPath[0];\n        const anchor = splitPath[1];\n        let finalPath = path;\n        if (useUrlParams) {\n            finalPath = pathNoAnchor;\n            const hasValues = !filteredFormData.keys().next().done;\n            if (hasValues) {\n                if (finalPath.indexOf('?') < 0) finalPath += '?';\n                else finalPath += '&';\n                finalPath += urlEncode(filteredFormData);\n                if (anchor) finalPath += '#' + anchor;\n            }\n        }\n        if (!verifyPath(elt, finalPath, requestConfig)) {\n            triggerErrorEvent(elt, 'htmx:invalidPath', requestConfig);\n            maybeCall(reject);\n            endRequestLock();\n            return promise;\n        }\n        xhr.open(verb.toUpperCase(), finalPath, true);\n        xhr.overrideMimeType('text/html');\n        xhr.withCredentials = requestConfig.withCredentials;\n        xhr.timeout = requestConfig.timeout;\n        // request headers\n        if (requestAttrValues.noHeaders) ;\n        else {\n            for(const header in headers)if (headers.hasOwnProperty(header)) {\n                const headerValue = headers[header];\n                safelySetHeaderValue(xhr, header, headerValue);\n            }\n        }\n        /** @type {HtmxResponseInfo} */ const responseInfo = {\n            xhr: xhr,\n            target: target,\n            requestConfig: requestConfig,\n            etc: etc,\n            boosted: eltIsBoosted,\n            select: select,\n            pathInfo: {\n                requestPath: path,\n                finalRequestPath: finalPath,\n                responsePath: null,\n                anchor: anchor\n            }\n        };\n        xhr.onload = function() {\n            try {\n                const hierarchy = hierarchyForElt(elt);\n                responseInfo.pathInfo.responsePath = getPathFromResponse(xhr);\n                responseHandler(elt, responseInfo);\n                if (responseInfo.keepIndicators !== true) removeRequestIndicators(indicators, disableElts);\n                triggerEvent(elt, 'htmx:afterRequest', responseInfo);\n                triggerEvent(elt, 'htmx:afterOnLoad', responseInfo);\n                // if the body no longer contains the element, trigger the event on the closest parent\n                // remaining in the DOM\n                if (!bodyContains(elt)) {\n                    let secondaryTriggerElt = null;\n                    while(hierarchy.length > 0 && secondaryTriggerElt == null){\n                        const parentEltInHierarchy = hierarchy.shift();\n                        if (bodyContains(parentEltInHierarchy)) secondaryTriggerElt = parentEltInHierarchy;\n                    }\n                    if (secondaryTriggerElt) {\n                        triggerEvent(secondaryTriggerElt, 'htmx:afterRequest', responseInfo);\n                        triggerEvent(secondaryTriggerElt, 'htmx:afterOnLoad', responseInfo);\n                    }\n                }\n                maybeCall(resolve);\n            } catch (e) {\n                triggerErrorEvent(elt, 'htmx:onLoadError', mergeObjects({\n                    error: e\n                }, responseInfo));\n                throw e;\n            } finally{\n                endRequestLock();\n            }\n        };\n        xhr.onerror = function() {\n            removeRequestIndicators(indicators, disableElts);\n            triggerErrorEvent(elt, 'htmx:afterRequest', responseInfo);\n            triggerErrorEvent(elt, 'htmx:sendError', responseInfo);\n            maybeCall(reject);\n            endRequestLock();\n        };\n        xhr.onabort = function() {\n            removeRequestIndicators(indicators, disableElts);\n            triggerErrorEvent(elt, 'htmx:afterRequest', responseInfo);\n            triggerErrorEvent(elt, 'htmx:sendAbort', responseInfo);\n            maybeCall(reject);\n            endRequestLock();\n        };\n        xhr.ontimeout = function() {\n            removeRequestIndicators(indicators, disableElts);\n            triggerErrorEvent(elt, 'htmx:afterRequest', responseInfo);\n            triggerErrorEvent(elt, 'htmx:timeout', responseInfo);\n            maybeCall(reject);\n            endRequestLock();\n        };\n        if (!triggerEvent(elt, 'htmx:beforeRequest', responseInfo)) {\n            maybeCall(resolve);\n            endRequestLock();\n            return promise;\n        }\n        var indicators = addRequestIndicatorClasses(elt);\n        var disableElts = disableElements(elt);\n        forEach([\n            'loadstart',\n            'loadend',\n            'progress',\n            'abort'\n        ], function(eventName) {\n            forEach([\n                xhr,\n                xhr.upload\n            ], function(target) {\n                target.addEventListener(eventName, function(event) {\n                    triggerEvent(elt, 'htmx:xhr:' + eventName, {\n                        lengthComputable: event.lengthComputable,\n                        loaded: event.loaded,\n                        total: event.total\n                    });\n                });\n            });\n        });\n        triggerEvent(elt, 'htmx:beforeSend', responseInfo);\n        const params = useUrlParams ? null : encodeParamsForBody(xhr, elt, filteredFormData);\n        xhr.send(params);\n        return promise;\n    }\n    /**\n   * @typedef {Object} HtmxHistoryUpdate\n   * @property {string|null} [type]\n   * @property {string|null} [path]\n   */ /**\n   * @param {Element} elt\n   * @param {HtmxResponseInfo} responseInfo\n   * @return {HtmxHistoryUpdate}\n   */ function determineHistoryUpdates(elt, responseInfo) {\n        const xhr = responseInfo.xhr;\n        //= ==========================================\n        // First consult response headers\n        //= ==========================================\n        let pathFromHeaders = null;\n        let typeFromHeaders = null;\n        if (hasHeader(xhr, /HX-Push:/i)) {\n            pathFromHeaders = xhr.getResponseHeader('HX-Push');\n            typeFromHeaders = 'push';\n        } else if (hasHeader(xhr, /HX-Push-Url:/i)) {\n            pathFromHeaders = xhr.getResponseHeader('HX-Push-Url');\n            typeFromHeaders = 'push';\n        } else if (hasHeader(xhr, /HX-Replace-Url:/i)) {\n            pathFromHeaders = xhr.getResponseHeader('HX-Replace-Url');\n            typeFromHeaders = 'replace';\n        }\n        // if there was a response header, that has priority\n        if (pathFromHeaders) {\n            if (pathFromHeaders === 'false') return {};\n            else return {\n                type: typeFromHeaders,\n                path: pathFromHeaders\n            };\n        }\n        //= ==========================================\n        // Next resolve via DOM values\n        //= ==========================================\n        const requestPath = responseInfo.pathInfo.finalRequestPath;\n        const responsePath = responseInfo.pathInfo.responsePath;\n        const pushUrl = getClosestAttributeValue(elt, 'hx-push-url');\n        const replaceUrl = getClosestAttributeValue(elt, 'hx-replace-url');\n        const elementIsBoosted = getInternalData(elt).boosted;\n        let saveType = null;\n        let path = null;\n        if (pushUrl) {\n            saveType = 'push';\n            path = pushUrl;\n        } else if (replaceUrl) {\n            saveType = 'replace';\n            path = replaceUrl;\n        } else if (elementIsBoosted) {\n            saveType = 'push';\n            path = responsePath || requestPath // if there is no response path, go with the original request path\n            ;\n        }\n        if (path) {\n            // false indicates no push, return empty object\n            if (path === 'false') return {};\n            // true indicates we want to follow wherever the server ended up sending us\n            if (path === 'true') path = responsePath || requestPath // if there is no response path, go with the original request path\n            ;\n            // restore any anchor associated with the request\n            if (responseInfo.pathInfo.anchor && path.indexOf('#') === -1) path = path + '#' + responseInfo.pathInfo.anchor;\n            return {\n                type: saveType,\n                path: path\n            };\n        } else return {};\n    }\n    /**\n   * @param {HtmxResponseHandlingConfig} responseHandlingConfig\n   * @param {number} status\n   * @return {boolean}\n   */ function codeMatches(responseHandlingConfig, status) {\n        var regExp = new RegExp(responseHandlingConfig.code);\n        return regExp.test(status.toString(10));\n    }\n    /**\n   * @param {XMLHttpRequest} xhr\n   * @return {HtmxResponseHandlingConfig}\n   */ function resolveResponseHandling(xhr) {\n        for(var i = 0; i < htmx.config.responseHandling.length; i++){\n            /** @type HtmxResponseHandlingConfig */ var responseHandlingElement = htmx.config.responseHandling[i];\n            if (codeMatches(responseHandlingElement, xhr.status)) return responseHandlingElement;\n        }\n        // no matches, return no swap\n        return {\n            swap: false\n        };\n    }\n    /**\n   * @param {string} title\n   */ function handleTitle(title) {\n        if (title) {\n            const titleElt = find('title');\n            if (titleElt) titleElt.textContent = title;\n            else window.document.title = title;\n        }\n    }\n    /**\n   * Resove the Retarget selector and throw if not found\n   * @param {Element} elt\n   * @param {String} target\n   * @returns {Element}\n   */ function resolveRetarget(elt, target) {\n        if (target === 'this') return elt;\n        const resolvedTarget = asElement(querySelectorExt(elt, target));\n        if (resolvedTarget == null) {\n            triggerErrorEvent(elt, 'htmx:targetError', {\n                target: target\n            });\n            throw new Error(`Invalid re-target ${target}`);\n        }\n        return resolvedTarget;\n    }\n    /**\n   * @param {Element} elt\n   * @param {HtmxResponseInfo} responseInfo\n   */ function handleAjaxResponse(elt, responseInfo) {\n        const xhr = responseInfo.xhr;\n        let target = responseInfo.target;\n        const etc = responseInfo.etc;\n        const responseInfoSelect = responseInfo.select;\n        if (!triggerEvent(elt, 'htmx:beforeOnLoad', responseInfo)) return;\n        if (hasHeader(xhr, /HX-Trigger:/i)) handleTriggerHeader(xhr, 'HX-Trigger', elt);\n        if (hasHeader(xhr, /HX-Location:/i)) {\n            saveCurrentPageToHistory();\n            let redirectPath = xhr.getResponseHeader('HX-Location');\n            /** @type {HtmxAjaxHelperContext&{path:string}} */ var redirectSwapSpec;\n            if (redirectPath.indexOf('{') === 0) {\n                redirectSwapSpec = parseJSON(redirectPath);\n                // what's the best way to throw an error if the user didn't include this\n                redirectPath = redirectSwapSpec.path;\n                delete redirectSwapSpec.path;\n            }\n            ajaxHelper('get', redirectPath, redirectSwapSpec).then(function() {\n                pushUrlIntoHistory(redirectPath);\n            });\n            return;\n        }\n        const shouldRefresh = hasHeader(xhr, /HX-Refresh:/i) && xhr.getResponseHeader('HX-Refresh') === 'true';\n        if (hasHeader(xhr, /HX-Redirect:/i)) {\n            responseInfo.keepIndicators = true;\n            htmx.location.href = xhr.getResponseHeader('HX-Redirect');\n            shouldRefresh && htmx.location.reload();\n            return;\n        }\n        if (shouldRefresh) {\n            responseInfo.keepIndicators = true;\n            htmx.location.reload();\n            return;\n        }\n        const historyUpdate = determineHistoryUpdates(elt, responseInfo);\n        const responseHandling = resolveResponseHandling(xhr);\n        const shouldSwap = responseHandling.swap;\n        let isError = !!responseHandling.error;\n        let ignoreTitle = htmx.config.ignoreTitle || responseHandling.ignoreTitle;\n        let selectOverride = responseHandling.select;\n        if (responseHandling.target) responseInfo.target = resolveRetarget(elt, responseHandling.target);\n        var swapOverride = etc.swapOverride;\n        if (swapOverride == null && responseHandling.swapOverride) swapOverride = responseHandling.swapOverride;\n        // response headers override response handling config\n        if (hasHeader(xhr, /HX-Retarget:/i)) responseInfo.target = resolveRetarget(elt, xhr.getResponseHeader('HX-Retarget'));\n        if (hasHeader(xhr, /HX-Reswap:/i)) swapOverride = xhr.getResponseHeader('HX-Reswap');\n        var serverResponse = xhr.response;\n        /** @type HtmxBeforeSwapDetails */ var beforeSwapDetails = mergeObjects({\n            shouldSwap: shouldSwap,\n            serverResponse: serverResponse,\n            isError: isError,\n            ignoreTitle: ignoreTitle,\n            selectOverride: selectOverride,\n            swapOverride: swapOverride\n        }, responseInfo);\n        if (responseHandling.event && !triggerEvent(target, responseHandling.event, beforeSwapDetails)) return;\n        if (!triggerEvent(target, 'htmx:beforeSwap', beforeSwapDetails)) return;\n        target = beforeSwapDetails.target // allow re-targeting\n        ;\n        serverResponse = beforeSwapDetails.serverResponse // allow updating content\n        ;\n        isError = beforeSwapDetails.isError // allow updating error\n        ;\n        ignoreTitle = beforeSwapDetails.ignoreTitle // allow updating ignoring title\n        ;\n        selectOverride = beforeSwapDetails.selectOverride // allow updating select override\n        ;\n        swapOverride = beforeSwapDetails.swapOverride // allow updating swap override\n        ;\n        responseInfo.target = target // Make updated target available to response events\n        ;\n        responseInfo.failed = isError // Make failed property available to response events\n        ;\n        responseInfo.successful = !isError // Make successful property available to response events\n        ;\n        if (beforeSwapDetails.shouldSwap) {\n            if (xhr.status === 286) cancelPolling(elt);\n            withExtensions(elt, function(extension) {\n                serverResponse = extension.transformResponse(serverResponse, xhr, elt);\n            });\n            // Save current page if there will be a history update\n            if (historyUpdate.type) saveCurrentPageToHistory();\n            var swapSpec = getSwapSpecification(elt, swapOverride);\n            if (!swapSpec.hasOwnProperty('ignoreTitle')) swapSpec.ignoreTitle = ignoreTitle;\n            target.classList.add(htmx.config.swappingClass);\n            if (responseInfoSelect) selectOverride = responseInfoSelect;\n            if (hasHeader(xhr, /HX-Reselect:/i)) selectOverride = xhr.getResponseHeader('HX-Reselect');\n            const selectOOB = getClosestAttributeValue(elt, 'hx-select-oob');\n            const select = getClosestAttributeValue(elt, 'hx-select');\n            swap(target, serverResponse, swapSpec, {\n                select: selectOverride === 'unset' ? null : selectOverride || select,\n                selectOOB: selectOOB,\n                eventInfo: responseInfo,\n                anchor: responseInfo.pathInfo.anchor,\n                contextElement: elt,\n                afterSwapCallback: function() {\n                    if (hasHeader(xhr, /HX-Trigger-After-Swap:/i)) {\n                        let finalElt = elt;\n                        if (!bodyContains(elt)) finalElt = getDocument().body;\n                        handleTriggerHeader(xhr, 'HX-Trigger-After-Swap', finalElt);\n                    }\n                },\n                afterSettleCallback: function() {\n                    if (hasHeader(xhr, /HX-Trigger-After-Settle:/i)) {\n                        let finalElt = elt;\n                        if (!bodyContains(elt)) finalElt = getDocument().body;\n                        handleTriggerHeader(xhr, 'HX-Trigger-After-Settle', finalElt);\n                    }\n                },\n                beforeSwapCallback: function() {\n                    // if we need to save history, do so, before swapping so that relative resources have the correct base URL\n                    if (historyUpdate.type) {\n                        triggerEvent(getDocument().body, 'htmx:beforeHistoryUpdate', mergeObjects({\n                            history: historyUpdate\n                        }, responseInfo));\n                        if (historyUpdate.type === 'push') {\n                            pushUrlIntoHistory(historyUpdate.path);\n                            triggerEvent(getDocument().body, 'htmx:pushedIntoHistory', {\n                                path: historyUpdate.path\n                            });\n                        } else {\n                            replaceUrlInHistory(historyUpdate.path);\n                            triggerEvent(getDocument().body, 'htmx:replacedInHistory', {\n                                path: historyUpdate.path\n                            });\n                        }\n                    }\n                }\n            });\n        }\n        if (isError) triggerErrorEvent(elt, 'htmx:responseError', mergeObjects({\n            error: 'Response Status Error Code ' + xhr.status + ' from ' + responseInfo.pathInfo.requestPath\n        }, responseInfo));\n    }\n    //= ===================================================================\n    // Extensions API\n    //= ===================================================================\n    /** @type {Object<string, HtmxExtension>} */ const extensions = {};\n    /**\n   * extensionBase defines the default functions for all extensions.\n   * @returns {HtmxExtension}\n   */ function extensionBase() {\n        return {\n            init: function(api) {\n                return null;\n            },\n            getSelectors: function() {\n                return null;\n            },\n            onEvent: function(name, evt) {\n                return true;\n            },\n            transformResponse: function(text, xhr, elt) {\n                return text;\n            },\n            isInlineSwap: function(swapStyle) {\n                return false;\n            },\n            handleSwap: function(swapStyle, target, fragment, settleInfo) {\n                return false;\n            },\n            encodeParameters: function(xhr, parameters, elt) {\n                return null;\n            }\n        };\n    }\n    /**\n   * defineExtension initializes the extension and adds it to the htmx registry\n   *\n   * @see https://htmx.org/api/#defineExtension\n   *\n   * @param {string} name the extension name\n   * @param {Partial<HtmxExtension>} extension the extension definition\n   */ function defineExtension(name, extension) {\n        if (extension.init) extension.init(internalAPI);\n        extensions[name] = mergeObjects(extensionBase(), extension);\n    }\n    /**\n   * removeExtension removes an extension from the htmx registry\n   *\n   * @see https://htmx.org/api/#removeExtension\n   *\n   * @param {string} name\n   */ function removeExtension(name) {\n        delete extensions[name];\n    }\n    /**\n   * getExtensions searches up the DOM tree to return all extensions that can be applied to a given element\n   *\n   * @param {Element} elt\n   * @param {HtmxExtension[]=} extensionsToReturn\n   * @param {string[]=} extensionsToIgnore\n   * @returns {HtmxExtension[]}\n   */ function getExtensions(elt, extensionsToReturn, extensionsToIgnore) {\n        if (extensionsToReturn == undefined) extensionsToReturn = [];\n        if (elt == undefined) return extensionsToReturn;\n        if (extensionsToIgnore == undefined) extensionsToIgnore = [];\n        const extensionsForElement = getAttributeValue(elt, 'hx-ext');\n        if (extensionsForElement) forEach(extensionsForElement.split(','), function(extensionName) {\n            extensionName = extensionName.replace(/ /g, '');\n            if (extensionName.slice(0, 7) == 'ignore:') {\n                extensionsToIgnore.push(extensionName.slice(7));\n                return;\n            }\n            if (extensionsToIgnore.indexOf(extensionName) < 0) {\n                const extension = extensions[extensionName];\n                if (extension && extensionsToReturn.indexOf(extension) < 0) extensionsToReturn.push(extension);\n            }\n        });\n        return getExtensions(asElement(parentElt(elt)), extensionsToReturn, extensionsToIgnore);\n    }\n    //= ===================================================================\n    // Initialization\n    //= ===================================================================\n    var isReady = false;\n    getDocument().addEventListener('DOMContentLoaded', function() {\n        isReady = true;\n    });\n    /**\n   * Execute a function now if DOMContentLoaded has fired, otherwise listen for it.\n   *\n   * This function uses isReady because there is no reliable way to ask the browser whether\n   * the DOMContentLoaded event has already been fired; there's a gap between DOMContentLoaded\n   * firing and readystate=complete.\n   */ function ready(fn) {\n        // Checking readyState here is a failsafe in case the htmx script tag entered the DOM by\n        // some means other than the initial page load.\n        if (isReady || getDocument().readyState === 'complete') fn();\n        else getDocument().addEventListener('DOMContentLoaded', fn);\n    }\n    function insertIndicatorStyles() {\n        if (htmx.config.includeIndicatorStyles !== false) {\n            const nonceAttribute = htmx.config.inlineStyleNonce ? ` nonce=\"${htmx.config.inlineStyleNonce}\"` : '';\n            getDocument().head.insertAdjacentHTML('beforeend', '<style' + nonceAttribute + '>\\\n      .' + htmx.config.indicatorClass + '{opacity:0}\\\n      .' + htmx.config.requestClass + ' .' + htmx.config.indicatorClass + '{opacity:1; transition: opacity 200ms ease-in;}\\\n      .' + htmx.config.requestClass + '.' + htmx.config.indicatorClass + '{opacity:1; transition: opacity 200ms ease-in;}\\\n      </style>');\n        }\n    }\n    function getMetaConfig() {\n        /** @type HTMLMetaElement */ const element = getDocument().querySelector('meta[name=\"htmx-config\"]');\n        if (element) return parseJSON(element.content);\n        else return null;\n    }\n    function mergeMetaConfig() {\n        const metaConfig = getMetaConfig();\n        if (metaConfig) htmx.config = mergeObjects(htmx.config, metaConfig);\n    }\n    // initialize the document\n    ready(function() {\n        mergeMetaConfig();\n        insertIndicatorStyles();\n        let body = getDocument().body;\n        processNode(body);\n        const restoredElts = getDocument().querySelectorAll(\"[hx-trigger='restored'],[data-hx-trigger='restored']\");\n        body.addEventListener('htmx:abort', function(evt) {\n            const target = evt.target;\n            const internalData = getInternalData(target);\n            if (internalData && internalData.xhr) internalData.xhr.abort();\n        });\n        /** @type {(ev: PopStateEvent) => any} */ const originalPopstate = window.onpopstate ? window.onpopstate.bind(window) : null;\n        /** @type {(ev: PopStateEvent) => any} */ window.onpopstate = function(event) {\n            if (event.state && event.state.htmx) {\n                restoreHistory();\n                forEach(restoredElts, function(elt) {\n                    triggerEvent(elt, 'htmx:restored', {\n                        document: getDocument(),\n                        triggerEvent: triggerEvent\n                    });\n                });\n            } else if (originalPopstate) originalPopstate(event);\n        };\n        getWindow().setTimeout(function() {\n            triggerEvent(body, 'htmx:load', {}) // give ready handlers a chance to load up before firing this event\n            ;\n            body = null // kill reference for gc\n            ;\n        }, 0);\n    });\n    return htmx;\n}();\nvar /** @typedef {'get'|'head'|'post'|'put'|'delete'|'connect'|'options'|'trace'|'patch'} HttpVerb */ /**\n * @typedef {Object} SwapOptions\n * @property {string} [select]\n * @property {string} [selectOOB]\n * @property {*} [eventInfo]\n * @property {string} [anchor]\n * @property {Element} [contextElement]\n * @property {swapCallback} [afterSwapCallback]\n * @property {swapCallback} [afterSettleCallback]\n * @property {swapCallback} [beforeSwapCallback]\n * @property {string} [title]\n * @property {boolean} [historyRequest]\n */ /**\n * @callback swapCallback\n */ /**\n * @typedef {'innerHTML' | 'outerHTML' | 'beforebegin' | 'afterbegin' | 'beforeend' | 'afterend' | 'delete' | 'none' | string} HtmxSwapStyle\n */ /**\n * @typedef HtmxSwapSpecification\n * @property {HtmxSwapStyle} swapStyle\n * @property {number} swapDelay\n * @property {number} settleDelay\n * @property {boolean} [transition]\n * @property {boolean} [ignoreTitle]\n * @property {string} [head]\n * @property {'top' | 'bottom' | number } [scroll]\n * @property {string} [scrollTarget]\n * @property {string} [show]\n * @property {string} [showTarget]\n * @property {boolean} [focusScroll]\n */ /**\n * @typedef {((this:Node, evt:Event) => boolean) & {source: string}} ConditionalFunction\n */ /**\n * @typedef {Object} HtmxTriggerSpecification\n * @property {string} trigger\n * @property {number} [pollInterval]\n * @property {ConditionalFunction} [eventFilter]\n * @property {boolean} [changed]\n * @property {boolean} [once]\n * @property {boolean} [consume]\n * @property {number} [delay]\n * @property {string} [from]\n * @property {string} [target]\n * @property {number} [throttle]\n * @property {string} [queue]\n * @property {string} [root]\n * @property {string} [threshold]\n */ /**\n * @typedef {{elt: Element, message: string, validity: ValidityState}} HtmxElementValidationError\n */ /**\n * @typedef {Record<string, string>} HtmxHeaderSpecification\n * @property {'true'} HX-Request\n * @property {string|null} HX-Trigger\n * @property {string|null} HX-Trigger-Name\n * @property {string|null} HX-Target\n * @property {string} HX-Current-URL\n * @property {string} [HX-Prompt]\n * @property {'true'} [HX-Boosted]\n * @property {string} [Content-Type]\n * @property {'true'} [HX-History-Restore-Request]\n */ /**\n * @typedef HtmxAjaxHelperContext\n * @property {Element|string} [source]\n * @property {Event} [event]\n * @property {HtmxAjaxHandler} [handler]\n * @property {Element|string} [target]\n * @property {HtmxSwapStyle} [swap]\n * @property {Object|FormData} [values]\n * @property {Record<string,string>} [headers]\n * @property {string} [select]\n */ /**\n * @typedef {Object} HtmxRequestConfig\n * @property {boolean} boosted\n * @property {boolean} useUrlParams\n * @property {FormData} formData\n * @property {Object} parameters formData proxy\n * @property {FormData} unfilteredFormData\n * @property {Object} unfilteredParameters unfilteredFormData proxy\n * @property {HtmxHeaderSpecification} headers\n * @property {Element} elt\n * @property {Element} target\n * @property {HttpVerb} verb\n * @property {HtmxElementValidationError[]} errors\n * @property {boolean} withCredentials\n * @property {number} timeout\n * @property {string} path\n * @property {Event} triggeringEvent\n */ /**\n * @typedef {Object} HtmxResponseInfo\n * @property {XMLHttpRequest} xhr\n * @property {Element} target\n * @property {HtmxRequestConfig} requestConfig\n * @property {HtmxAjaxEtc} etc\n * @property {boolean} boosted\n * @property {string} select\n * @property {{requestPath: string, finalRequestPath: string, responsePath: string|null, anchor: string}} pathInfo\n * @property {boolean} [failed]\n * @property {boolean} [successful]\n * @property {boolean} [keepIndicators]\n */ /**\n * @typedef {Object} HtmxAjaxEtc\n * @property {boolean} [returnPromise]\n * @property {HtmxAjaxHandler} [handler]\n * @property {string} [select]\n * @property {Element} [targetOverride]\n * @property {HtmxSwapStyle} [swapOverride]\n * @property {Record<string,string>} [headers]\n * @property {Object|FormData} [values]\n * @property {boolean} [credentials]\n * @property {number} [timeout]\n */ /**\n * @typedef {Object} HtmxResponseHandlingConfig\n * @property {string} [code]\n * @property {boolean} swap\n * @property {boolean} [error]\n * @property {boolean} [ignoreTitle]\n * @property {string} [select]\n * @property {string} [target]\n * @property {string} [swapOverride]\n * @property {string} [event]\n */ /**\n * @typedef {HtmxResponseInfo & {shouldSwap: boolean, serverResponse: any, isError: boolean, ignoreTitle: boolean, selectOverride:string, swapOverride:string}} HtmxBeforeSwapDetails\n */ /**\n * @callback HtmxAjaxHandler\n * @param {Element} elt\n * @param {HtmxResponseInfo} responseInfo\n */ /**\n * @typedef {(() => void)} HtmxSettleTask\n */ /**\n * @typedef {Object} HtmxSettleInfo\n * @property {HtmxSettleTask[]} tasks\n * @property {Element[]} elts\n * @property {string} [title]\n */ /**\n * @see https://github.com/bigskysoftware/htmx-extensions/blob/main/README.md\n * @typedef {Object} HtmxExtension\n * @property {(api: any) => void} init\n * @property {(name: string, event: CustomEvent) => boolean} onEvent\n * @property {(text: string, xhr: XMLHttpRequest, elt: Element) => string} transformResponse\n * @property {(swapStyle: HtmxSwapStyle) => boolean} isInlineSwap\n * @property {(swapStyle: HtmxSwapStyle, target: Node, fragment: Node, settleInfo: HtmxSettleInfo) => boolean|Node[]} handleSwap\n * @property {(xhr: XMLHttpRequest, parameters: FormData, elt: Node) => *|string|null} encodeParameters\n * @property {() => string[]|null} getSelectors\n */ $609bbda3516a49df$export$2e2bcd8739ae039 = htmx;\n\n});\n\nvar $91ca15859685b28b$exports = {};\n\n$parcel$export($91ca15859685b28b$exports, \"Alert\", () => $91ca15859685b28b$export$caec2af78bcc877f);\n$parcel$export($91ca15859685b28b$exports, \"Button\", () => $91ca15859685b28b$export$353f5b6fc5456de1);\n$parcel$export($91ca15859685b28b$exports, \"Carousel\", () => $91ca15859685b28b$export$144901db2ea8e967);\n$parcel$export($91ca15859685b28b$exports, \"Collapse\", () => $91ca15859685b28b$export$78768a9af065a7b);\n$parcel$export($91ca15859685b28b$exports, \"Dropdown\", () => $91ca15859685b28b$export$931cbfb6bfb85fc);\n$parcel$export($91ca15859685b28b$exports, \"Modal\", () => $91ca15859685b28b$export$2b77a92f1a5ad772);\n$parcel$export($91ca15859685b28b$exports, \"Offcanvas\", () => $91ca15859685b28b$export$591ca0244c9dfcd4);\n$parcel$export($91ca15859685b28b$exports, \"Tooltip\", () => $91ca15859685b28b$export$28c660c63b792dea);\n$parcel$export($91ca15859685b28b$exports, \"Popover\", () => $91ca15859685b28b$export$5b6b19405a83ff9d);\n$parcel$export($91ca15859685b28b$exports, \"ScrollSpy\", () => $91ca15859685b28b$export$a6472a5298a374be);\n$parcel$export($91ca15859685b28b$exports, \"Tab\", () => $91ca15859685b28b$export$3e41faf802a29e71);\n$parcel$export($91ca15859685b28b$exports, \"Toast\", () => $91ca15859685b28b$export$8d8dc7d5f743331b);\n/*!\n  * Bootstrap v5.3.7 (https://getbootstrap.com/)\n  * Copyright 2011-2025 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */ var $d37552697cc5ea39$exports = {};\n\n$parcel$export($d37552697cc5ea39$exports, \"popperGenerator\", () => $b3c2fd6800546b4b$export$ed5e13716264f202);\n$parcel$export($d37552697cc5ea39$exports, \"detectOverflow\", () => $f765731200b57f98$export$2e2bcd8739ae039);\n$parcel$export($d37552697cc5ea39$exports, \"createPopperBase\", () => $b3c2fd6800546b4b$export$8f7491d57c8f97a9);\n$parcel$export($d37552697cc5ea39$exports, \"createPopper\", () => $1bf0bf541303046d$export$8f7491d57c8f97a9);\n$parcel$export($d37552697cc5ea39$exports, \"createPopperLite\", () => $cff5cce2532d9fa1$export$8f7491d57c8f97a9);\nvar $f5c54167a3c62105$exports = {};\n\n$parcel$export($f5c54167a3c62105$exports, \"top\", () => $f5c54167a3c62105$export$1e95b668f3b82d);\n$parcel$export($f5c54167a3c62105$exports, \"bottom\", () => $f5c54167a3c62105$export$40e543e69a8b3fbb);\n$parcel$export($f5c54167a3c62105$exports, \"right\", () => $f5c54167a3c62105$export$79ffe56a765070d2);\n$parcel$export($f5c54167a3c62105$exports, \"left\", () => $f5c54167a3c62105$export$eabcd2c8791e7bf4);\n$parcel$export($f5c54167a3c62105$exports, \"auto\", () => $f5c54167a3c62105$export$dfb5619354ba860);\n$parcel$export($f5c54167a3c62105$exports, \"basePlacements\", () => $f5c54167a3c62105$export$aec2ce47c367b8c3);\n$parcel$export($f5c54167a3c62105$exports, \"start\", () => $f5c54167a3c62105$export$b3571188c770cc5a);\n$parcel$export($f5c54167a3c62105$exports, \"end\", () => $f5c54167a3c62105$export$bd5df0f255a350f8);\n$parcel$export($f5c54167a3c62105$exports, \"clippingParents\", () => $f5c54167a3c62105$export$390fd549c5303b4d);\n$parcel$export($f5c54167a3c62105$exports, \"viewport\", () => $f5c54167a3c62105$export$d7b7311ec04a3e8f);\n$parcel$export($f5c54167a3c62105$exports, \"popper\", () => $f5c54167a3c62105$export$ae5ab1c730825774);\n$parcel$export($f5c54167a3c62105$exports, \"reference\", () => $f5c54167a3c62105$export$ca50aac9f3ba507f);\n$parcel$export($f5c54167a3c62105$exports, \"variationPlacements\", () => $f5c54167a3c62105$export$368f9a87e87fa4e1);\n$parcel$export($f5c54167a3c62105$exports, \"placements\", () => $f5c54167a3c62105$export$803cd8101b6c182b);\n$parcel$export($f5c54167a3c62105$exports, \"beforeRead\", () => $f5c54167a3c62105$export$421679a7c3d56e);\n$parcel$export($f5c54167a3c62105$exports, \"read\", () => $f5c54167a3c62105$export$aafa59e2e03f2942);\n$parcel$export($f5c54167a3c62105$exports, \"afterRead\", () => $f5c54167a3c62105$export$6964f6c886723980);\n$parcel$export($f5c54167a3c62105$exports, \"beforeMain\", () => $f5c54167a3c62105$export$c65e99957a05207c);\n$parcel$export($f5c54167a3c62105$exports, \"main\", () => $f5c54167a3c62105$export$f22da7240b7add18);\n$parcel$export($f5c54167a3c62105$exports, \"afterMain\", () => $f5c54167a3c62105$export$bab79516f2d662fe);\n$parcel$export($f5c54167a3c62105$exports, \"beforeWrite\", () => $f5c54167a3c62105$export$8d4d2d70e7d46032);\n$parcel$export($f5c54167a3c62105$exports, \"write\", () => $f5c54167a3c62105$export$68d8715fc104d294);\n$parcel$export($f5c54167a3c62105$exports, \"afterWrite\", () => $f5c54167a3c62105$export$70a6e5159acce2e6);\n$parcel$export($f5c54167a3c62105$exports, \"modifierPhases\", () => $f5c54167a3c62105$export$d087d3878fdf71d5);\nvar $f5c54167a3c62105$export$1e95b668f3b82d = 'top';\nvar $f5c54167a3c62105$export$40e543e69a8b3fbb = 'bottom';\nvar $f5c54167a3c62105$export$79ffe56a765070d2 = 'right';\nvar $f5c54167a3c62105$export$eabcd2c8791e7bf4 = 'left';\nvar $f5c54167a3c62105$export$dfb5619354ba860 = 'auto';\nvar $f5c54167a3c62105$export$aec2ce47c367b8c3 = [\n    $f5c54167a3c62105$export$1e95b668f3b82d,\n    $f5c54167a3c62105$export$40e543e69a8b3fbb,\n    $f5c54167a3c62105$export$79ffe56a765070d2,\n    $f5c54167a3c62105$export$eabcd2c8791e7bf4\n];\nvar $f5c54167a3c62105$export$b3571188c770cc5a = 'start';\nvar $f5c54167a3c62105$export$bd5df0f255a350f8 = 'end';\nvar $f5c54167a3c62105$export$390fd549c5303b4d = 'clippingParents';\nvar $f5c54167a3c62105$export$d7b7311ec04a3e8f = 'viewport';\nvar $f5c54167a3c62105$export$ae5ab1c730825774 = 'popper';\nvar $f5c54167a3c62105$export$ca50aac9f3ba507f = 'reference';\nvar $f5c54167a3c62105$export$368f9a87e87fa4e1 = /*#__PURE__*/ $f5c54167a3c62105$export$aec2ce47c367b8c3.reduce(function(acc, placement) {\n    return acc.concat([\n        placement + \"-\" + $f5c54167a3c62105$export$b3571188c770cc5a,\n        placement + \"-\" + $f5c54167a3c62105$export$bd5df0f255a350f8\n    ]);\n}, []);\nvar $f5c54167a3c62105$export$803cd8101b6c182b = /*#__PURE__*/ [].concat($f5c54167a3c62105$export$aec2ce47c367b8c3, [\n    $f5c54167a3c62105$export$dfb5619354ba860\n]).reduce(function(acc, placement) {\n    return acc.concat([\n        placement,\n        placement + \"-\" + $f5c54167a3c62105$export$b3571188c770cc5a,\n        placement + \"-\" + $f5c54167a3c62105$export$bd5df0f255a350f8\n    ]);\n}, []); // modifiers that need to read the DOM\nvar $f5c54167a3c62105$export$421679a7c3d56e = 'beforeRead';\nvar $f5c54167a3c62105$export$aafa59e2e03f2942 = 'read';\nvar $f5c54167a3c62105$export$6964f6c886723980 = 'afterRead'; // pure-logic modifiers\nvar $f5c54167a3c62105$export$c65e99957a05207c = 'beforeMain';\nvar $f5c54167a3c62105$export$f22da7240b7add18 = 'main';\nvar $f5c54167a3c62105$export$bab79516f2d662fe = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)\nvar $f5c54167a3c62105$export$8d4d2d70e7d46032 = 'beforeWrite';\nvar $f5c54167a3c62105$export$68d8715fc104d294 = 'write';\nvar $f5c54167a3c62105$export$70a6e5159acce2e6 = 'afterWrite';\nvar $f5c54167a3c62105$export$d087d3878fdf71d5 = [\n    $f5c54167a3c62105$export$421679a7c3d56e,\n    $f5c54167a3c62105$export$aafa59e2e03f2942,\n    $f5c54167a3c62105$export$6964f6c886723980,\n    $f5c54167a3c62105$export$c65e99957a05207c,\n    $f5c54167a3c62105$export$f22da7240b7add18,\n    $f5c54167a3c62105$export$bab79516f2d662fe,\n    $f5c54167a3c62105$export$8d4d2d70e7d46032,\n    $f5c54167a3c62105$export$68d8715fc104d294,\n    $f5c54167a3c62105$export$70a6e5159acce2e6\n];\n\n\nvar $1341d386dda6ba3e$exports = {};\n\n$parcel$export($1341d386dda6ba3e$exports, \"applyStyles\", () => $83c1fc4c4e58d7dd$export$2e2bcd8739ae039);\n$parcel$export($1341d386dda6ba3e$exports, \"arrow\", () => $1992f2d714808ab6$export$2e2bcd8739ae039);\n$parcel$export($1341d386dda6ba3e$exports, \"computeStyles\", () => $c8f8eadcf7685dc5$export$2e2bcd8739ae039);\n$parcel$export($1341d386dda6ba3e$exports, \"eventListeners\", () => $ff355aafd082b0cd$export$2e2bcd8739ae039);\n$parcel$export($1341d386dda6ba3e$exports, \"flip\", () => $b1f32a1d9525a032$export$2e2bcd8739ae039);\n$parcel$export($1341d386dda6ba3e$exports, \"hide\", () => $174d14927bb4f43b$export$2e2bcd8739ae039);\n$parcel$export($1341d386dda6ba3e$exports, \"offset\", () => $7c04da2e958a3fe8$export$2e2bcd8739ae039);\n$parcel$export($1341d386dda6ba3e$exports, \"popperOffsets\", () => $e92fb10df1450f31$export$2e2bcd8739ae039);\n$parcel$export($1341d386dda6ba3e$exports, \"preventOverflow\", () => $3295dac8746ffe59$export$2e2bcd8739ae039);\nfunction $4f30cf0ce50e075e$export$2e2bcd8739ae039(element) {\n    return element ? (element.nodeName || '').toLowerCase() : null;\n}\n\n\nfunction $df9341392e6ed7b1$export$2e2bcd8739ae039(node) {\n    if (node == null) return window;\n    if (node.toString() !== '[object Window]') {\n        var ownerDocument = node.ownerDocument;\n        return ownerDocument ? ownerDocument.defaultView || window : window;\n    }\n    return node;\n}\n\n\nfunction $d98cb23738a6d9d0$export$45a5e7f76e0caa8d(node) {\n    var OwnElement = (0, $df9341392e6ed7b1$export$2e2bcd8739ae039)(node).Element;\n    return node instanceof OwnElement || node instanceof Element;\n}\nfunction $d98cb23738a6d9d0$export$1b3bfaa9684536aa(node) {\n    var OwnElement = (0, $df9341392e6ed7b1$export$2e2bcd8739ae039)(node).HTMLElement;\n    return node instanceof OwnElement || node instanceof HTMLElement;\n}\nfunction $d98cb23738a6d9d0$export$af51f0f06c0f328a(node) {\n    // IE 11 has no ShadowRoot\n    if (typeof ShadowRoot === 'undefined') return false;\n    var OwnElement = (0, $df9341392e6ed7b1$export$2e2bcd8739ae039)(node).ShadowRoot;\n    return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\n\n// and applies them to the HTMLElements such as popper and arrow\nfunction $83c1fc4c4e58d7dd$var$applyStyles(_ref) {\n    var state = _ref.state;\n    Object.keys(state.elements).forEach(function(name) {\n        var style = state.styles[name] || {};\n        var attributes = state.attributes[name] || {};\n        var element = state.elements[name]; // arrow is optional + virtual elements\n        if (!(0, $d98cb23738a6d9d0$export$1b3bfaa9684536aa)(element) || !(0, $4f30cf0ce50e075e$export$2e2bcd8739ae039)(element)) return;\n         // Flow doesn't support to extend this property, but it's the most\n        // effective way to apply styles to an HTMLElement\n        // $FlowFixMe[cannot-write]\n        Object.assign(element.style, style);\n        Object.keys(attributes).forEach(function(name) {\n            var value = attributes[name];\n            if (value === false) element.removeAttribute(name);\n            else element.setAttribute(name, value === true ? '' : value);\n        });\n    });\n}\nfunction $83c1fc4c4e58d7dd$var$effect(_ref2) {\n    var state = _ref2.state;\n    var initialStyles = {\n        popper: {\n            position: state.options.strategy,\n            left: '0',\n            top: '0',\n            margin: '0'\n        },\n        arrow: {\n            position: 'absolute'\n        },\n        reference: {}\n    };\n    Object.assign(state.elements.popper.style, initialStyles.popper);\n    state.styles = initialStyles;\n    if (state.elements.arrow) Object.assign(state.elements.arrow.style, initialStyles.arrow);\n    return function() {\n        Object.keys(state.elements).forEach(function(name) {\n            var element = state.elements[name];\n            var attributes = state.attributes[name] || {};\n            var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them\n            var style = styleProperties.reduce(function(style, property) {\n                style[property] = '';\n                return style;\n            }, {}); // arrow is optional + virtual elements\n            if (!(0, $d98cb23738a6d9d0$export$1b3bfaa9684536aa)(element) || !(0, $4f30cf0ce50e075e$export$2e2bcd8739ae039)(element)) return;\n            Object.assign(element.style, style);\n            Object.keys(attributes).forEach(function(attribute) {\n                element.removeAttribute(attribute);\n            });\n        });\n    };\n} // eslint-disable-next-line import/no-unused-modules\nvar $83c1fc4c4e58d7dd$export$2e2bcd8739ae039 = {\n    name: 'applyStyles',\n    enabled: true,\n    phase: 'write',\n    fn: $83c1fc4c4e58d7dd$var$applyStyles,\n    effect: $83c1fc4c4e58d7dd$var$effect,\n    requires: [\n        'computeStyles'\n    ]\n};\n\n\n\nfunction $afe288682115fde3$export$2e2bcd8739ae039(placement) {\n    return placement.split('-')[0];\n}\n\n\n\nvar $7e23bad950468b82$export$8960430cfd85939f = Math.max;\nvar $7e23bad950468b82$export$96ec731ed4dcb222 = Math.min;\nvar $7e23bad950468b82$export$2077e0241d6afd3c = Math.round;\n\n\n\nfunction $90ccbd5892233dd2$export$2e2bcd8739ae039() {\n    var uaData = navigator.userAgentData;\n    if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) return uaData.brands.map(function(item) {\n        return item.brand + \"/\" + item.version;\n    }).join(' ');\n    return navigator.userAgent;\n}\n\n\nfunction $993d40d65cc118cd$export$2e2bcd8739ae039() {\n    return !/^((?!chrome|android).)*safari/i.test((0, $90ccbd5892233dd2$export$2e2bcd8739ae039)());\n}\n\n\nfunction $84019ab652aa921b$export$2e2bcd8739ae039(element, includeScale, isFixedStrategy) {\n    if (includeScale === void 0) includeScale = false;\n    if (isFixedStrategy === void 0) isFixedStrategy = false;\n    var clientRect = element.getBoundingClientRect();\n    var scaleX = 1;\n    var scaleY = 1;\n    if (includeScale && (0, $d98cb23738a6d9d0$export$1b3bfaa9684536aa)(element)) {\n        scaleX = element.offsetWidth > 0 ? (0, $7e23bad950468b82$export$2077e0241d6afd3c)(clientRect.width) / element.offsetWidth || 1 : 1;\n        scaleY = element.offsetHeight > 0 ? (0, $7e23bad950468b82$export$2077e0241d6afd3c)(clientRect.height) / element.offsetHeight || 1 : 1;\n    }\n    var _ref = (0, $d98cb23738a6d9d0$export$45a5e7f76e0caa8d)(element) ? (0, $df9341392e6ed7b1$export$2e2bcd8739ae039)(element) : window, visualViewport = _ref.visualViewport;\n    var addVisualOffsets = !(0, $993d40d65cc118cd$export$2e2bcd8739ae039)() && isFixedStrategy;\n    var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;\n    var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;\n    var width = clientRect.width / scaleX;\n    var height = clientRect.height / scaleY;\n    return {\n        width: width,\n        height: height,\n        top: y,\n        right: x + width,\n        bottom: y + height,\n        left: x,\n        x: x,\n        y: y\n    };\n}\n\n\nfunction $30ced62b744c6cfe$export$2e2bcd8739ae039(element) {\n    var clientRect = (0, $84019ab652aa921b$export$2e2bcd8739ae039)(element); // Use the clientRect sizes if it's not been transformed.\n    // Fixes https://github.com/popperjs/popper-core/issues/1223\n    var width = element.offsetWidth;\n    var height = element.offsetHeight;\n    if (Math.abs(clientRect.width - width) <= 1) width = clientRect.width;\n    if (Math.abs(clientRect.height - height) <= 1) height = clientRect.height;\n    return {\n        x: element.offsetLeft,\n        y: element.offsetTop,\n        width: width,\n        height: height\n    };\n}\n\n\n\nfunction $d63950b756706495$export$2e2bcd8739ae039(parent, child) {\n    var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\n    if (parent.contains(child)) return true;\n    else if (rootNode && (0, $d98cb23738a6d9d0$export$af51f0f06c0f328a)(rootNode)) {\n        var next = child;\n        do {\n            if (next && parent.isSameNode(next)) return true;\n             // $FlowFixMe[prop-missing]: need a better way to handle this...\n            next = next.parentNode || next.host;\n        }while (next);\n    } // Give up, the result is false\n    return false;\n}\n\n\n\n\n\nfunction $41cae7042543c5d5$export$2e2bcd8739ae039(element) {\n    return (0, $df9341392e6ed7b1$export$2e2bcd8739ae039)(element).getComputedStyle(element);\n}\n\n\n\n\nfunction $6829c22fb01dde5a$export$2e2bcd8739ae039(element) {\n    return [\n        'table',\n        'td',\n        'th'\n    ].indexOf((0, $4f30cf0ce50e075e$export$2e2bcd8739ae039)(element)) >= 0;\n}\n\n\n\n\nfunction $433af39bc2fae35d$export$2e2bcd8739ae039(element) {\n    // $FlowFixMe[incompatible-return]: assume body is always available\n    return (((0, $d98cb23738a6d9d0$export$45a5e7f76e0caa8d)(element) ? element.ownerDocument : element.document) || window.document).documentElement;\n}\n\n\n\nfunction $17f6a21d28fc02f5$export$2e2bcd8739ae039(element) {\n    if ((0, $4f30cf0ce50e075e$export$2e2bcd8739ae039)(element) === 'html') return element;\n    return(// $FlowFixMe[incompatible-return]\n    // $FlowFixMe[prop-missing]\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || ((0, $d98cb23738a6d9d0$export$af51f0f06c0f328a)(element) ? element.host : null) || // ShadowRoot detected\n    // $FlowFixMe[incompatible-call]: HTMLElement is a Node\n    (0, $433af39bc2fae35d$export$2e2bcd8739ae039)(element) // fallback\n    );\n}\n\n\n\nfunction $a56b734280245ffb$var$getTrueOffsetParent(element) {\n    if (!(0, $d98cb23738a6d9d0$export$1b3bfaa9684536aa)(element) || // https://github.com/popperjs/popper-core/issues/837\n    (0, $41cae7042543c5d5$export$2e2bcd8739ae039)(element).position === 'fixed') return null;\n    return element.offsetParent;\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\nfunction $a56b734280245ffb$var$getContainingBlock(element) {\n    var isFirefox = /firefox/i.test((0, $90ccbd5892233dd2$export$2e2bcd8739ae039)());\n    var isIE = /Trident/i.test((0, $90ccbd5892233dd2$export$2e2bcd8739ae039)());\n    if (isIE && (0, $d98cb23738a6d9d0$export$1b3bfaa9684536aa)(element)) {\n        // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\n        var elementCss = (0, $41cae7042543c5d5$export$2e2bcd8739ae039)(element);\n        if (elementCss.position === 'fixed') return null;\n    }\n    var currentNode = (0, $17f6a21d28fc02f5$export$2e2bcd8739ae039)(element);\n    if ((0, $d98cb23738a6d9d0$export$af51f0f06c0f328a)(currentNode)) currentNode = currentNode.host;\n    while((0, $d98cb23738a6d9d0$export$1b3bfaa9684536aa)(currentNode) && [\n        'html',\n        'body'\n    ].indexOf((0, $4f30cf0ce50e075e$export$2e2bcd8739ae039)(currentNode)) < 0){\n        var css = (0, $41cae7042543c5d5$export$2e2bcd8739ae039)(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n        // create a containing block.\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n        if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || [\n            'transform',\n            'perspective'\n        ].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') return currentNode;\n        else currentNode = currentNode.parentNode;\n    }\n    return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\nfunction $a56b734280245ffb$export$2e2bcd8739ae039(element) {\n    var window = (0, $df9341392e6ed7b1$export$2e2bcd8739ae039)(element);\n    var offsetParent = $a56b734280245ffb$var$getTrueOffsetParent(element);\n    while(offsetParent && (0, $6829c22fb01dde5a$export$2e2bcd8739ae039)(offsetParent) && (0, $41cae7042543c5d5$export$2e2bcd8739ae039)(offsetParent).position === 'static')offsetParent = $a56b734280245ffb$var$getTrueOffsetParent(offsetParent);\n    if (offsetParent && ((0, $4f30cf0ce50e075e$export$2e2bcd8739ae039)(offsetParent) === 'html' || (0, $4f30cf0ce50e075e$export$2e2bcd8739ae039)(offsetParent) === 'body' && (0, $41cae7042543c5d5$export$2e2bcd8739ae039)(offsetParent).position === 'static')) return window;\n    return offsetParent || $a56b734280245ffb$var$getContainingBlock(element) || window;\n}\n\n\nfunction $b518c35b71cf930f$export$2e2bcd8739ae039(placement) {\n    return [\n        'top',\n        'bottom'\n    ].indexOf(placement) >= 0 ? 'x' : 'y';\n}\n\n\n\nfunction $b6f0b0266e764faa$export$f28d906d67a997f3(min, value, max) {\n    return (0, $7e23bad950468b82$export$8960430cfd85939f)(min, (0, $7e23bad950468b82$export$96ec731ed4dcb222)(value, max));\n}\nfunction $b6f0b0266e764faa$export$86c8af6d3ef0b4a(min, value, max) {\n    var v = $b6f0b0266e764faa$export$f28d906d67a997f3(min, value, max);\n    return v > max ? max : v;\n}\n\n\nfunction $683c5e26d5f8bfe5$export$2e2bcd8739ae039() {\n    return {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n    };\n}\n\n\nfunction $387b887da02b7e69$export$2e2bcd8739ae039(paddingObject) {\n    return Object.assign({}, (0, $683c5e26d5f8bfe5$export$2e2bcd8739ae039)(), paddingObject);\n}\n\n\nfunction $4d11a6decde23bf9$export$2e2bcd8739ae039(value, keys) {\n    return keys.reduce(function(hashMap, key) {\n        hashMap[key] = value;\n        return hashMap;\n    }, {});\n}\n\n\n\nvar $1992f2d714808ab6$var$toPaddingObject = function toPaddingObject(padding, state) {\n    padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {\n        placement: state.placement\n    })) : padding;\n    return (0, $387b887da02b7e69$export$2e2bcd8739ae039)(typeof padding !== 'number' ? padding : (0, $4d11a6decde23bf9$export$2e2bcd8739ae039)(padding, (0, $f5c54167a3c62105$export$aec2ce47c367b8c3)));\n};\nfunction $1992f2d714808ab6$var$arrow(_ref) {\n    var _state$modifiersData$;\n    var state = _ref.state, name = _ref.name, options = _ref.options;\n    var arrowElement = state.elements.arrow;\n    var popperOffsets = state.modifiersData.popperOffsets;\n    var basePlacement = (0, $afe288682115fde3$export$2e2bcd8739ae039)(state.placement);\n    var axis = (0, $b518c35b71cf930f$export$2e2bcd8739ae039)(basePlacement);\n    var isVertical = [\n        (0, $f5c54167a3c62105$export$eabcd2c8791e7bf4),\n        (0, $f5c54167a3c62105$export$79ffe56a765070d2)\n    ].indexOf(basePlacement) >= 0;\n    var len = isVertical ? 'height' : 'width';\n    if (!arrowElement || !popperOffsets) return;\n    var paddingObject = $1992f2d714808ab6$var$toPaddingObject(options.padding, state);\n    var arrowRect = (0, $30ced62b744c6cfe$export$2e2bcd8739ae039)(arrowElement);\n    var minProp = axis === 'y' ? (0, $f5c54167a3c62105$export$1e95b668f3b82d) : (0, $f5c54167a3c62105$export$eabcd2c8791e7bf4);\n    var maxProp = axis === 'y' ? (0, $f5c54167a3c62105$export$40e543e69a8b3fbb) : (0, $f5c54167a3c62105$export$79ffe56a765070d2);\n    var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n    var startDiff = popperOffsets[axis] - state.rects.reference[axis];\n    var arrowOffsetParent = (0, $a56b734280245ffb$export$2e2bcd8739ae039)(arrowElement);\n    var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n    var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is\n    // outside of the popper bounds\n    var min = paddingObject[minProp];\n    var max = clientSize - arrowRect[len] - paddingObject[maxProp];\n    var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n    var offset = (0, $b6f0b0266e764faa$export$f28d906d67a997f3)(min, center, max); // Prevents breaking syntax highlighting...\n    var axisProp = axis;\n    state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);\n}\nfunction $1992f2d714808ab6$var$effect(_ref2) {\n    var state = _ref2.state, options = _ref2.options;\n    var _options$element = options.element, arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;\n    if (arrowElement == null) return;\n     // CSS selector\n    if (typeof arrowElement === 'string') {\n        arrowElement = state.elements.popper.querySelector(arrowElement);\n        if (!arrowElement) return;\n    }\n    if (!(0, $d63950b756706495$export$2e2bcd8739ae039)(state.elements.popper, arrowElement)) return;\n    state.elements.arrow = arrowElement;\n} // eslint-disable-next-line import/no-unused-modules\nvar $1992f2d714808ab6$export$2e2bcd8739ae039 = {\n    name: 'arrow',\n    enabled: true,\n    phase: 'main',\n    fn: $1992f2d714808ab6$var$arrow,\n    effect: $1992f2d714808ab6$var$effect,\n    requires: [\n        'popperOffsets'\n    ],\n    requiresIfExists: [\n        'preventOverflow'\n    ]\n};\n\n\n\n\n\n\n\n\nfunction $7b08f0526e425773$export$2e2bcd8739ae039(placement) {\n    return placement.split('-')[1];\n}\n\n\n\nvar $c8f8eadcf7685dc5$var$unsetSides = {\n    top: 'auto',\n    right: 'auto',\n    bottom: 'auto',\n    left: 'auto'\n}; // Round the offsets to the nearest suitable subpixel based on the DPR.\n// Zooming can change the DPR, but it seems to report a value that will\n// cleanly divide the values into the appropriate subpixels.\nfunction $c8f8eadcf7685dc5$var$roundOffsetsByDPR(_ref, win) {\n    var x = _ref.x, y = _ref.y;\n    var dpr = win.devicePixelRatio || 1;\n    return {\n        x: (0, $7e23bad950468b82$export$2077e0241d6afd3c)(x * dpr) / dpr || 0,\n        y: (0, $7e23bad950468b82$export$2077e0241d6afd3c)(y * dpr) / dpr || 0\n    };\n}\nfunction $c8f8eadcf7685dc5$export$378fa78a8fea596f(_ref2) {\n    var _Object$assign2;\n    var popper = _ref2.popper, popperRect = _ref2.popperRect, placement = _ref2.placement, variation = _ref2.variation, offsets = _ref2.offsets, position = _ref2.position, gpuAcceleration = _ref2.gpuAcceleration, adaptive = _ref2.adaptive, roundOffsets = _ref2.roundOffsets, isFixed = _ref2.isFixed;\n    var _offsets$x = offsets.x, x = _offsets$x === void 0 ? 0 : _offsets$x, _offsets$y = offsets.y, y = _offsets$y === void 0 ? 0 : _offsets$y;\n    var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({\n        x: x,\n        y: y\n    }) : {\n        x: x,\n        y: y\n    };\n    x = _ref3.x;\n    y = _ref3.y;\n    var hasX = offsets.hasOwnProperty('x');\n    var hasY = offsets.hasOwnProperty('y');\n    var sideX = (0, $f5c54167a3c62105$export$eabcd2c8791e7bf4);\n    var sideY = (0, $f5c54167a3c62105$export$1e95b668f3b82d);\n    var win = window;\n    if (adaptive) {\n        var offsetParent = (0, $a56b734280245ffb$export$2e2bcd8739ae039)(popper);\n        var heightProp = 'clientHeight';\n        var widthProp = 'clientWidth';\n        if (offsetParent === (0, $df9341392e6ed7b1$export$2e2bcd8739ae039)(popper)) {\n            offsetParent = (0, $433af39bc2fae35d$export$2e2bcd8739ae039)(popper);\n            if ((0, $41cae7042543c5d5$export$2e2bcd8739ae039)(offsetParent).position !== 'static' && position === 'absolute') {\n                heightProp = 'scrollHeight';\n                widthProp = 'scrollWidth';\n            }\n        } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\n        offsetParent;\n        if (placement === (0, $f5c54167a3c62105$export$1e95b668f3b82d) || (placement === (0, $f5c54167a3c62105$export$eabcd2c8791e7bf4) || placement === (0, $f5c54167a3c62105$export$79ffe56a765070d2)) && variation === (0, $f5c54167a3c62105$export$bd5df0f255a350f8)) {\n            sideY = (0, $f5c54167a3c62105$export$40e543e69a8b3fbb);\n            var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : offsetParent[heightProp];\n            y -= offsetY - popperRect.height;\n            y *= gpuAcceleration ? 1 : -1;\n        }\n        if (placement === (0, $f5c54167a3c62105$export$eabcd2c8791e7bf4) || (placement === (0, $f5c54167a3c62105$export$1e95b668f3b82d) || placement === (0, $f5c54167a3c62105$export$40e543e69a8b3fbb)) && variation === (0, $f5c54167a3c62105$export$bd5df0f255a350f8)) {\n            sideX = (0, $f5c54167a3c62105$export$79ffe56a765070d2);\n            var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : offsetParent[widthProp];\n            x -= offsetX - popperRect.width;\n            x *= gpuAcceleration ? 1 : -1;\n        }\n    }\n    var commonStyles = Object.assign({\n        position: position\n    }, adaptive && $c8f8eadcf7685dc5$var$unsetSides);\n    var _ref4 = roundOffsets === true ? $c8f8eadcf7685dc5$var$roundOffsetsByDPR({\n        x: x,\n        y: y\n    }, (0, $df9341392e6ed7b1$export$2e2bcd8739ae039)(popper)) : {\n        x: x,\n        y: y\n    };\n    x = _ref4.x;\n    y = _ref4.y;\n    if (gpuAcceleration) {\n        var _Object$assign;\n        return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? \"translate(\" + x + \"px, \" + y + \"px)\" : \"translate3d(\" + x + \"px, \" + y + \"px, 0)\", _Object$assign));\n    }\n    return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + \"px\" : '', _Object$assign2[sideX] = hasX ? x + \"px\" : '', _Object$assign2.transform = '', _Object$assign2));\n}\nfunction $c8f8eadcf7685dc5$var$computeStyles(_ref5) {\n    var state = _ref5.state, options = _ref5.options;\n    var _options$gpuAccelerat = options.gpuAcceleration, gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat, _options$adaptive = options.adaptive, adaptive = _options$adaptive === void 0 ? true : _options$adaptive, _options$roundOffsets = options.roundOffsets, roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;\n    var commonStyles = {\n        placement: (0, $afe288682115fde3$export$2e2bcd8739ae039)(state.placement),\n        variation: (0, $7b08f0526e425773$export$2e2bcd8739ae039)(state.placement),\n        popper: state.elements.popper,\n        popperRect: state.rects.popper,\n        gpuAcceleration: gpuAcceleration,\n        isFixed: state.options.strategy === 'fixed'\n    };\n    if (state.modifiersData.popperOffsets != null) state.styles.popper = Object.assign({}, state.styles.popper, $c8f8eadcf7685dc5$export$378fa78a8fea596f(Object.assign({}, commonStyles, {\n        offsets: state.modifiersData.popperOffsets,\n        position: state.options.strategy,\n        adaptive: adaptive,\n        roundOffsets: roundOffsets\n    })));\n    if (state.modifiersData.arrow != null) state.styles.arrow = Object.assign({}, state.styles.arrow, $c8f8eadcf7685dc5$export$378fa78a8fea596f(Object.assign({}, commonStyles, {\n        offsets: state.modifiersData.arrow,\n        position: 'absolute',\n        adaptive: false,\n        roundOffsets: roundOffsets\n    })));\n    state.attributes.popper = Object.assign({}, state.attributes.popper, {\n        'data-popper-placement': state.placement\n    });\n} // eslint-disable-next-line import/no-unused-modules\nvar $c8f8eadcf7685dc5$export$2e2bcd8739ae039 = {\n    name: 'computeStyles',\n    enabled: true,\n    phase: 'beforeWrite',\n    fn: $c8f8eadcf7685dc5$var$computeStyles,\n    data: {}\n};\n\n\n\nvar $ff355aafd082b0cd$var$passive = {\n    passive: true\n};\nfunction $ff355aafd082b0cd$var$effect(_ref) {\n    var state = _ref.state, instance = _ref.instance, options = _ref.options;\n    var _options$scroll = options.scroll, scroll = _options$scroll === void 0 ? true : _options$scroll, _options$resize = options.resize, resize = _options$resize === void 0 ? true : _options$resize;\n    var window = (0, $df9341392e6ed7b1$export$2e2bcd8739ae039)(state.elements.popper);\n    var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);\n    if (scroll) scrollParents.forEach(function(scrollParent) {\n        scrollParent.addEventListener('scroll', instance.update, $ff355aafd082b0cd$var$passive);\n    });\n    if (resize) window.addEventListener('resize', instance.update, $ff355aafd082b0cd$var$passive);\n    return function() {\n        if (scroll) scrollParents.forEach(function(scrollParent) {\n            scrollParent.removeEventListener('scroll', instance.update, $ff355aafd082b0cd$var$passive);\n        });\n        if (resize) window.removeEventListener('resize', instance.update, $ff355aafd082b0cd$var$passive);\n    };\n} // eslint-disable-next-line import/no-unused-modules\nvar $ff355aafd082b0cd$export$2e2bcd8739ae039 = {\n    name: 'eventListeners',\n    enabled: true,\n    phase: 'write',\n    fn: function fn() {},\n    effect: $ff355aafd082b0cd$var$effect,\n    data: {}\n};\n\n\nvar $825ae98fe4f5d029$var$hash = {\n    left: 'right',\n    right: 'left',\n    bottom: 'top',\n    top: 'bottom'\n};\nfunction $825ae98fe4f5d029$export$2e2bcd8739ae039(placement) {\n    return placement.replace(/left|right|bottom|top/g, function(matched) {\n        return $825ae98fe4f5d029$var$hash[matched];\n    });\n}\n\n\n\nvar $76c023b5f4bd6339$var$hash = {\n    start: 'end',\n    end: 'start'\n};\nfunction $76c023b5f4bd6339$export$2e2bcd8739ae039(placement) {\n    return placement.replace(/start|end/g, function(matched) {\n        return $76c023b5f4bd6339$var$hash[matched];\n    });\n}\n\n\n\n\n\n\n\n\nfunction $68a584be1dc90596$export$2e2bcd8739ae039(node) {\n    var win = (0, $df9341392e6ed7b1$export$2e2bcd8739ae039)(node);\n    var scrollLeft = win.pageXOffset;\n    var scrollTop = win.pageYOffset;\n    return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n    };\n}\n\n\nfunction $943aee5c7065ad53$export$2e2bcd8739ae039(element) {\n    // If <html> has a CSS width greater than the viewport, then this will be\n    // incorrect for RTL.\n    // Popper 1 is broken in this case and never had a bug report so let's assume\n    // it's not an issue. I don't think anyone ever specifies width on <html>\n    // anyway.\n    // Browsers where the left scrollbar doesn't cause an issue report `0` for\n    // this (e.g. Edge 2019, IE11, Safari)\n    return (0, $84019ab652aa921b$export$2e2bcd8739ae039)((0, $433af39bc2fae35d$export$2e2bcd8739ae039)(element)).left + (0, $68a584be1dc90596$export$2e2bcd8739ae039)(element).scrollLeft;\n}\n\n\n\nfunction $7b0a0ce1fa68929f$export$2e2bcd8739ae039(element, strategy) {\n    var win = (0, $df9341392e6ed7b1$export$2e2bcd8739ae039)(element);\n    var html = (0, $433af39bc2fae35d$export$2e2bcd8739ae039)(element);\n    var visualViewport = win.visualViewport;\n    var width = html.clientWidth;\n    var height = html.clientHeight;\n    var x = 0;\n    var y = 0;\n    if (visualViewport) {\n        width = visualViewport.width;\n        height = visualViewport.height;\n        var layoutViewport = (0, $993d40d65cc118cd$export$2e2bcd8739ae039)();\n        if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n            x = visualViewport.offsetLeft;\n            y = visualViewport.offsetTop;\n        }\n    }\n    return {\n        width: width,\n        height: height,\n        x: x + (0, $943aee5c7065ad53$export$2e2bcd8739ae039)(element),\n        y: y\n    };\n}\n\n\n\n\n\n\n\nfunction $3e70615fb3e74824$export$2e2bcd8739ae039(element) {\n    var _element$ownerDocumen;\n    var html = (0, $433af39bc2fae35d$export$2e2bcd8739ae039)(element);\n    var winScroll = (0, $68a584be1dc90596$export$2e2bcd8739ae039)(element);\n    var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n    var width = (0, $7e23bad950468b82$export$8960430cfd85939f)(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n    var height = (0, $7e23bad950468b82$export$8960430cfd85939f)(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n    var x = -winScroll.scrollLeft + (0, $943aee5c7065ad53$export$2e2bcd8739ae039)(element);\n    var y = -winScroll.scrollTop;\n    if ((0, $41cae7042543c5d5$export$2e2bcd8739ae039)(body || html).direction === 'rtl') x += (0, $7e23bad950468b82$export$8960430cfd85939f)(html.clientWidth, body ? body.clientWidth : 0) - width;\n    return {\n        width: width,\n        height: height,\n        x: x,\n        y: y\n    };\n}\n\n\n\n\nfunction $18583dfdff147fd4$export$2e2bcd8739ae039(element) {\n    // Firefox wants us to check `-x` and `-y` variations as well\n    var _getComputedStyle = (0, $41cae7042543c5d5$export$2e2bcd8739ae039)(element), overflow = _getComputedStyle.overflow, overflowX = _getComputedStyle.overflowX, overflowY = _getComputedStyle.overflowY;\n    return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}\n\n\n\n\nfunction $3eb5703c925e0e5d$export$2e2bcd8739ae039(node) {\n    if ([\n        'html',\n        'body',\n        '#document'\n    ].indexOf((0, $4f30cf0ce50e075e$export$2e2bcd8739ae039)(node)) >= 0) // $FlowFixMe[incompatible-return]: assume body is always available\n    return node.ownerDocument.body;\n    if ((0, $d98cb23738a6d9d0$export$1b3bfaa9684536aa)(node) && (0, $18583dfdff147fd4$export$2e2bcd8739ae039)(node)) return node;\n    return $3eb5703c925e0e5d$export$2e2bcd8739ae039((0, $17f6a21d28fc02f5$export$2e2bcd8739ae039)(node));\n}\n\n\n\n\n\nfunction $a621d360f1a81b88$export$2e2bcd8739ae039(element, list) {\n    var _element$ownerDocumen;\n    if (list === void 0) list = [];\n    var scrollParent = (0, $3eb5703c925e0e5d$export$2e2bcd8739ae039)(element);\n    var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);\n    var win = (0, $df9341392e6ed7b1$export$2e2bcd8739ae039)(scrollParent);\n    var target = isBody ? [\n        win\n    ].concat(win.visualViewport || [], (0, $18583dfdff147fd4$export$2e2bcd8739ae039)(scrollParent) ? scrollParent : []) : scrollParent;\n    var updatedList = list.concat(target);\n    return isBody ? updatedList : updatedList.concat($a621d360f1a81b88$export$2e2bcd8739ae039((0, $17f6a21d28fc02f5$export$2e2bcd8739ae039)(target)));\n}\n\n\n\n\n\n\n\n\n\n\nfunction $b0d5f0927fb8bf5c$export$2e2bcd8739ae039(rect) {\n    return Object.assign({}, rect, {\n        left: rect.x,\n        top: rect.y,\n        right: rect.x + rect.width,\n        bottom: rect.y + rect.height\n    });\n}\n\n\n\nfunction $631049efb60e96c6$var$getInnerBoundingClientRect(element, strategy) {\n    var rect = (0, $84019ab652aa921b$export$2e2bcd8739ae039)(element, false, strategy === 'fixed');\n    rect.top = rect.top + element.clientTop;\n    rect.left = rect.left + element.clientLeft;\n    rect.bottom = rect.top + element.clientHeight;\n    rect.right = rect.left + element.clientWidth;\n    rect.width = element.clientWidth;\n    rect.height = element.clientHeight;\n    rect.x = rect.left;\n    rect.y = rect.top;\n    return rect;\n}\nfunction $631049efb60e96c6$var$getClientRectFromMixedType(element, clippingParent, strategy) {\n    return clippingParent === (0, $f5c54167a3c62105$export$d7b7311ec04a3e8f) ? (0, $b0d5f0927fb8bf5c$export$2e2bcd8739ae039)((0, $7b0a0ce1fa68929f$export$2e2bcd8739ae039)(element, strategy)) : (0, $d98cb23738a6d9d0$export$45a5e7f76e0caa8d)(clippingParent) ? $631049efb60e96c6$var$getInnerBoundingClientRect(clippingParent, strategy) : (0, $b0d5f0927fb8bf5c$export$2e2bcd8739ae039)((0, $3e70615fb3e74824$export$2e2bcd8739ae039)((0, $433af39bc2fae35d$export$2e2bcd8739ae039)(element)));\n} // A \"clipping parent\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\nfunction $631049efb60e96c6$var$getClippingParents(element) {\n    var clippingParents = (0, $a621d360f1a81b88$export$2e2bcd8739ae039)((0, $17f6a21d28fc02f5$export$2e2bcd8739ae039)(element));\n    var canEscapeClipping = [\n        'absolute',\n        'fixed'\n    ].indexOf((0, $41cae7042543c5d5$export$2e2bcd8739ae039)(element).position) >= 0;\n    var clipperElement = canEscapeClipping && (0, $d98cb23738a6d9d0$export$1b3bfaa9684536aa)(element) ? (0, $a56b734280245ffb$export$2e2bcd8739ae039)(element) : element;\n    if (!(0, $d98cb23738a6d9d0$export$45a5e7f76e0caa8d)(clipperElement)) return [];\n     // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414\n    return clippingParents.filter(function(clippingParent) {\n        return (0, $d98cb23738a6d9d0$export$45a5e7f76e0caa8d)(clippingParent) && (0, $d63950b756706495$export$2e2bcd8739ae039)(clippingParent, clipperElement) && (0, $4f30cf0ce50e075e$export$2e2bcd8739ae039)(clippingParent) !== 'body';\n    });\n} // Gets the maximum area that the element is visible in due to any number of\nfunction $631049efb60e96c6$export$2e2bcd8739ae039(element, boundary, rootBoundary, strategy) {\n    var mainClippingParents = boundary === 'clippingParents' ? $631049efb60e96c6$var$getClippingParents(element) : [].concat(boundary);\n    var clippingParents = [].concat(mainClippingParents, [\n        rootBoundary\n    ]);\n    var firstClippingParent = clippingParents[0];\n    var clippingRect = clippingParents.reduce(function(accRect, clippingParent) {\n        var rect = $631049efb60e96c6$var$getClientRectFromMixedType(element, clippingParent, strategy);\n        accRect.top = (0, $7e23bad950468b82$export$8960430cfd85939f)(rect.top, accRect.top);\n        accRect.right = (0, $7e23bad950468b82$export$96ec731ed4dcb222)(rect.right, accRect.right);\n        accRect.bottom = (0, $7e23bad950468b82$export$96ec731ed4dcb222)(rect.bottom, accRect.bottom);\n        accRect.left = (0, $7e23bad950468b82$export$8960430cfd85939f)(rect.left, accRect.left);\n        return accRect;\n    }, $631049efb60e96c6$var$getClientRectFromMixedType(element, firstClippingParent, strategy));\n    clippingRect.width = clippingRect.right - clippingRect.left;\n    clippingRect.height = clippingRect.bottom - clippingRect.top;\n    clippingRect.x = clippingRect.left;\n    clippingRect.y = clippingRect.top;\n    return clippingRect;\n}\n\n\n\n\n\n\n\n\nfunction $03cba2f7a1498b5f$export$2e2bcd8739ae039(_ref) {\n    var reference = _ref.reference, element = _ref.element, placement = _ref.placement;\n    var basePlacement = placement ? (0, $afe288682115fde3$export$2e2bcd8739ae039)(placement) : null;\n    var variation = placement ? (0, $7b08f0526e425773$export$2e2bcd8739ae039)(placement) : null;\n    var commonX = reference.x + reference.width / 2 - element.width / 2;\n    var commonY = reference.y + reference.height / 2 - element.height / 2;\n    var offsets;\n    switch(basePlacement){\n        case 0, $f5c54167a3c62105$export$1e95b668f3b82d:\n            offsets = {\n                x: commonX,\n                y: reference.y - element.height\n            };\n            break;\n        case 0, $f5c54167a3c62105$export$40e543e69a8b3fbb:\n            offsets = {\n                x: commonX,\n                y: reference.y + reference.height\n            };\n            break;\n        case 0, $f5c54167a3c62105$export$79ffe56a765070d2:\n            offsets = {\n                x: reference.x + reference.width,\n                y: commonY\n            };\n            break;\n        case 0, $f5c54167a3c62105$export$eabcd2c8791e7bf4:\n            offsets = {\n                x: reference.x - element.width,\n                y: commonY\n            };\n            break;\n        default:\n            offsets = {\n                x: reference.x,\n                y: reference.y\n            };\n    }\n    var mainAxis = basePlacement ? (0, $b518c35b71cf930f$export$2e2bcd8739ae039)(basePlacement) : null;\n    if (mainAxis != null) {\n        var len = mainAxis === 'y' ? 'height' : 'width';\n        switch(variation){\n            case 0, $f5c54167a3c62105$export$b3571188c770cc5a:\n                offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);\n                break;\n            case 0, $f5c54167a3c62105$export$bd5df0f255a350f8:\n                offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);\n                break;\n            default:\n        }\n    }\n    return offsets;\n}\n\n\n\n\n\n\n\nfunction $f765731200b57f98$export$2e2bcd8739ae039(state, options) {\n    if (options === void 0) options = {};\n    var _options = options, _options$placement = _options.placement, placement = _options$placement === void 0 ? state.placement : _options$placement, _options$strategy = _options.strategy, strategy = _options$strategy === void 0 ? state.strategy : _options$strategy, _options$boundary = _options.boundary, boundary = _options$boundary === void 0 ? (0, $f5c54167a3c62105$export$390fd549c5303b4d) : _options$boundary, _options$rootBoundary = _options.rootBoundary, rootBoundary = _options$rootBoundary === void 0 ? (0, $f5c54167a3c62105$export$d7b7311ec04a3e8f) : _options$rootBoundary, _options$elementConte = _options.elementContext, elementContext = _options$elementConte === void 0 ? (0, $f5c54167a3c62105$export$ae5ab1c730825774) : _options$elementConte, _options$altBoundary = _options.altBoundary, altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary, _options$padding = _options.padding, padding = _options$padding === void 0 ? 0 : _options$padding;\n    var paddingObject = (0, $387b887da02b7e69$export$2e2bcd8739ae039)(typeof padding !== 'number' ? padding : (0, $4d11a6decde23bf9$export$2e2bcd8739ae039)(padding, (0, $f5c54167a3c62105$export$aec2ce47c367b8c3)));\n    var altContext = elementContext === (0, $f5c54167a3c62105$export$ae5ab1c730825774) ? (0, $f5c54167a3c62105$export$ca50aac9f3ba507f) : (0, $f5c54167a3c62105$export$ae5ab1c730825774);\n    var popperRect = state.rects.popper;\n    var element = state.elements[altBoundary ? altContext : elementContext];\n    var clippingClientRect = (0, $631049efb60e96c6$export$2e2bcd8739ae039)((0, $d98cb23738a6d9d0$export$45a5e7f76e0caa8d)(element) ? element : element.contextElement || (0, $433af39bc2fae35d$export$2e2bcd8739ae039)(state.elements.popper), boundary, rootBoundary, strategy);\n    var referenceClientRect = (0, $84019ab652aa921b$export$2e2bcd8739ae039)(state.elements.reference);\n    var popperOffsets = (0, $03cba2f7a1498b5f$export$2e2bcd8739ae039)({\n        reference: referenceClientRect,\n        element: popperRect,\n        strategy: 'absolute',\n        placement: placement\n    });\n    var popperClientRect = (0, $b0d5f0927fb8bf5c$export$2e2bcd8739ae039)(Object.assign({}, popperRect, popperOffsets));\n    var elementClientRect = elementContext === (0, $f5c54167a3c62105$export$ae5ab1c730825774) ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n    // 0 or negative = within the clipping rect\n    var overflowOffsets = {\n        top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n        bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n        left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n        right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n    };\n    var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n    if (elementContext === (0, $f5c54167a3c62105$export$ae5ab1c730825774) && offsetData) {\n        var offset = offsetData[placement];\n        Object.keys(overflowOffsets).forEach(function(key) {\n            var multiply = [\n                (0, $f5c54167a3c62105$export$79ffe56a765070d2),\n                (0, $f5c54167a3c62105$export$40e543e69a8b3fbb)\n            ].indexOf(key) >= 0 ? 1 : -1;\n            var axis = [\n                (0, $f5c54167a3c62105$export$1e95b668f3b82d),\n                (0, $f5c54167a3c62105$export$40e543e69a8b3fbb)\n            ].indexOf(key) >= 0 ? 'y' : 'x';\n            overflowOffsets[key] += offset[axis] * multiply;\n        });\n    }\n    return overflowOffsets;\n}\n\n\n\n\n\n\nfunction $dbd70d4ba9902caa$export$2e2bcd8739ae039(state, options) {\n    if (options === void 0) options = {};\n    var _options = options, placement = _options.placement, boundary = _options.boundary, rootBoundary = _options.rootBoundary, padding = _options.padding, flipVariations = _options.flipVariations, _options$allowedAutoP = _options.allowedAutoPlacements, allowedAutoPlacements = _options$allowedAutoP === void 0 ? (0, $f5c54167a3c62105$export$803cd8101b6c182b) : _options$allowedAutoP;\n    var variation = (0, $7b08f0526e425773$export$2e2bcd8739ae039)(placement);\n    var placements = variation ? flipVariations ? (0, $f5c54167a3c62105$export$368f9a87e87fa4e1) : (0, $f5c54167a3c62105$export$368f9a87e87fa4e1).filter(function(placement) {\n        return (0, $7b08f0526e425773$export$2e2bcd8739ae039)(placement) === variation;\n    }) : (0, $f5c54167a3c62105$export$aec2ce47c367b8c3);\n    var allowedPlacements = placements.filter(function(placement) {\n        return allowedAutoPlacements.indexOf(placement) >= 0;\n    });\n    if (allowedPlacements.length === 0) allowedPlacements = placements;\n     // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n    var overflows = allowedPlacements.reduce(function(acc, placement) {\n        acc[placement] = (0, $f765731200b57f98$export$2e2bcd8739ae039)(state, {\n            placement: placement,\n            boundary: boundary,\n            rootBoundary: rootBoundary,\n            padding: padding\n        })[(0, $afe288682115fde3$export$2e2bcd8739ae039)(placement)];\n        return acc;\n    }, {});\n    return Object.keys(overflows).sort(function(a, b) {\n        return overflows[a] - overflows[b];\n    });\n}\n\n\n\n\nfunction $b1f32a1d9525a032$var$getExpandedFallbackPlacements(placement) {\n    if ((0, $afe288682115fde3$export$2e2bcd8739ae039)(placement) === (0, $f5c54167a3c62105$export$dfb5619354ba860)) return [];\n    var oppositePlacement = (0, $825ae98fe4f5d029$export$2e2bcd8739ae039)(placement);\n    return [\n        (0, $76c023b5f4bd6339$export$2e2bcd8739ae039)(placement),\n        oppositePlacement,\n        (0, $76c023b5f4bd6339$export$2e2bcd8739ae039)(oppositePlacement)\n    ];\n}\nfunction $b1f32a1d9525a032$var$flip(_ref) {\n    var state = _ref.state, options = _ref.options, name = _ref.name;\n    if (state.modifiersData[name]._skip) return;\n    var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis, specifiedFallbackPlacements = options.fallbackPlacements, padding = options.padding, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, _options$flipVariatio = options.flipVariations, flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio, allowedAutoPlacements = options.allowedAutoPlacements;\n    var preferredPlacement = state.options.placement;\n    var basePlacement = (0, $afe288682115fde3$export$2e2bcd8739ae039)(preferredPlacement);\n    var isBasePlacement = basePlacement === preferredPlacement;\n    var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [\n        (0, $825ae98fe4f5d029$export$2e2bcd8739ae039)(preferredPlacement)\n    ] : $b1f32a1d9525a032$var$getExpandedFallbackPlacements(preferredPlacement));\n    var placements = [\n        preferredPlacement\n    ].concat(fallbackPlacements).reduce(function(acc, placement) {\n        return acc.concat((0, $afe288682115fde3$export$2e2bcd8739ae039)(placement) === (0, $f5c54167a3c62105$export$dfb5619354ba860) ? (0, $dbd70d4ba9902caa$export$2e2bcd8739ae039)(state, {\n            placement: placement,\n            boundary: boundary,\n            rootBoundary: rootBoundary,\n            padding: padding,\n            flipVariations: flipVariations,\n            allowedAutoPlacements: allowedAutoPlacements\n        }) : placement);\n    }, []);\n    var referenceRect = state.rects.reference;\n    var popperRect = state.rects.popper;\n    var checksMap = new Map();\n    var makeFallbackChecks = true;\n    var firstFittingPlacement = placements[0];\n    for(var i = 0; i < placements.length; i++){\n        var placement = placements[i];\n        var _basePlacement = (0, $afe288682115fde3$export$2e2bcd8739ae039)(placement);\n        var isStartVariation = (0, $7b08f0526e425773$export$2e2bcd8739ae039)(placement) === (0, $f5c54167a3c62105$export$b3571188c770cc5a);\n        var isVertical = [\n            (0, $f5c54167a3c62105$export$1e95b668f3b82d),\n            (0, $f5c54167a3c62105$export$40e543e69a8b3fbb)\n        ].indexOf(_basePlacement) >= 0;\n        var len = isVertical ? 'width' : 'height';\n        var overflow = (0, $f765731200b57f98$export$2e2bcd8739ae039)(state, {\n            placement: placement,\n            boundary: boundary,\n            rootBoundary: rootBoundary,\n            altBoundary: altBoundary,\n            padding: padding\n        });\n        var mainVariationSide = isVertical ? isStartVariation ? (0, $f5c54167a3c62105$export$79ffe56a765070d2) : (0, $f5c54167a3c62105$export$eabcd2c8791e7bf4) : isStartVariation ? (0, $f5c54167a3c62105$export$40e543e69a8b3fbb) : (0, $f5c54167a3c62105$export$1e95b668f3b82d);\n        if (referenceRect[len] > popperRect[len]) mainVariationSide = (0, $825ae98fe4f5d029$export$2e2bcd8739ae039)(mainVariationSide);\n        var altVariationSide = (0, $825ae98fe4f5d029$export$2e2bcd8739ae039)(mainVariationSide);\n        var checks = [];\n        if (checkMainAxis) checks.push(overflow[_basePlacement] <= 0);\n        if (checkAltAxis) checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n        if (checks.every(function(check) {\n            return check;\n        })) {\n            firstFittingPlacement = placement;\n            makeFallbackChecks = false;\n            break;\n        }\n        checksMap.set(placement, checks);\n    }\n    if (makeFallbackChecks) {\n        // `2` may be desired in some cases – research later\n        var numberOfChecks = flipVariations ? 3 : 1;\n        var _loop = function _loop(_i) {\n            var fittingPlacement = placements.find(function(placement) {\n                var checks = checksMap.get(placement);\n                if (checks) return checks.slice(0, _i).every(function(check) {\n                    return check;\n                });\n            });\n            if (fittingPlacement) {\n                firstFittingPlacement = fittingPlacement;\n                return \"break\";\n            }\n        };\n        for(var _i = numberOfChecks; _i > 0; _i--){\n            var _ret = _loop(_i);\n            if (_ret === \"break\") break;\n        }\n    }\n    if (state.placement !== firstFittingPlacement) {\n        state.modifiersData[name]._skip = true;\n        state.placement = firstFittingPlacement;\n        state.reset = true;\n    }\n} // eslint-disable-next-line import/no-unused-modules\nvar $b1f32a1d9525a032$export$2e2bcd8739ae039 = {\n    name: 'flip',\n    enabled: true,\n    phase: 'main',\n    fn: $b1f32a1d9525a032$var$flip,\n    requiresIfExists: [\n        'offset'\n    ],\n    data: {\n        _skip: false\n    }\n};\n\n\n\n\nfunction $174d14927bb4f43b$var$getSideOffsets(overflow, rect, preventedOffsets) {\n    if (preventedOffsets === void 0) preventedOffsets = {\n        x: 0,\n        y: 0\n    };\n    return {\n        top: overflow.top - rect.height - preventedOffsets.y,\n        right: overflow.right - rect.width + preventedOffsets.x,\n        bottom: overflow.bottom - rect.height + preventedOffsets.y,\n        left: overflow.left - rect.width - preventedOffsets.x\n    };\n}\nfunction $174d14927bb4f43b$var$isAnySideFullyClipped(overflow) {\n    return [\n        (0, $f5c54167a3c62105$export$1e95b668f3b82d),\n        (0, $f5c54167a3c62105$export$79ffe56a765070d2),\n        (0, $f5c54167a3c62105$export$40e543e69a8b3fbb),\n        (0, $f5c54167a3c62105$export$eabcd2c8791e7bf4)\n    ].some(function(side) {\n        return overflow[side] >= 0;\n    });\n}\nfunction $174d14927bb4f43b$var$hide(_ref) {\n    var state = _ref.state, name = _ref.name;\n    var referenceRect = state.rects.reference;\n    var popperRect = state.rects.popper;\n    var preventedOffsets = state.modifiersData.preventOverflow;\n    var referenceOverflow = (0, $f765731200b57f98$export$2e2bcd8739ae039)(state, {\n        elementContext: 'reference'\n    });\n    var popperAltOverflow = (0, $f765731200b57f98$export$2e2bcd8739ae039)(state, {\n        altBoundary: true\n    });\n    var referenceClippingOffsets = $174d14927bb4f43b$var$getSideOffsets(referenceOverflow, referenceRect);\n    var popperEscapeOffsets = $174d14927bb4f43b$var$getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n    var isReferenceHidden = $174d14927bb4f43b$var$isAnySideFullyClipped(referenceClippingOffsets);\n    var hasPopperEscaped = $174d14927bb4f43b$var$isAnySideFullyClipped(popperEscapeOffsets);\n    state.modifiersData[name] = {\n        referenceClippingOffsets: referenceClippingOffsets,\n        popperEscapeOffsets: popperEscapeOffsets,\n        isReferenceHidden: isReferenceHidden,\n        hasPopperEscaped: hasPopperEscaped\n    };\n    state.attributes.popper = Object.assign({}, state.attributes.popper, {\n        'data-popper-reference-hidden': isReferenceHidden,\n        'data-popper-escaped': hasPopperEscaped\n    });\n} // eslint-disable-next-line import/no-unused-modules\nvar $174d14927bb4f43b$export$2e2bcd8739ae039 = {\n    name: 'hide',\n    enabled: true,\n    phase: 'main',\n    requiresIfExists: [\n        'preventOverflow'\n    ],\n    fn: $174d14927bb4f43b$var$hide\n};\n\n\n\n\nfunction $7c04da2e958a3fe8$export$7fa02d8595b015ed(placement, rects, offset) {\n    var basePlacement = (0, $afe288682115fde3$export$2e2bcd8739ae039)(placement);\n    var invertDistance = [\n        (0, $f5c54167a3c62105$export$eabcd2c8791e7bf4),\n        (0, $f5c54167a3c62105$export$1e95b668f3b82d)\n    ].indexOf(basePlacement) >= 0 ? -1 : 1;\n    var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {\n        placement: placement\n    })) : offset, skidding = _ref[0], distance = _ref[1];\n    skidding = skidding || 0;\n    distance = (distance || 0) * invertDistance;\n    return [\n        (0, $f5c54167a3c62105$export$eabcd2c8791e7bf4),\n        (0, $f5c54167a3c62105$export$79ffe56a765070d2)\n    ].indexOf(basePlacement) >= 0 ? {\n        x: distance,\n        y: skidding\n    } : {\n        x: skidding,\n        y: distance\n    };\n}\nfunction $7c04da2e958a3fe8$var$offset(_ref2) {\n    var state = _ref2.state, options = _ref2.options, name = _ref2.name;\n    var _options$offset = options.offset, offset = _options$offset === void 0 ? [\n        0,\n        0\n    ] : _options$offset;\n    var data = (0, $f5c54167a3c62105$export$803cd8101b6c182b).reduce(function(acc, placement) {\n        acc[placement] = $7c04da2e958a3fe8$export$7fa02d8595b015ed(placement, state.rects, offset);\n        return acc;\n    }, {});\n    var _data$state$placement = data[state.placement], x = _data$state$placement.x, y = _data$state$placement.y;\n    if (state.modifiersData.popperOffsets != null) {\n        state.modifiersData.popperOffsets.x += x;\n        state.modifiersData.popperOffsets.y += y;\n    }\n    state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\nvar $7c04da2e958a3fe8$export$2e2bcd8739ae039 = {\n    name: 'offset',\n    enabled: true,\n    phase: 'main',\n    requires: [\n        'popperOffsets'\n    ],\n    fn: $7c04da2e958a3fe8$var$offset\n};\n\n\n\nfunction $e92fb10df1450f31$var$popperOffsets(_ref) {\n    var state = _ref.state, name = _ref.name;\n    // Offsets are the actual position the popper needs to have to be\n    // properly positioned near its reference element\n    // This is the most basic placement, and will be adjusted by\n    // the modifiers in the next step\n    state.modifiersData[name] = (0, $03cba2f7a1498b5f$export$2e2bcd8739ae039)({\n        reference: state.rects.reference,\n        element: state.rects.popper,\n        strategy: 'absolute',\n        placement: state.placement\n    });\n} // eslint-disable-next-line import/no-unused-modules\nvar $e92fb10df1450f31$export$2e2bcd8739ae039 = {\n    name: 'popperOffsets',\n    enabled: true,\n    phase: 'read',\n    fn: $e92fb10df1450f31$var$popperOffsets,\n    data: {}\n};\n\n\n\n\n\nfunction $d8b68132b61080af$export$2e2bcd8739ae039(axis) {\n    return axis === 'x' ? 'y' : 'x';\n}\n\n\n\n\n\n\n\n\n\nfunction $3295dac8746ffe59$var$preventOverflow(_ref) {\n    var state = _ref.state, options = _ref.options, name = _ref.name;\n    var _options$mainAxis = options.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options.altAxis, checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis, boundary = options.boundary, rootBoundary = options.rootBoundary, altBoundary = options.altBoundary, padding = options.padding, _options$tether = options.tether, tether = _options$tether === void 0 ? true : _options$tether, _options$tetherOffset = options.tetherOffset, tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n    var overflow = (0, $f765731200b57f98$export$2e2bcd8739ae039)(state, {\n        boundary: boundary,\n        rootBoundary: rootBoundary,\n        padding: padding,\n        altBoundary: altBoundary\n    });\n    var basePlacement = (0, $afe288682115fde3$export$2e2bcd8739ae039)(state.placement);\n    var variation = (0, $7b08f0526e425773$export$2e2bcd8739ae039)(state.placement);\n    var isBasePlacement = !variation;\n    var mainAxis = (0, $b518c35b71cf930f$export$2e2bcd8739ae039)(basePlacement);\n    var altAxis = (0, $d8b68132b61080af$export$2e2bcd8739ae039)(mainAxis);\n    var popperOffsets = state.modifiersData.popperOffsets;\n    var referenceRect = state.rects.reference;\n    var popperRect = state.rects.popper;\n    var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {\n        placement: state.placement\n    })) : tetherOffset;\n    var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {\n        mainAxis: tetherOffsetValue,\n        altAxis: tetherOffsetValue\n    } : Object.assign({\n        mainAxis: 0,\n        altAxis: 0\n    }, tetherOffsetValue);\n    var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;\n    var data = {\n        x: 0,\n        y: 0\n    };\n    if (!popperOffsets) return;\n    if (checkMainAxis) {\n        var _offsetModifierState$;\n        var mainSide = mainAxis === 'y' ? (0, $f5c54167a3c62105$export$1e95b668f3b82d) : (0, $f5c54167a3c62105$export$eabcd2c8791e7bf4);\n        var altSide = mainAxis === 'y' ? (0, $f5c54167a3c62105$export$40e543e69a8b3fbb) : (0, $f5c54167a3c62105$export$79ffe56a765070d2);\n        var len = mainAxis === 'y' ? 'height' : 'width';\n        var offset = popperOffsets[mainAxis];\n        var min = offset + overflow[mainSide];\n        var max = offset - overflow[altSide];\n        var additive = tether ? -popperRect[len] / 2 : 0;\n        var minLen = variation === (0, $f5c54167a3c62105$export$b3571188c770cc5a) ? referenceRect[len] : popperRect[len];\n        var maxLen = variation === (0, $f5c54167a3c62105$export$b3571188c770cc5a) ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go\n        // outside the reference bounds\n        var arrowElement = state.elements.arrow;\n        var arrowRect = tether && arrowElement ? (0, $30ced62b744c6cfe$export$2e2bcd8739ae039)(arrowElement) : {\n            width: 0,\n            height: 0\n        };\n        var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : (0, $683c5e26d5f8bfe5$export$2e2bcd8739ae039)();\n        var arrowPaddingMin = arrowPaddingObject[mainSide];\n        var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want\n        // to include its full size in the calculation. If the reference is small\n        // and near the edge of a boundary, the popper can overflow even if the\n        // reference is not overflowing as well (e.g. virtual elements with no\n        // width or height)\n        var arrowLen = (0, $b6f0b0266e764faa$export$f28d906d67a997f3)(0, referenceRect[len], arrowRect[len]);\n        var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;\n        var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;\n        var arrowOffsetParent = state.elements.arrow && (0, $a56b734280245ffb$export$2e2bcd8739ae039)(state.elements.arrow);\n        var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n        var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;\n        var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;\n        var tetherMax = offset + maxOffset - offsetModifierValue;\n        var preventedOffset = (0, $b6f0b0266e764faa$export$f28d906d67a997f3)(tether ? (0, $7e23bad950468b82$export$96ec731ed4dcb222)(min, tetherMin) : min, offset, tether ? (0, $7e23bad950468b82$export$8960430cfd85939f)(max, tetherMax) : max);\n        popperOffsets[mainAxis] = preventedOffset;\n        data[mainAxis] = preventedOffset - offset;\n    }\n    if (checkAltAxis) {\n        var _offsetModifierState$2;\n        var _mainSide = mainAxis === 'x' ? (0, $f5c54167a3c62105$export$1e95b668f3b82d) : (0, $f5c54167a3c62105$export$eabcd2c8791e7bf4);\n        var _altSide = mainAxis === 'x' ? (0, $f5c54167a3c62105$export$40e543e69a8b3fbb) : (0, $f5c54167a3c62105$export$79ffe56a765070d2);\n        var _offset = popperOffsets[altAxis];\n        var _len = altAxis === 'y' ? 'height' : 'width';\n        var _min = _offset + overflow[_mainSide];\n        var _max = _offset - overflow[_altSide];\n        var isOriginSide = [\n            (0, $f5c54167a3c62105$export$1e95b668f3b82d),\n            (0, $f5c54167a3c62105$export$eabcd2c8791e7bf4)\n        ].indexOf(basePlacement) !== -1;\n        var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;\n        var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;\n        var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;\n        var _preventedOffset = tether && isOriginSide ? (0, $b6f0b0266e764faa$export$86c8af6d3ef0b4a)(_tetherMin, _offset, _tetherMax) : (0, $b6f0b0266e764faa$export$f28d906d67a997f3)(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);\n        popperOffsets[altAxis] = _preventedOffset;\n        data[altAxis] = _preventedOffset - _offset;\n    }\n    state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\nvar $3295dac8746ffe59$export$2e2bcd8739ae039 = {\n    name: 'preventOverflow',\n    enabled: true,\n    phase: 'main',\n    fn: $3295dac8746ffe59$var$preventOverflow,\n    requiresIfExists: [\n        'offset'\n    ]\n};\n\n\n\n\n\n\n\n\nfunction $9102221f9e13ae54$export$2e2bcd8739ae039(element) {\n    return {\n        scrollLeft: element.scrollLeft,\n        scrollTop: element.scrollTop\n    };\n}\n\n\nfunction $ca14c6927ef497ac$export$2e2bcd8739ae039(node) {\n    if (node === (0, $df9341392e6ed7b1$export$2e2bcd8739ae039)(node) || !(0, $d98cb23738a6d9d0$export$1b3bfaa9684536aa)(node)) return (0, $68a584be1dc90596$export$2e2bcd8739ae039)(node);\n    else return (0, $9102221f9e13ae54$export$2e2bcd8739ae039)(node);\n}\n\n\n\n\n\n\n\n\nfunction $34abf65a06d63352$var$isElementScaled(element) {\n    var rect = element.getBoundingClientRect();\n    var scaleX = (0, $7e23bad950468b82$export$2077e0241d6afd3c)(rect.width) / element.offsetWidth || 1;\n    var scaleY = (0, $7e23bad950468b82$export$2077e0241d6afd3c)(rect.height) / element.offsetHeight || 1;\n    return scaleX !== 1 || scaleY !== 1;\n} // Returns the composite rect of an element relative to its offsetParent.\nfunction $34abf65a06d63352$export$2e2bcd8739ae039(elementOrVirtualElement, offsetParent, isFixed) {\n    if (isFixed === void 0) isFixed = false;\n    var isOffsetParentAnElement = (0, $d98cb23738a6d9d0$export$1b3bfaa9684536aa)(offsetParent);\n    var offsetParentIsScaled = (0, $d98cb23738a6d9d0$export$1b3bfaa9684536aa)(offsetParent) && $34abf65a06d63352$var$isElementScaled(offsetParent);\n    var documentElement = (0, $433af39bc2fae35d$export$2e2bcd8739ae039)(offsetParent);\n    var rect = (0, $84019ab652aa921b$export$2e2bcd8739ae039)(elementOrVirtualElement, offsetParentIsScaled, isFixed);\n    var scroll = {\n        scrollLeft: 0,\n        scrollTop: 0\n    };\n    var offsets = {\n        x: 0,\n        y: 0\n    };\n    if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n        if ((0, $4f30cf0ce50e075e$export$2e2bcd8739ae039)(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078\n        (0, $18583dfdff147fd4$export$2e2bcd8739ae039)(documentElement)) scroll = (0, $ca14c6927ef497ac$export$2e2bcd8739ae039)(offsetParent);\n        if ((0, $d98cb23738a6d9d0$export$1b3bfaa9684536aa)(offsetParent)) {\n            offsets = (0, $84019ab652aa921b$export$2e2bcd8739ae039)(offsetParent, true);\n            offsets.x += offsetParent.clientLeft;\n            offsets.y += offsetParent.clientTop;\n        } else if (documentElement) offsets.x = (0, $943aee5c7065ad53$export$2e2bcd8739ae039)(documentElement);\n    }\n    return {\n        x: rect.left + scroll.scrollLeft - offsets.x,\n        y: rect.top + scroll.scrollTop - offsets.y,\n        width: rect.width,\n        height: rect.height\n    };\n}\n\n\n\n\n\n\nfunction $0baf5472b5ad4a5a$var$order(modifiers) {\n    var map = new Map();\n    var visited = new Set();\n    var result = [];\n    modifiers.forEach(function(modifier) {\n        map.set(modifier.name, modifier);\n    }); // On visiting object, check for its dependencies and visit them recursively\n    function sort(modifier) {\n        visited.add(modifier.name);\n        var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);\n        requires.forEach(function(dep) {\n            if (!visited.has(dep)) {\n                var depModifier = map.get(dep);\n                if (depModifier) sort(depModifier);\n            }\n        });\n        result.push(modifier);\n    }\n    modifiers.forEach(function(modifier) {\n        if (!visited.has(modifier.name)) // check for visited object\n        sort(modifier);\n    });\n    return result;\n}\nfunction $0baf5472b5ad4a5a$export$2e2bcd8739ae039(modifiers) {\n    // order based on dependencies\n    var orderedModifiers = $0baf5472b5ad4a5a$var$order(modifiers); // order based on phase\n    return (0, $f5c54167a3c62105$export$d087d3878fdf71d5).reduce(function(acc, phase) {\n        return acc.concat(orderedModifiers.filter(function(modifier) {\n            return modifier.phase === phase;\n        }));\n    }, []);\n}\n\n\nfunction $9b65b878009bf47f$export$2e2bcd8739ae039(fn) {\n    var pending;\n    return function() {\n        if (!pending) pending = new Promise(function(resolve) {\n            Promise.resolve().then(function() {\n                pending = undefined;\n                resolve(fn());\n            });\n        });\n        return pending;\n    };\n}\n\n\nfunction $46d929ffbbd3136a$export$2e2bcd8739ae039(modifiers) {\n    var merged = modifiers.reduce(function(merged, current) {\n        var existing = merged[current.name];\n        merged[current.name] = existing ? Object.assign({}, existing, current, {\n            options: Object.assign({}, existing.options, current.options),\n            data: Object.assign({}, existing.data, current.data)\n        }) : current;\n        return merged;\n    }, {}); // IE11 does not support Object.values\n    return Object.keys(merged).map(function(key) {\n        return merged[key];\n    });\n}\n\n\n\n\nvar $b3c2fd6800546b4b$var$DEFAULT_OPTIONS = {\n    placement: 'bottom',\n    modifiers: [],\n    strategy: 'absolute'\n};\nfunction $b3c2fd6800546b4b$var$areValidElements() {\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];\n    return !args.some(function(element) {\n        return !(element && typeof element.getBoundingClientRect === 'function');\n    });\n}\nfunction $b3c2fd6800546b4b$export$ed5e13716264f202(generatorOptions) {\n    if (generatorOptions === void 0) generatorOptions = {};\n    var _generatorOptions = generatorOptions, _generatorOptions$def = _generatorOptions.defaultModifiers, defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def, _generatorOptions$def2 = _generatorOptions.defaultOptions, defaultOptions = _generatorOptions$def2 === void 0 ? $b3c2fd6800546b4b$var$DEFAULT_OPTIONS : _generatorOptions$def2;\n    return function createPopper(reference, popper, options) {\n        if (options === void 0) options = defaultOptions;\n        var state = {\n            placement: 'bottom',\n            orderedModifiers: [],\n            options: Object.assign({}, $b3c2fd6800546b4b$var$DEFAULT_OPTIONS, defaultOptions),\n            modifiersData: {},\n            elements: {\n                reference: reference,\n                popper: popper\n            },\n            attributes: {},\n            styles: {}\n        };\n        var effectCleanupFns = [];\n        var isDestroyed = false;\n        var instance = {\n            state: state,\n            setOptions: function setOptions(setOptionsAction) {\n                var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;\n                cleanupModifierEffects();\n                state.options = Object.assign({}, defaultOptions, state.options, options);\n                state.scrollParents = {\n                    reference: (0, $d98cb23738a6d9d0$export$45a5e7f76e0caa8d)(reference) ? (0, $a621d360f1a81b88$export$2e2bcd8739ae039)(reference) : reference.contextElement ? (0, $a621d360f1a81b88$export$2e2bcd8739ae039)(reference.contextElement) : [],\n                    popper: (0, $a621d360f1a81b88$export$2e2bcd8739ae039)(popper)\n                }; // Orders the modifiers based on their dependencies and `phase`\n                // properties\n                var orderedModifiers = (0, $0baf5472b5ad4a5a$export$2e2bcd8739ae039)((0, $46d929ffbbd3136a$export$2e2bcd8739ae039)([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers\n                state.orderedModifiers = orderedModifiers.filter(function(m) {\n                    return m.enabled;\n                });\n                runModifierEffects();\n                return instance.update();\n            },\n            // Sync update – it will always be executed, even if not necessary. This\n            // is useful for low frequency updates where sync behavior simplifies the\n            // logic.\n            // For high frequency updates (e.g. `resize` and `scroll` events), always\n            // prefer the async Popper#update method\n            forceUpdate: function forceUpdate() {\n                if (isDestroyed) return;\n                var _state$elements = state.elements, reference = _state$elements.reference, popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements\n                // anymore\n                if (!$b3c2fd6800546b4b$var$areValidElements(reference, popper)) return;\n                 // Store the reference and popper rects to be read by modifiers\n                state.rects = {\n                    reference: (0, $34abf65a06d63352$export$2e2bcd8739ae039)(reference, (0, $a56b734280245ffb$export$2e2bcd8739ae039)(popper), state.options.strategy === 'fixed'),\n                    popper: (0, $30ced62b744c6cfe$export$2e2bcd8739ae039)(popper)\n                }; // Modifiers have the ability to reset the current update cycle. The\n                // most common use case for this is the `flip` modifier changing the\n                // placement, which then needs to re-run all the modifiers, because the\n                // logic was previously ran for the previous placement and is therefore\n                // stale/incorrect\n                state.reset = false;\n                state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier\n                // is filled with the initial data specified by the modifier. This means\n                // it doesn't persist and is fresh on each update.\n                // To ensure persistent data, use `${name}#persistent`\n                state.orderedModifiers.forEach(function(modifier) {\n                    return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);\n                });\n                for(var index = 0; index < state.orderedModifiers.length; index++){\n                    if (state.reset === true) {\n                        state.reset = false;\n                        index = -1;\n                        continue;\n                    }\n                    var _state$orderedModifie = state.orderedModifiers[index], fn = _state$orderedModifie.fn, _state$orderedModifie2 = _state$orderedModifie.options, _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2, name = _state$orderedModifie.name;\n                    if (typeof fn === 'function') state = fn({\n                        state: state,\n                        options: _options,\n                        name: name,\n                        instance: instance\n                    }) || state;\n                }\n            },\n            // Async and optimistically optimized update – it will not be executed if\n            // not necessary (debounced to run at most once-per-tick)\n            update: (0, $9b65b878009bf47f$export$2e2bcd8739ae039)(function() {\n                return new Promise(function(resolve) {\n                    instance.forceUpdate();\n                    resolve(state);\n                });\n            }),\n            destroy: function destroy() {\n                cleanupModifierEffects();\n                isDestroyed = true;\n            }\n        };\n        if (!$b3c2fd6800546b4b$var$areValidElements(reference, popper)) return instance;\n        instance.setOptions(options).then(function(state) {\n            if (!isDestroyed && options.onFirstUpdate) options.onFirstUpdate(state);\n        }); // Modifiers have the ability to execute arbitrary code before the first\n        // update cycle runs. They will be executed in the same order as the update\n        // cycle. This is useful when a modifier adds some persistent data that\n        // other modifiers need to use, but the modifier is run after the dependent\n        // one.\n        function runModifierEffects() {\n            state.orderedModifiers.forEach(function(_ref) {\n                var name = _ref.name, _ref$options = _ref.options, options = _ref$options === void 0 ? {} : _ref$options, effect = _ref.effect;\n                if (typeof effect === 'function') {\n                    var cleanupFn = effect({\n                        state: state,\n                        name: name,\n                        instance: instance,\n                        options: options\n                    });\n                    var noopFn = function noopFn() {};\n                    effectCleanupFns.push(cleanupFn || noopFn);\n                }\n            });\n        }\n        function cleanupModifierEffects() {\n            effectCleanupFns.forEach(function(fn) {\n                return fn();\n            });\n            effectCleanupFns = [];\n        }\n        return instance;\n    };\n}\nvar $b3c2fd6800546b4b$export$8f7491d57c8f97a9 = /*#__PURE__*/ $b3c2fd6800546b4b$export$ed5e13716264f202(); // eslint-disable-next-line import/no-unused-modules\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar $1bf0bf541303046d$export$d34966752335dd47 = [\n    (0, $ff355aafd082b0cd$export$2e2bcd8739ae039),\n    (0, $e92fb10df1450f31$export$2e2bcd8739ae039),\n    (0, $c8f8eadcf7685dc5$export$2e2bcd8739ae039),\n    (0, $83c1fc4c4e58d7dd$export$2e2bcd8739ae039),\n    (0, $7c04da2e958a3fe8$export$2e2bcd8739ae039),\n    (0, $b1f32a1d9525a032$export$2e2bcd8739ae039),\n    (0, $3295dac8746ffe59$export$2e2bcd8739ae039),\n    (0, $1992f2d714808ab6$export$2e2bcd8739ae039),\n    (0, $174d14927bb4f43b$export$2e2bcd8739ae039)\n];\nvar $1bf0bf541303046d$export$8f7491d57c8f97a9 = /*#__PURE__*/ (0, $b3c2fd6800546b4b$export$ed5e13716264f202)({\n    defaultModifiers: $1bf0bf541303046d$export$d34966752335dd47\n}); // eslint-disable-next-line import/no-unused-modules\n\n\n\n\n\n\n\nvar $cff5cce2532d9fa1$export$d34966752335dd47 = [\n    (0, $ff355aafd082b0cd$export$2e2bcd8739ae039),\n    (0, $e92fb10df1450f31$export$2e2bcd8739ae039),\n    (0, $c8f8eadcf7685dc5$export$2e2bcd8739ae039),\n    (0, $83c1fc4c4e58d7dd$export$2e2bcd8739ae039)\n];\nvar $cff5cce2532d9fa1$export$8f7491d57c8f97a9 = /*#__PURE__*/ (0, $b3c2fd6800546b4b$export$ed5e13716264f202)({\n    defaultModifiers: $cff5cce2532d9fa1$export$d34966752335dd47\n}); // eslint-disable-next-line import/no-unused-modules\n\n\n$parcel$exportWildcard($d37552697cc5ea39$exports, $f5c54167a3c62105$exports);\n$parcel$exportWildcard($d37552697cc5ea39$exports, $1341d386dda6ba3e$exports);\n\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/data.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */ /**\n * Constants\n */ const $91ca15859685b28b$var$elementMap = new Map();\nconst $91ca15859685b28b$var$Data = {\n    set (element, key, instance) {\n        if (!$91ca15859685b28b$var$elementMap.has(element)) $91ca15859685b28b$var$elementMap.set(element, new Map());\n        const instanceMap = $91ca15859685b28b$var$elementMap.get(element);\n        // make it clear we only want one instance per element\n        // can be removed later when multiple key/instances are fine to be used\n        if (!instanceMap.has(key) && instanceMap.size !== 0) {\n            // eslint-disable-next-line no-console\n            console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(instanceMap.keys())[0]}.`);\n            return;\n        }\n        instanceMap.set(key, instance);\n    },\n    get (element, key) {\n        if ($91ca15859685b28b$var$elementMap.has(element)) return $91ca15859685b28b$var$elementMap.get(element).get(key) || null;\n        return null;\n    },\n    remove (element, key) {\n        if (!$91ca15859685b28b$var$elementMap.has(element)) return;\n        const instanceMap = $91ca15859685b28b$var$elementMap.get(element);\n        instanceMap.delete(key);\n        // free up element references if there are no instances left for an element\n        if (instanceMap.size === 0) $91ca15859685b28b$var$elementMap.delete(element);\n    }\n};\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/index.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */ const $91ca15859685b28b$var$MAX_UID = 1000000;\nconst $91ca15859685b28b$var$MILLISECONDS_MULTIPLIER = 1000;\nconst $91ca15859685b28b$var$TRANSITION_END = 'transitionend';\n/**\n * Properly escape IDs selectors to handle weird IDs\n * @param {string} selector\n * @returns {string}\n */ const $91ca15859685b28b$var$parseSelector = (selector)=>{\n    if (selector && window.CSS && window.CSS.escape) // document.querySelector needs escaping to handle IDs (html5+) containing for instance /\n    selector = selector.replace(/#([^\\s\"#']+)/g, (match, id)=>`#${CSS.escape(id)}`);\n    return selector;\n};\n// Shout-out Angus Croll (https://goo.gl/pxwQGp)\nconst $91ca15859685b28b$var$toType = (object)=>{\n    if (object === null || object === undefined) return `${object}`;\n    return Object.prototype.toString.call(object).match(/\\s([a-z]+)/i)[1].toLowerCase();\n};\n/**\n * Public Util API\n */ const $91ca15859685b28b$var$getUID = (prefix)=>{\n    do prefix += Math.floor(Math.random() * $91ca15859685b28b$var$MAX_UID);\n    while (document.getElementById(prefix));\n    return prefix;\n};\nconst $91ca15859685b28b$var$getTransitionDurationFromElement = (element)=>{\n    if (!element) return 0;\n    // Get transition-duration of the element\n    let { transitionDuration: transitionDuration, transitionDelay: transitionDelay } = window.getComputedStyle(element);\n    const floatTransitionDuration = Number.parseFloat(transitionDuration);\n    const floatTransitionDelay = Number.parseFloat(transitionDelay);\n    // Return 0 if element or transition duration is not found\n    if (!floatTransitionDuration && !floatTransitionDelay) return 0;\n    // If multiple durations are defined, take the first\n    transitionDuration = transitionDuration.split(',')[0];\n    transitionDelay = transitionDelay.split(',')[0];\n    return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * $91ca15859685b28b$var$MILLISECONDS_MULTIPLIER;\n};\nconst $91ca15859685b28b$var$triggerTransitionEnd = (element)=>{\n    element.dispatchEvent(new Event($91ca15859685b28b$var$TRANSITION_END));\n};\nconst $91ca15859685b28b$var$isElement = (object)=>{\n    if (!object || typeof object !== 'object') return false;\n    if (typeof object.jquery !== 'undefined') object = object[0];\n    return typeof object.nodeType !== 'undefined';\n};\nconst $91ca15859685b28b$var$getElement = (object)=>{\n    // it's a jQuery object or a node element\n    if ($91ca15859685b28b$var$isElement(object)) return object.jquery ? object[0] : object;\n    if (typeof object === 'string' && object.length > 0) return document.querySelector($91ca15859685b28b$var$parseSelector(object));\n    return null;\n};\nconst $91ca15859685b28b$var$isVisible = (element)=>{\n    if (!$91ca15859685b28b$var$isElement(element) || element.getClientRects().length === 0) return false;\n    const elementIsVisible = getComputedStyle(element).getPropertyValue('visibility') === 'visible';\n    // Handle `details` element as its content may falsie appear visible when it is closed\n    const closedDetails = element.closest('details:not([open])');\n    if (!closedDetails) return elementIsVisible;\n    if (closedDetails !== element) {\n        const summary = element.closest('summary');\n        if (summary && summary.parentNode !== closedDetails) return false;\n        if (summary === null) return false;\n    }\n    return elementIsVisible;\n};\nconst $91ca15859685b28b$var$isDisabled = (element)=>{\n    if (!element || element.nodeType !== Node.ELEMENT_NODE) return true;\n    if (element.classList.contains('disabled')) return true;\n    if (typeof element.disabled !== 'undefined') return element.disabled;\n    return element.hasAttribute('disabled') && element.getAttribute('disabled') !== 'false';\n};\nconst $91ca15859685b28b$var$findShadowRoot = (element)=>{\n    if (!document.documentElement.attachShadow) return null;\n    // Can find the shadow root otherwise it'll return the document\n    if (typeof element.getRootNode === 'function') {\n        const root = element.getRootNode();\n        return root instanceof ShadowRoot ? root : null;\n    }\n    if (element instanceof ShadowRoot) return element;\n    // when we don't find a shadow root\n    if (!element.parentNode) return null;\n    return $91ca15859685b28b$var$findShadowRoot(element.parentNode);\n};\nconst $91ca15859685b28b$var$noop = ()=>{};\n/**\n * Trick to restart an element's animation\n *\n * @param {HTMLElement} element\n * @return void\n *\n * @see https://www.harrytheo.com/blog/2021/02/restart-a-css-animation-with-javascript/#restarting-a-css-animation\n */ const $91ca15859685b28b$var$reflow = (element)=>{\n    element.offsetHeight; // eslint-disable-line no-unused-expressions\n};\nconst $91ca15859685b28b$var$getjQuery = ()=>{\n    if (window.jQuery && !document.body.hasAttribute('data-bs-no-jquery')) return window.jQuery;\n    return null;\n};\nconst $91ca15859685b28b$var$DOMContentLoadedCallbacks = [];\nconst $91ca15859685b28b$var$onDOMContentLoaded = (callback)=>{\n    if (document.readyState === 'loading') {\n        // add listener on the first call when the document is in loading state\n        if (!$91ca15859685b28b$var$DOMContentLoadedCallbacks.length) document.addEventListener('DOMContentLoaded', ()=>{\n            for (const callback of $91ca15859685b28b$var$DOMContentLoadedCallbacks)callback();\n        });\n        $91ca15859685b28b$var$DOMContentLoadedCallbacks.push(callback);\n    } else callback();\n};\nconst $91ca15859685b28b$var$isRTL = ()=>document.documentElement.dir === 'rtl';\nconst $91ca15859685b28b$var$defineJQueryPlugin = (plugin)=>{\n    $91ca15859685b28b$var$onDOMContentLoaded(()=>{\n        const $ = $91ca15859685b28b$var$getjQuery();\n        /* istanbul ignore if */ if ($) {\n            const name = plugin.NAME;\n            const JQUERY_NO_CONFLICT = $.fn[name];\n            $.fn[name] = plugin.jQueryInterface;\n            $.fn[name].Constructor = plugin;\n            $.fn[name].noConflict = ()=>{\n                $.fn[name] = JQUERY_NO_CONFLICT;\n                return plugin.jQueryInterface;\n            };\n        }\n    });\n};\nconst $91ca15859685b28b$var$execute = (possibleCallback, args = [], defaultValue = possibleCallback)=>{\n    return typeof possibleCallback === 'function' ? possibleCallback.call(...args) : defaultValue;\n};\nconst $91ca15859685b28b$var$executeAfterTransition = (callback, transitionElement, waitForTransition = true)=>{\n    if (!waitForTransition) {\n        $91ca15859685b28b$var$execute(callback);\n        return;\n    }\n    const durationPadding = 5;\n    const emulatedDuration = $91ca15859685b28b$var$getTransitionDurationFromElement(transitionElement) + durationPadding;\n    let called = false;\n    const handler = ({ target: target })=>{\n        if (target !== transitionElement) return;\n        called = true;\n        transitionElement.removeEventListener($91ca15859685b28b$var$TRANSITION_END, handler);\n        $91ca15859685b28b$var$execute(callback);\n    };\n    transitionElement.addEventListener($91ca15859685b28b$var$TRANSITION_END, handler);\n    setTimeout(()=>{\n        if (!called) $91ca15859685b28b$var$triggerTransitionEnd(transitionElement);\n    }, emulatedDuration);\n};\n/**\n * Return the previous/next element of a list.\n *\n * @param {array} list    The list of elements\n * @param activeElement   The active element\n * @param shouldGetNext   Choose to get next or previous element\n * @param isCycleAllowed\n * @return {Element|elem} The proper element\n */ const $91ca15859685b28b$var$getNextActiveElement = (list, activeElement, shouldGetNext, isCycleAllowed)=>{\n    const listLength = list.length;\n    let index = list.indexOf(activeElement);\n    // if the element does not exist in the list return an element\n    // depending on the direction and if cycle is allowed\n    if (index === -1) return !shouldGetNext && isCycleAllowed ? list[listLength - 1] : list[0];\n    index += shouldGetNext ? 1 : -1;\n    if (isCycleAllowed) index = (index + listLength) % listLength;\n    return list[Math.max(0, Math.min(index, listLength - 1))];\n};\n/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/event-handler.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */ /**\n * Constants\n */ const $91ca15859685b28b$var$namespaceRegex = /[^.]*(?=\\..*)\\.|.*/;\nconst $91ca15859685b28b$var$stripNameRegex = /\\..*/;\nconst $91ca15859685b28b$var$stripUidRegex = /::\\d+$/;\nconst $91ca15859685b28b$var$eventRegistry = {}; // Events storage\nlet $91ca15859685b28b$var$uidEvent = 1;\nconst $91ca15859685b28b$var$customEvents = {\n    mouseenter: 'mouseover',\n    mouseleave: 'mouseout'\n};\nconst $91ca15859685b28b$var$nativeEvents = new Set([\n    'click',\n    'dblclick',\n    'mouseup',\n    'mousedown',\n    'contextmenu',\n    'mousewheel',\n    'DOMMouseScroll',\n    'mouseover',\n    'mouseout',\n    'mousemove',\n    'selectstart',\n    'selectend',\n    'keydown',\n    'keypress',\n    'keyup',\n    'orientationchange',\n    'touchstart',\n    'touchmove',\n    'touchend',\n    'touchcancel',\n    'pointerdown',\n    'pointermove',\n    'pointerup',\n    'pointerleave',\n    'pointercancel',\n    'gesturestart',\n    'gesturechange',\n    'gestureend',\n    'focus',\n    'blur',\n    'change',\n    'reset',\n    'select',\n    'submit',\n    'focusin',\n    'focusout',\n    'load',\n    'unload',\n    'beforeunload',\n    'resize',\n    'move',\n    'DOMContentLoaded',\n    'readystatechange',\n    'error',\n    'abort',\n    'scroll'\n]);\n/**\n * Private methods\n */ function $91ca15859685b28b$var$makeEventUid(element, uid) {\n    return uid && `${uid}::${$91ca15859685b28b$var$uidEvent++}` || element.uidEvent || $91ca15859685b28b$var$uidEvent++;\n}\nfunction $91ca15859685b28b$var$getElementEvents(element) {\n    const uid = $91ca15859685b28b$var$makeEventUid(element);\n    element.uidEvent = uid;\n    $91ca15859685b28b$var$eventRegistry[uid] = $91ca15859685b28b$var$eventRegistry[uid] || {};\n    return $91ca15859685b28b$var$eventRegistry[uid];\n}\nfunction $91ca15859685b28b$var$bootstrapHandler(element, fn) {\n    return function handler(event) {\n        $91ca15859685b28b$var$hydrateObj(event, {\n            delegateTarget: element\n        });\n        if (handler.oneOff) $91ca15859685b28b$var$EventHandler.off(element, event.type, fn);\n        return fn.apply(element, [\n            event\n        ]);\n    };\n}\nfunction $91ca15859685b28b$var$bootstrapDelegationHandler(element, selector, fn) {\n    return function handler(event) {\n        const domElements = element.querySelectorAll(selector);\n        for(let { target: target } = event; target && target !== this; target = target.parentNode)for (const domElement of domElements){\n            if (domElement !== target) continue;\n            $91ca15859685b28b$var$hydrateObj(event, {\n                delegateTarget: target\n            });\n            if (handler.oneOff) $91ca15859685b28b$var$EventHandler.off(element, event.type, selector, fn);\n            return fn.apply(target, [\n                event\n            ]);\n        }\n    };\n}\nfunction $91ca15859685b28b$var$findHandler(events, callable, delegationSelector = null) {\n    return Object.values(events).find((event)=>event.callable === callable && event.delegationSelector === delegationSelector);\n}\nfunction $91ca15859685b28b$var$normalizeParameters(originalTypeEvent, handler, delegationFunction) {\n    const isDelegated = typeof handler === 'string';\n    // TODO: tooltip passes `false` instead of selector, so we need to check\n    const callable = isDelegated ? delegationFunction : handler || delegationFunction;\n    let typeEvent = $91ca15859685b28b$var$getTypeEvent(originalTypeEvent);\n    if (!$91ca15859685b28b$var$nativeEvents.has(typeEvent)) typeEvent = originalTypeEvent;\n    return [\n        isDelegated,\n        callable,\n        typeEvent\n    ];\n}\nfunction $91ca15859685b28b$var$addHandler(element, originalTypeEvent, handler, delegationFunction, oneOff) {\n    if (typeof originalTypeEvent !== 'string' || !element) return;\n    let [isDelegated, callable, typeEvent] = $91ca15859685b28b$var$normalizeParameters(originalTypeEvent, handler, delegationFunction);\n    // in case of mouseenter or mouseleave wrap the handler within a function that checks for its DOM position\n    // this prevents the handler from being dispatched the same way as mouseover or mouseout does\n    if (originalTypeEvent in $91ca15859685b28b$var$customEvents) {\n        const wrapFunction = (fn)=>{\n            return function(event) {\n                if (!event.relatedTarget || event.relatedTarget !== event.delegateTarget && !event.delegateTarget.contains(event.relatedTarget)) return fn.call(this, event);\n            };\n        };\n        callable = wrapFunction(callable);\n    }\n    const events = $91ca15859685b28b$var$getElementEvents(element);\n    const handlers = events[typeEvent] || (events[typeEvent] = {});\n    const previousFunction = $91ca15859685b28b$var$findHandler(handlers, callable, isDelegated ? handler : null);\n    if (previousFunction) {\n        previousFunction.oneOff = previousFunction.oneOff && oneOff;\n        return;\n    }\n    const uid = $91ca15859685b28b$var$makeEventUid(callable, originalTypeEvent.replace($91ca15859685b28b$var$namespaceRegex, ''));\n    const fn = isDelegated ? $91ca15859685b28b$var$bootstrapDelegationHandler(element, handler, callable) : $91ca15859685b28b$var$bootstrapHandler(element, callable);\n    fn.delegationSelector = isDelegated ? handler : null;\n    fn.callable = callable;\n    fn.oneOff = oneOff;\n    fn.uidEvent = uid;\n    handlers[uid] = fn;\n    element.addEventListener(typeEvent, fn, isDelegated);\n}\nfunction $91ca15859685b28b$var$removeHandler(element, events, typeEvent, handler, delegationSelector) {\n    const fn = $91ca15859685b28b$var$findHandler(events[typeEvent], handler, delegationSelector);\n    if (!fn) return;\n    element.removeEventListener(typeEvent, fn, Boolean(delegationSelector));\n    delete events[typeEvent][fn.uidEvent];\n}\nfunction $91ca15859685b28b$var$removeNamespacedHandlers(element, events, typeEvent, namespace) {\n    const storeElementEvent = events[typeEvent] || {};\n    for (const [handlerKey, event] of Object.entries(storeElementEvent))if (handlerKey.includes(namespace)) $91ca15859685b28b$var$removeHandler(element, events, typeEvent, event.callable, event.delegationSelector);\n}\nfunction $91ca15859685b28b$var$getTypeEvent(event) {\n    // allow to get the native events from namespaced events ('click.bs.button' --> 'click')\n    event = event.replace($91ca15859685b28b$var$stripNameRegex, '');\n    return $91ca15859685b28b$var$customEvents[event] || event;\n}\nconst $91ca15859685b28b$var$EventHandler = {\n    on (element, event, handler, delegationFunction) {\n        $91ca15859685b28b$var$addHandler(element, event, handler, delegationFunction, false);\n    },\n    one (element, event, handler, delegationFunction) {\n        $91ca15859685b28b$var$addHandler(element, event, handler, delegationFunction, true);\n    },\n    off (element, originalTypeEvent, handler, delegationFunction) {\n        if (typeof originalTypeEvent !== 'string' || !element) return;\n        const [isDelegated, callable, typeEvent] = $91ca15859685b28b$var$normalizeParameters(originalTypeEvent, handler, delegationFunction);\n        const inNamespace = typeEvent !== originalTypeEvent;\n        const events = $91ca15859685b28b$var$getElementEvents(element);\n        const storeElementEvent = events[typeEvent] || {};\n        const isNamespace = originalTypeEvent.startsWith('.');\n        if (typeof callable !== 'undefined') {\n            // Simplest case: handler is passed, remove that listener ONLY.\n            if (!Object.keys(storeElementEvent).length) return;\n            $91ca15859685b28b$var$removeHandler(element, events, typeEvent, callable, isDelegated ? handler : null);\n            return;\n        }\n        if (isNamespace) for (const elementEvent of Object.keys(events))$91ca15859685b28b$var$removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1));\n        for (const [keyHandlers, event] of Object.entries(storeElementEvent)){\n            const handlerKey = keyHandlers.replace($91ca15859685b28b$var$stripUidRegex, '');\n            if (!inNamespace || originalTypeEvent.includes(handlerKey)) $91ca15859685b28b$var$removeHandler(element, events, typeEvent, event.callable, event.delegationSelector);\n        }\n    },\n    trigger (element, event, args) {\n        if (typeof event !== 'string' || !element) return null;\n        const $ = $91ca15859685b28b$var$getjQuery();\n        const typeEvent = $91ca15859685b28b$var$getTypeEvent(event);\n        const inNamespace = event !== typeEvent;\n        let jQueryEvent = null;\n        let bubbles = true;\n        let nativeDispatch = true;\n        let defaultPrevented = false;\n        if (inNamespace && $) {\n            jQueryEvent = $.Event(event, args);\n            $(element).trigger(jQueryEvent);\n            bubbles = !jQueryEvent.isPropagationStopped();\n            nativeDispatch = !jQueryEvent.isImmediatePropagationStopped();\n            defaultPrevented = jQueryEvent.isDefaultPrevented();\n        }\n        const evt = $91ca15859685b28b$var$hydrateObj(new Event(event, {\n            bubbles: bubbles,\n            cancelable: true\n        }), args);\n        if (defaultPrevented) evt.preventDefault();\n        if (nativeDispatch) element.dispatchEvent(evt);\n        if (evt.defaultPrevented && jQueryEvent) jQueryEvent.preventDefault();\n        return evt;\n    }\n};\nfunction $91ca15859685b28b$var$hydrateObj(obj, meta = {}) {\n    for (const [key, value] of Object.entries(meta))try {\n        obj[key] = value;\n    } catch (_unused) {\n        Object.defineProperty(obj, key, {\n            configurable: true,\n            get () {\n                return value;\n            }\n        });\n    }\n    return obj;\n}\n/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/manipulator.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */ function $91ca15859685b28b$var$normalizeData(value) {\n    if (value === 'true') return true;\n    if (value === 'false') return false;\n    if (value === Number(value).toString()) return Number(value);\n    if (value === '' || value === 'null') return null;\n    if (typeof value !== 'string') return value;\n    try {\n        return JSON.parse(decodeURIComponent(value));\n    } catch (_unused) {\n        return value;\n    }\n}\nfunction $91ca15859685b28b$var$normalizeDataKey(key) {\n    return key.replace(/[A-Z]/g, (chr)=>`-${chr.toLowerCase()}`);\n}\nconst $91ca15859685b28b$var$Manipulator = {\n    setDataAttribute (element, key, value) {\n        element.setAttribute(`data-bs-${$91ca15859685b28b$var$normalizeDataKey(key)}`, value);\n    },\n    removeDataAttribute (element, key) {\n        element.removeAttribute(`data-bs-${$91ca15859685b28b$var$normalizeDataKey(key)}`);\n    },\n    getDataAttributes (element) {\n        if (!element) return {};\n        const attributes = {};\n        const bsKeys = Object.keys(element.dataset).filter((key)=>key.startsWith('bs') && !key.startsWith('bsConfig'));\n        for (const key of bsKeys){\n            let pureKey = key.replace(/^bs/, '');\n            pureKey = pureKey.charAt(0).toLowerCase() + pureKey.slice(1);\n            attributes[pureKey] = $91ca15859685b28b$var$normalizeData(element.dataset[key]);\n        }\n        return attributes;\n    },\n    getDataAttribute (element, key) {\n        return $91ca15859685b28b$var$normalizeData(element.getAttribute(`data-bs-${$91ca15859685b28b$var$normalizeDataKey(key)}`));\n    }\n};\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/config.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */ /**\n * Class definition\n */ class $91ca15859685b28b$var$Config {\n    // Getters\n    static get Default() {\n        return {};\n    }\n    static get DefaultType() {\n        return {};\n    }\n    static get NAME() {\n        throw new Error('You have to implement the static method \"NAME\", for each component!');\n    }\n    _getConfig(config) {\n        config = this._mergeConfigObj(config);\n        config = this._configAfterMerge(config);\n        this._typeCheckConfig(config);\n        return config;\n    }\n    _configAfterMerge(config) {\n        return config;\n    }\n    _mergeConfigObj(config, element) {\n        const jsonConfig = $91ca15859685b28b$var$isElement(element) ? $91ca15859685b28b$var$Manipulator.getDataAttribute(element, 'config') : {}; // try to parse\n        return {\n            ...this.constructor.Default,\n            ...typeof jsonConfig === 'object' ? jsonConfig : {},\n            ...$91ca15859685b28b$var$isElement(element) ? $91ca15859685b28b$var$Manipulator.getDataAttributes(element) : {},\n            ...typeof config === 'object' ? config : {}\n        };\n    }\n    _typeCheckConfig(config, configTypes = this.constructor.DefaultType) {\n        for (const [property, expectedTypes] of Object.entries(configTypes)){\n            const value = config[property];\n            const valueType = $91ca15859685b28b$var$isElement(value) ? 'element' : $91ca15859685b28b$var$toType(value);\n            if (!new RegExp(expectedTypes).test(valueType)) throw new TypeError(`${this.constructor.NAME.toUpperCase()}: Option \"${property}\" provided type \"${valueType}\" but expected type \"${expectedTypes}\".`);\n        }\n    }\n}\n/**\n * --------------------------------------------------------------------------\n * Bootstrap base-component.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */ /**\n * Constants\n */ const $91ca15859685b28b$var$VERSION = '5.3.7';\n/**\n * Class definition\n */ class $91ca15859685b28b$var$BaseComponent extends $91ca15859685b28b$var$Config {\n    constructor(element, config){\n        super();\n        element = $91ca15859685b28b$var$getElement(element);\n        if (!element) return;\n        this._element = element;\n        this._config = this._getConfig(config);\n        $91ca15859685b28b$var$Data.set(this._element, this.constructor.DATA_KEY, this);\n    }\n    // Public\n    dispose() {\n        $91ca15859685b28b$var$Data.remove(this._element, this.constructor.DATA_KEY);\n        $91ca15859685b28b$var$EventHandler.off(this._element, this.constructor.EVENT_KEY);\n        for (const propertyName of Object.getOwnPropertyNames(this))this[propertyName] = null;\n    }\n    // Private\n    _queueCallback(callback, element, isAnimated = true) {\n        $91ca15859685b28b$var$executeAfterTransition(callback, element, isAnimated);\n    }\n    _getConfig(config) {\n        config = this._mergeConfigObj(config, this._element);\n        config = this._configAfterMerge(config);\n        this._typeCheckConfig(config);\n        return config;\n    }\n    // Static\n    static getInstance(element) {\n        return $91ca15859685b28b$var$Data.get($91ca15859685b28b$var$getElement(element), this.DATA_KEY);\n    }\n    static getOrCreateInstance(element, config = {}) {\n        return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null);\n    }\n    static get VERSION() {\n        return $91ca15859685b28b$var$VERSION;\n    }\n    static get DATA_KEY() {\n        return `bs.${this.NAME}`;\n    }\n    static get EVENT_KEY() {\n        return `.${this.DATA_KEY}`;\n    }\n    static eventName(name) {\n        return `${name}${this.EVENT_KEY}`;\n    }\n}\n/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/selector-engine.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */ const $91ca15859685b28b$var$getSelector = (element)=>{\n    let selector = element.getAttribute('data-bs-target');\n    if (!selector || selector === '#') {\n        let hrefAttribute = element.getAttribute('href');\n        // The only valid content that could double as a selector are IDs or classes,\n        // so everything starting with `#` or `.`. If a \"real\" URL is used as the selector,\n        // `document.querySelector` will rightfully complain it is invalid.\n        // See https://github.com/twbs/bootstrap/issues/32273\n        if (!hrefAttribute || !hrefAttribute.includes('#') && !hrefAttribute.startsWith('.')) return null;\n        // Just in case some CMS puts out a full URL with the anchor appended\n        if (hrefAttribute.includes('#') && !hrefAttribute.startsWith('#')) hrefAttribute = `#${hrefAttribute.split('#')[1]}`;\n        selector = hrefAttribute && hrefAttribute !== '#' ? hrefAttribute.trim() : null;\n    }\n    return selector ? selector.split(',').map((sel)=>$91ca15859685b28b$var$parseSelector(sel)).join(',') : null;\n};\nconst $91ca15859685b28b$var$SelectorEngine = {\n    find (selector, element = document.documentElement) {\n        return [].concat(...Element.prototype.querySelectorAll.call(element, selector));\n    },\n    findOne (selector, element = document.documentElement) {\n        return Element.prototype.querySelector.call(element, selector);\n    },\n    children (element, selector) {\n        return [].concat(...element.children).filter((child)=>child.matches(selector));\n    },\n    parents (element, selector) {\n        const parents = [];\n        let ancestor = element.parentNode.closest(selector);\n        while(ancestor){\n            parents.push(ancestor);\n            ancestor = ancestor.parentNode.closest(selector);\n        }\n        return parents;\n    },\n    prev (element, selector) {\n        let previous = element.previousElementSibling;\n        while(previous){\n            if (previous.matches(selector)) return [\n                previous\n            ];\n            previous = previous.previousElementSibling;\n        }\n        return [];\n    },\n    // TODO: this is now unused; remove later along with prev()\n    next (element, selector) {\n        let next = element.nextElementSibling;\n        while(next){\n            if (next.matches(selector)) return [\n                next\n            ];\n            next = next.nextElementSibling;\n        }\n        return [];\n    },\n    focusableChildren (element) {\n        const focusables = [\n            'a',\n            'button',\n            'input',\n            'textarea',\n            'select',\n            'details',\n            '[tabindex]',\n            '[contenteditable=\"true\"]'\n        ].map((selector)=>`${selector}:not([tabindex^=\"-\"])`).join(',');\n        return this.find(focusables, element).filter((el)=>!$91ca15859685b28b$var$isDisabled(el) && $91ca15859685b28b$var$isVisible(el));\n    },\n    getSelectorFromElement (element) {\n        const selector = $91ca15859685b28b$var$getSelector(element);\n        if (selector) return $91ca15859685b28b$var$SelectorEngine.findOne(selector) ? selector : null;\n        return null;\n    },\n    getElementFromSelector (element) {\n        const selector = $91ca15859685b28b$var$getSelector(element);\n        return selector ? $91ca15859685b28b$var$SelectorEngine.findOne(selector) : null;\n    },\n    getMultipleElementsFromSelector (element) {\n        const selector = $91ca15859685b28b$var$getSelector(element);\n        return selector ? $91ca15859685b28b$var$SelectorEngine.find(selector) : [];\n    }\n};\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/component-functions.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */ const $91ca15859685b28b$var$enableDismissTrigger = (component, method = 'hide')=>{\n    const clickEvent = `click.dismiss${component.EVENT_KEY}`;\n    const name = component.NAME;\n    $91ca15859685b28b$var$EventHandler.on(document, clickEvent, `[data-bs-dismiss=\"${name}\"]`, function(event) {\n        if ([\n            'A',\n            'AREA'\n        ].includes(this.tagName)) event.preventDefault();\n        if ($91ca15859685b28b$var$isDisabled(this)) return;\n        const target = $91ca15859685b28b$var$SelectorEngine.getElementFromSelector(this) || this.closest(`.${name}`);\n        const instance = component.getOrCreateInstance(target);\n        // Method argument is left, for Alert and only, as it doesn't implement the 'hide' method\n        instance[method]();\n    });\n};\n/**\n * --------------------------------------------------------------------------\n * Bootstrap alert.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */ /**\n * Constants\n */ const $91ca15859685b28b$var$NAME$f = 'alert';\nconst $91ca15859685b28b$var$DATA_KEY$a = 'bs.alert';\nconst $91ca15859685b28b$var$EVENT_KEY$b = `.${$91ca15859685b28b$var$DATA_KEY$a}`;\nconst $91ca15859685b28b$var$EVENT_CLOSE = `close${$91ca15859685b28b$var$EVENT_KEY$b}`;\nconst $91ca15859685b28b$var$EVENT_CLOSED = `closed${$91ca15859685b28b$var$EVENT_KEY$b}`;\nconst $91ca15859685b28b$var$CLASS_NAME_FADE$5 = 'fade';\nconst $91ca15859685b28b$var$CLASS_NAME_SHOW$8 = 'show';\n/**\n * Class definition\n */ class $91ca15859685b28b$export$caec2af78bcc877f extends $91ca15859685b28b$var$BaseComponent {\n    // Getters\n    static get NAME() {\n        return $91ca15859685b28b$var$NAME$f;\n    }\n    // Public\n    close() {\n        const closeEvent = $91ca15859685b28b$var$EventHandler.trigger(this._element, $91ca15859685b28b$var$EVENT_CLOSE);\n        if (closeEvent.defaultPrevented) return;\n        this._element.classList.remove($91ca15859685b28b$var$CLASS_NAME_SHOW$8);\n        const isAnimated = this._element.classList.contains($91ca15859685b28b$var$CLASS_NAME_FADE$5);\n        this._queueCallback(()=>this._destroyElement(), this._element, isAnimated);\n    }\n    // Private\n    _destroyElement() {\n        this._element.remove();\n        $91ca15859685b28b$var$EventHandler.trigger(this._element, $91ca15859685b28b$var$EVENT_CLOSED);\n        this.dispose();\n    }\n    // Static\n    static jQueryInterface(config) {\n        return this.each(function() {\n            const data = $91ca15859685b28b$export$caec2af78bcc877f.getOrCreateInstance(this);\n            if (typeof config !== 'string') return;\n            if (data[config] === undefined || config.startsWith('_') || config === 'constructor') throw new TypeError(`No method named \"${config}\"`);\n            data[config](this);\n        });\n    }\n}\n/**\n * Data API implementation\n */ $91ca15859685b28b$var$enableDismissTrigger($91ca15859685b28b$export$caec2af78bcc877f, 'close');\n/**\n * jQuery\n */ $91ca15859685b28b$var$defineJQueryPlugin($91ca15859685b28b$export$caec2af78bcc877f);\n/**\n * --------------------------------------------------------------------------\n * Bootstrap button.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */ /**\n * Constants\n */ const $91ca15859685b28b$var$NAME$e = 'button';\nconst $91ca15859685b28b$var$DATA_KEY$9 = 'bs.button';\nconst $91ca15859685b28b$var$EVENT_KEY$a = `.${$91ca15859685b28b$var$DATA_KEY$9}`;\nconst $91ca15859685b28b$var$DATA_API_KEY$6 = '.data-api';\nconst $91ca15859685b28b$var$CLASS_NAME_ACTIVE$3 = 'active';\nconst $91ca15859685b28b$var$SELECTOR_DATA_TOGGLE$5 = '[data-bs-toggle=\"button\"]';\nconst $91ca15859685b28b$var$EVENT_CLICK_DATA_API$6 = `click${$91ca15859685b28b$var$EVENT_KEY$a}${$91ca15859685b28b$var$DATA_API_KEY$6}`;\n/**\n * Class definition\n */ class $91ca15859685b28b$export$353f5b6fc5456de1 extends $91ca15859685b28b$var$BaseComponent {\n    // Getters\n    static get NAME() {\n        return $91ca15859685b28b$var$NAME$e;\n    }\n    // Public\n    toggle() {\n        // Toggle class and sync the `aria-pressed` attribute with the return value of the `.toggle()` method\n        this._element.setAttribute('aria-pressed', this._element.classList.toggle($91ca15859685b28b$var$CLASS_NAME_ACTIVE$3));\n    }\n    // Static\n    static jQueryInterface(config) {\n        return this.each(function() {\n            const data = $91ca15859685b28b$export$353f5b6fc5456de1.getOrCreateInstance(this);\n            if (config === 'toggle') data[config]();\n        });\n    }\n}\n/**\n * Data API implementation\n */ $91ca15859685b28b$var$EventHandler.on(document, $91ca15859685b28b$var$EVENT_CLICK_DATA_API$6, $91ca15859685b28b$var$SELECTOR_DATA_TOGGLE$5, (event)=>{\n    event.preventDefault();\n    const button = event.target.closest($91ca15859685b28b$var$SELECTOR_DATA_TOGGLE$5);\n    const data = $91ca15859685b28b$export$353f5b6fc5456de1.getOrCreateInstance(button);\n    data.toggle();\n});\n/**\n * jQuery\n */ $91ca15859685b28b$var$defineJQueryPlugin($91ca15859685b28b$export$353f5b6fc5456de1);\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/swipe.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */ /**\n * Constants\n */ const $91ca15859685b28b$var$NAME$d = 'swipe';\nconst $91ca15859685b28b$var$EVENT_KEY$9 = '.bs.swipe';\nconst $91ca15859685b28b$var$EVENT_TOUCHSTART = `touchstart${$91ca15859685b28b$var$EVENT_KEY$9}`;\nconst $91ca15859685b28b$var$EVENT_TOUCHMOVE = `touchmove${$91ca15859685b28b$var$EVENT_KEY$9}`;\nconst $91ca15859685b28b$var$EVENT_TOUCHEND = `touchend${$91ca15859685b28b$var$EVENT_KEY$9}`;\nconst $91ca15859685b28b$var$EVENT_POINTERDOWN = `pointerdown${$91ca15859685b28b$var$EVENT_KEY$9}`;\nconst $91ca15859685b28b$var$EVENT_POINTERUP = `pointerup${$91ca15859685b28b$var$EVENT_KEY$9}`;\nconst $91ca15859685b28b$var$POINTER_TYPE_TOUCH = 'touch';\nconst $91ca15859685b28b$var$POINTER_TYPE_PEN = 'pen';\nconst $91ca15859685b28b$var$CLASS_NAME_POINTER_EVENT = 'pointer-event';\nconst $91ca15859685b28b$var$SWIPE_THRESHOLD = 40;\nconst $91ca15859685b28b$var$Default$c = {\n    endCallback: null,\n    leftCallback: null,\n    rightCallback: null\n};\nconst $91ca15859685b28b$var$DefaultType$c = {\n    endCallback: '(function|null)',\n    leftCallback: '(function|null)',\n    rightCallback: '(function|null)'\n};\n/**\n * Class definition\n */ class $91ca15859685b28b$var$Swipe extends $91ca15859685b28b$var$Config {\n    constructor(element, config){\n        super();\n        this._element = element;\n        if (!element || !$91ca15859685b28b$var$Swipe.isSupported()) return;\n        this._config = this._getConfig(config);\n        this._deltaX = 0;\n        this._supportPointerEvents = Boolean(window.PointerEvent);\n        this._initEvents();\n    }\n    // Getters\n    static get Default() {\n        return $91ca15859685b28b$var$Default$c;\n    }\n    static get DefaultType() {\n        return $91ca15859685b28b$var$DefaultType$c;\n    }\n    static get NAME() {\n        return $91ca15859685b28b$var$NAME$d;\n    }\n    // Public\n    dispose() {\n        $91ca15859685b28b$var$EventHandler.off(this._element, $91ca15859685b28b$var$EVENT_KEY$9);\n    }\n    // Private\n    _start(event) {\n        if (!this._supportPointerEvents) {\n            this._deltaX = event.touches[0].clientX;\n            return;\n        }\n        if (this._eventIsPointerPenTouch(event)) this._deltaX = event.clientX;\n    }\n    _end(event) {\n        if (this._eventIsPointerPenTouch(event)) this._deltaX = event.clientX - this._deltaX;\n        this._handleSwipe();\n        $91ca15859685b28b$var$execute(this._config.endCallback);\n    }\n    _move(event) {\n        this._deltaX = event.touches && event.touches.length > 1 ? 0 : event.touches[0].clientX - this._deltaX;\n    }\n    _handleSwipe() {\n        const absDeltaX = Math.abs(this._deltaX);\n        if (absDeltaX <= $91ca15859685b28b$var$SWIPE_THRESHOLD) return;\n        const direction = absDeltaX / this._deltaX;\n        this._deltaX = 0;\n        if (!direction) return;\n        $91ca15859685b28b$var$execute(direction > 0 ? this._config.rightCallback : this._config.leftCallback);\n    }\n    _initEvents() {\n        if (this._supportPointerEvents) {\n            $91ca15859685b28b$var$EventHandler.on(this._element, $91ca15859685b28b$var$EVENT_POINTERDOWN, (event)=>this._start(event));\n            $91ca15859685b28b$var$EventHandler.on(this._element, $91ca15859685b28b$var$EVENT_POINTERUP, (event)=>this._end(event));\n            this._element.classList.add($91ca15859685b28b$var$CLASS_NAME_POINTER_EVENT);\n        } else {\n            $91ca15859685b28b$var$EventHandler.on(this._element, $91ca15859685b28b$var$EVENT_TOUCHSTART, (event)=>this._start(event));\n            $91ca15859685b28b$var$EventHandler.on(this._element, $91ca15859685b28b$var$EVENT_TOUCHMOVE, (event)=>this._move(event));\n            $91ca15859685b28b$var$EventHandler.on(this._element, $91ca15859685b28b$var$EVENT_TOUCHEND, (event)=>this._end(event));\n        }\n    }\n    _eventIsPointerPenTouch(event) {\n        return this._supportPointerEvents && (event.pointerType === $91ca15859685b28b$var$POINTER_TYPE_PEN || event.pointerType === $91ca15859685b28b$var$POINTER_TYPE_TOUCH);\n    }\n    // Static\n    static isSupported() {\n        return 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0;\n    }\n}\n/**\n * --------------------------------------------------------------------------\n * Bootstrap carousel.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */ /**\n * Constants\n */ const $91ca15859685b28b$var$NAME$c = 'carousel';\nconst $91ca15859685b28b$var$DATA_KEY$8 = 'bs.carousel';\nconst $91ca15859685b28b$var$EVENT_KEY$8 = `.${$91ca15859685b28b$var$DATA_KEY$8}`;\nconst $91ca15859685b28b$var$DATA_API_KEY$5 = '.data-api';\nconst $91ca15859685b28b$var$ARROW_LEFT_KEY$1 = 'ArrowLeft';\nconst $91ca15859685b28b$var$ARROW_RIGHT_KEY$1 = 'ArrowRight';\nconst $91ca15859685b28b$var$TOUCHEVENT_COMPAT_WAIT = 500; // Time for mouse compat events to fire after touch\nconst $91ca15859685b28b$var$ORDER_NEXT = 'next';\nconst $91ca15859685b28b$var$ORDER_PREV = 'prev';\nconst $91ca15859685b28b$var$DIRECTION_LEFT = 'left';\nconst $91ca15859685b28b$var$DIRECTION_RIGHT = 'right';\nconst $91ca15859685b28b$var$EVENT_SLIDE = `slide${$91ca15859685b28b$var$EVENT_KEY$8}`;\nconst $91ca15859685b28b$var$EVENT_SLID = `slid${$91ca15859685b28b$var$EVENT_KEY$8}`;\nconst $91ca15859685b28b$var$EVENT_KEYDOWN$1 = `keydown${$91ca15859685b28b$var$EVENT_KEY$8}`;\nconst $91ca15859685b28b$var$EVENT_MOUSEENTER$1 = `mouseenter${$91ca15859685b28b$var$EVENT_KEY$8}`;\nconst $91ca15859685b28b$var$EVENT_MOUSELEAVE$1 = `mouseleave${$91ca15859685b28b$var$EVENT_KEY$8}`;\nconst $91ca15859685b28b$var$EVENT_DRAG_START = `dragstart${$91ca15859685b28b$var$EVENT_KEY$8}`;\nconst $91ca15859685b28b$var$EVENT_LOAD_DATA_API$3 = `load${$91ca15859685b28b$var$EVENT_KEY$8}${$91ca15859685b28b$var$DATA_API_KEY$5}`;\nconst $91ca15859685b28b$var$EVENT_CLICK_DATA_API$5 = `click${$91ca15859685b28b$var$EVENT_KEY$8}${$91ca15859685b28b$var$DATA_API_KEY$5}`;\nconst $91ca15859685b28b$var$CLASS_NAME_CAROUSEL = 'carousel';\nconst $91ca15859685b28b$var$CLASS_NAME_ACTIVE$2 = 'active';\nconst $91ca15859685b28b$var$CLASS_NAME_SLIDE = 'slide';\nconst $91ca15859685b28b$var$CLASS_NAME_END = 'carousel-item-end';\nconst $91ca15859685b28b$var$CLASS_NAME_START = 'carousel-item-start';\nconst $91ca15859685b28b$var$CLASS_NAME_NEXT = 'carousel-item-next';\nconst $91ca15859685b28b$var$CLASS_NAME_PREV = 'carousel-item-prev';\nconst $91ca15859685b28b$var$SELECTOR_ACTIVE = '.active';\nconst $91ca15859685b28b$var$SELECTOR_ITEM = '.carousel-item';\nconst $91ca15859685b28b$var$SELECTOR_ACTIVE_ITEM = $91ca15859685b28b$var$SELECTOR_ACTIVE + $91ca15859685b28b$var$SELECTOR_ITEM;\nconst $91ca15859685b28b$var$SELECTOR_ITEM_IMG = '.carousel-item img';\nconst $91ca15859685b28b$var$SELECTOR_INDICATORS = '.carousel-indicators';\nconst $91ca15859685b28b$var$SELECTOR_DATA_SLIDE = '[data-bs-slide], [data-bs-slide-to]';\nconst $91ca15859685b28b$var$SELECTOR_DATA_RIDE = '[data-bs-ride=\"carousel\"]';\nconst $91ca15859685b28b$var$KEY_TO_DIRECTION = {\n    [$91ca15859685b28b$var$ARROW_LEFT_KEY$1]: $91ca15859685b28b$var$DIRECTION_RIGHT,\n    [$91ca15859685b28b$var$ARROW_RIGHT_KEY$1]: $91ca15859685b28b$var$DIRECTION_LEFT\n};\nconst $91ca15859685b28b$var$Default$b = {\n    interval: 5000,\n    keyboard: true,\n    pause: 'hover',\n    ride: false,\n    touch: true,\n    wrap: true\n};\nconst $91ca15859685b28b$var$DefaultType$b = {\n    interval: '(number|boolean)',\n    // TODO:v6 remove boolean support\n    keyboard: 'boolean',\n    pause: '(string|boolean)',\n    ride: '(boolean|string)',\n    touch: 'boolean',\n    wrap: 'boolean'\n};\n/**\n * Class definition\n */ class $91ca15859685b28b$export$144901db2ea8e967 extends $91ca15859685b28b$var$BaseComponent {\n    constructor(element, config){\n        super(element, config);\n        this._interval = null;\n        this._activeElement = null;\n        this._isSliding = false;\n        this.touchTimeout = null;\n        this._swipeHelper = null;\n        this._indicatorsElement = $91ca15859685b28b$var$SelectorEngine.findOne($91ca15859685b28b$var$SELECTOR_INDICATORS, this._element);\n        this._addEventListeners();\n        if (this._config.ride === $91ca15859685b28b$var$CLASS_NAME_CAROUSEL) this.cycle();\n    }\n    // Getters\n    static get Default() {\n        return $91ca15859685b28b$var$Default$b;\n    }\n    static get DefaultType() {\n        return $91ca15859685b28b$var$DefaultType$b;\n    }\n    static get NAME() {\n        return $91ca15859685b28b$var$NAME$c;\n    }\n    // Public\n    next() {\n        this._slide($91ca15859685b28b$var$ORDER_NEXT);\n    }\n    nextWhenVisible() {\n        // FIXME TODO use `document.visibilityState`\n        // Don't call next when the page isn't visible\n        // or the carousel or its parent isn't visible\n        if (!document.hidden && $91ca15859685b28b$var$isVisible(this._element)) this.next();\n    }\n    prev() {\n        this._slide($91ca15859685b28b$var$ORDER_PREV);\n    }\n    pause() {\n        if (this._isSliding) $91ca15859685b28b$var$triggerTransitionEnd(this._element);\n        this._clearInterval();\n    }\n    cycle() {\n        this._clearInterval();\n        this._updateInterval();\n        this._interval = setInterval(()=>this.nextWhenVisible(), this._config.interval);\n    }\n    _maybeEnableCycle() {\n        if (!this._config.ride) return;\n        if (this._isSliding) {\n            $91ca15859685b28b$var$EventHandler.one(this._element, $91ca15859685b28b$var$EVENT_SLID, ()=>this.cycle());\n            return;\n        }\n        this.cycle();\n    }\n    to(index) {\n        const items = this._getItems();\n        if (index > items.length - 1 || index < 0) return;\n        if (this._isSliding) {\n            $91ca15859685b28b$var$EventHandler.one(this._element, $91ca15859685b28b$var$EVENT_SLID, ()=>this.to(index));\n            return;\n        }\n        const activeIndex = this._getItemIndex(this._getActive());\n        if (activeIndex === index) return;\n        const order = index > activeIndex ? $91ca15859685b28b$var$ORDER_NEXT : $91ca15859685b28b$var$ORDER_PREV;\n        this._slide(order, items[index]);\n    }\n    dispose() {\n        if (this._swipeHelper) this._swipeHelper.dispose();\n        super.dispose();\n    }\n    // Private\n    _configAfterMerge(config) {\n        config.defaultInterval = config.interval;\n        return config;\n    }\n    _addEventListeners() {\n        if (this._config.keyboard) $91ca15859685b28b$var$EventHandler.on(this._element, $91ca15859685b28b$var$EVENT_KEYDOWN$1, (event)=>this._keydown(event));\n        if (this._config.pause === 'hover') {\n            $91ca15859685b28b$var$EventHandler.on(this._element, $91ca15859685b28b$var$EVENT_MOUSEENTER$1, ()=>this.pause());\n            $91ca15859685b28b$var$EventHandler.on(this._element, $91ca15859685b28b$var$EVENT_MOUSELEAVE$1, ()=>this._maybeEnableCycle());\n        }\n        if (this._config.touch && $91ca15859685b28b$var$Swipe.isSupported()) this._addTouchEventListeners();\n    }\n    _addTouchEventListeners() {\n        for (const img of $91ca15859685b28b$var$SelectorEngine.find($91ca15859685b28b$var$SELECTOR_ITEM_IMG, this._element))$91ca15859685b28b$var$EventHandler.on(img, $91ca15859685b28b$var$EVENT_DRAG_START, (event)=>event.preventDefault());\n        const endCallBack = ()=>{\n            if (this._config.pause !== 'hover') return;\n            // If it's a touch-enabled device, mouseenter/leave are fired as\n            // part of the mouse compatibility events on first tap - the carousel\n            // would stop cycling until user tapped out of it;\n            // here, we listen for touchend, explicitly pause the carousel\n            // (as if it's the second time we tap on it, mouseenter compat event\n            // is NOT fired) and after a timeout (to allow for mouse compatibility\n            // events to fire) we explicitly restart cycling\n            this.pause();\n            if (this.touchTimeout) clearTimeout(this.touchTimeout);\n            this.touchTimeout = setTimeout(()=>this._maybeEnableCycle(), $91ca15859685b28b$var$TOUCHEVENT_COMPAT_WAIT + this._config.interval);\n        };\n        const swipeConfig = {\n            leftCallback: ()=>this._slide(this._directionToOrder($91ca15859685b28b$var$DIRECTION_LEFT)),\n            rightCallback: ()=>this._slide(this._directionToOrder($91ca15859685b28b$var$DIRECTION_RIGHT)),\n            endCallback: endCallBack\n        };\n        this._swipeHelper = new $91ca15859685b28b$var$Swipe(this._element, swipeConfig);\n    }\n    _keydown(event) {\n        if (/input|textarea/i.test(event.target.tagName)) return;\n        const direction = $91ca15859685b28b$var$KEY_TO_DIRECTION[event.key];\n        if (direction) {\n            event.preventDefault();\n            this._slide(this._directionToOrder(direction));\n        }\n    }\n    _getItemIndex(element) {\n        return this._getItems().indexOf(element);\n    }\n    _setActiveIndicatorElement(index) {\n        if (!this._indicatorsElement) return;\n        const activeIndicator = $91ca15859685b28b$var$SelectorEngine.findOne($91ca15859685b28b$var$SELECTOR_ACTIVE, this._indicatorsElement);\n        activeIndicator.classList.remove($91ca15859685b28b$var$CLASS_NAME_ACTIVE$2);\n        activeIndicator.removeAttribute('aria-current');\n        const newActiveIndicator = $91ca15859685b28b$var$SelectorEngine.findOne(`[data-bs-slide-to=\"${index}\"]`, this._indicatorsElement);\n        if (newActiveIndicator) {\n            newActiveIndicator.classList.add($91ca15859685b28b$var$CLASS_NAME_ACTIVE$2);\n            newActiveIndicator.setAttribute('aria-current', 'true');\n        }\n    }\n    _updateInterval() {\n        const element = this._activeElement || this._getActive();\n        if (!element) return;\n        const elementInterval = Number.parseInt(element.getAttribute('data-bs-interval'), 10);\n        this._config.interval = elementInterval || this._config.defaultInterval;\n    }\n    _slide(order, element = null) {\n        if (this._isSliding) return;\n        const activeElement = this._getActive();\n        const isNext = order === $91ca15859685b28b$var$ORDER_NEXT;\n        const nextElement = element || $91ca15859685b28b$var$getNextActiveElement(this._getItems(), activeElement, isNext, this._config.wrap);\n        if (nextElement === activeElement) return;\n        const nextElementIndex = this._getItemIndex(nextElement);\n        const triggerEvent = (eventName)=>{\n            return $91ca15859685b28b$var$EventHandler.trigger(this._element, eventName, {\n                relatedTarget: nextElement,\n                direction: this._orderToDirection(order),\n                from: this._getItemIndex(activeElement),\n                to: nextElementIndex\n            });\n        };\n        const slideEvent = triggerEvent($91ca15859685b28b$var$EVENT_SLIDE);\n        if (slideEvent.defaultPrevented) return;\n        if (!activeElement || !nextElement) // Some weirdness is happening, so we bail\n        // TODO: change tests that use empty divs to avoid this check\n        return;\n        const isCycling = Boolean(this._interval);\n        this.pause();\n        this._isSliding = true;\n        this._setActiveIndicatorElement(nextElementIndex);\n        this._activeElement = nextElement;\n        const directionalClassName = isNext ? $91ca15859685b28b$var$CLASS_NAME_START : $91ca15859685b28b$var$CLASS_NAME_END;\n        const orderClassName = isNext ? $91ca15859685b28b$var$CLASS_NAME_NEXT : $91ca15859685b28b$var$CLASS_NAME_PREV;\n        nextElement.classList.add(orderClassName);\n        $91ca15859685b28b$var$reflow(nextElement);\n        activeElement.classList.add(directionalClassName);\n        nextElement.classList.add(directionalClassName);\n        const completeCallBack = ()=>{\n            nextElement.classList.remove(directionalClassName, orderClassName);\n            nextElement.classList.add($91ca15859685b28b$var$CLASS_NAME_ACTIVE$2);\n            activeElement.classList.remove($91ca15859685b28b$var$CLASS_NAME_ACTIVE$2, orderClassName, directionalClassName);\n            this._isSliding = false;\n            triggerEvent($91ca15859685b28b$var$EVENT_SLID);\n        };\n        this._queueCallback(completeCallBack, activeElement, this._isAnimated());\n        if (isCycling) this.cycle();\n    }\n    _isAnimated() {\n        return this._element.classList.contains($91ca15859685b28b$var$CLASS_NAME_SLIDE);\n    }\n    _getActive() {\n        return $91ca15859685b28b$var$SelectorEngine.findOne($91ca15859685b28b$var$SELECTOR_ACTIVE_ITEM, this._element);\n    }\n    _getItems() {\n        return $91ca15859685b28b$var$SelectorEngine.find($91ca15859685b28b$var$SELECTOR_ITEM, this._element);\n    }\n    _clearInterval() {\n        if (this._interval) {\n            clearInterval(this._interval);\n            this._interval = null;\n        }\n    }\n    _directionToOrder(direction) {\n        if ($91ca15859685b28b$var$isRTL()) return direction === $91ca15859685b28b$var$DIRECTION_LEFT ? $91ca15859685b28b$var$ORDER_PREV : $91ca15859685b28b$var$ORDER_NEXT;\n        return direction === $91ca15859685b28b$var$DIRECTION_LEFT ? $91ca15859685b28b$var$ORDER_NEXT : $91ca15859685b28b$var$ORDER_PREV;\n    }\n    _orderToDirection(order) {\n        if ($91ca15859685b28b$var$isRTL()) return order === $91ca15859685b28b$var$ORDER_PREV ? $91ca15859685b28b$var$DIRECTION_LEFT : $91ca15859685b28b$var$DIRECTION_RIGHT;\n        return order === $91ca15859685b28b$var$ORDER_PREV ? $91ca15859685b28b$var$DIRECTION_RIGHT : $91ca15859685b28b$var$DIRECTION_LEFT;\n    }\n    // Static\n    static jQueryInterface(config) {\n        return this.each(function() {\n            const data = $91ca15859685b28b$export$144901db2ea8e967.getOrCreateInstance(this, config);\n            if (typeof config === 'number') {\n                data.to(config);\n                return;\n            }\n            if (typeof config === 'string') {\n                if (data[config] === undefined || config.startsWith('_') || config === 'constructor') throw new TypeError(`No method named \"${config}\"`);\n                data[config]();\n            }\n        });\n    }\n}\n/**\n * Data API implementation\n */ $91ca15859685b28b$var$EventHandler.on(document, $91ca15859685b28b$var$EVENT_CLICK_DATA_API$5, $91ca15859685b28b$var$SELECTOR_DATA_SLIDE, function(event) {\n    const target = $91ca15859685b28b$var$SelectorEngine.getElementFromSelector(this);\n    if (!target || !target.classList.contains($91ca15859685b28b$var$CLASS_NAME_CAROUSEL)) return;\n    event.preventDefault();\n    const carousel = $91ca15859685b28b$export$144901db2ea8e967.getOrCreateInstance(target);\n    const slideIndex = this.getAttribute('data-bs-slide-to');\n    if (slideIndex) {\n        carousel.to(slideIndex);\n        carousel._maybeEnableCycle();\n        return;\n    }\n    if ($91ca15859685b28b$var$Manipulator.getDataAttribute(this, 'slide') === 'next') {\n        carousel.next();\n        carousel._maybeEnableCycle();\n        return;\n    }\n    carousel.prev();\n    carousel._maybeEnableCycle();\n});\n$91ca15859685b28b$var$EventHandler.on(window, $91ca15859685b28b$var$EVENT_LOAD_DATA_API$3, ()=>{\n    const carousels = $91ca15859685b28b$var$SelectorEngine.find($91ca15859685b28b$var$SELECTOR_DATA_RIDE);\n    for (const carousel of carousels)$91ca15859685b28b$export$144901db2ea8e967.getOrCreateInstance(carousel);\n});\n/**\n * jQuery\n */ $91ca15859685b28b$var$defineJQueryPlugin($91ca15859685b28b$export$144901db2ea8e967);\n/**\n * --------------------------------------------------------------------------\n * Bootstrap collapse.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */ /**\n * Constants\n */ const $91ca15859685b28b$var$NAME$b = 'collapse';\nconst $91ca15859685b28b$var$DATA_KEY$7 = 'bs.collapse';\nconst $91ca15859685b28b$var$EVENT_KEY$7 = `.${$91ca15859685b28b$var$DATA_KEY$7}`;\nconst $91ca15859685b28b$var$DATA_API_KEY$4 = '.data-api';\nconst $91ca15859685b28b$var$EVENT_SHOW$6 = `show${$91ca15859685b28b$var$EVENT_KEY$7}`;\nconst $91ca15859685b28b$var$EVENT_SHOWN$6 = `shown${$91ca15859685b28b$var$EVENT_KEY$7}`;\nconst $91ca15859685b28b$var$EVENT_HIDE$6 = `hide${$91ca15859685b28b$var$EVENT_KEY$7}`;\nconst $91ca15859685b28b$var$EVENT_HIDDEN$6 = `hidden${$91ca15859685b28b$var$EVENT_KEY$7}`;\nconst $91ca15859685b28b$var$EVENT_CLICK_DATA_API$4 = `click${$91ca15859685b28b$var$EVENT_KEY$7}${$91ca15859685b28b$var$DATA_API_KEY$4}`;\nconst $91ca15859685b28b$var$CLASS_NAME_SHOW$7 = 'show';\nconst $91ca15859685b28b$var$CLASS_NAME_COLLAPSE = 'collapse';\nconst $91ca15859685b28b$var$CLASS_NAME_COLLAPSING = 'collapsing';\nconst $91ca15859685b28b$var$CLASS_NAME_COLLAPSED = 'collapsed';\nconst $91ca15859685b28b$var$CLASS_NAME_DEEPER_CHILDREN = `:scope .${$91ca15859685b28b$var$CLASS_NAME_COLLAPSE} .${$91ca15859685b28b$var$CLASS_NAME_COLLAPSE}`;\nconst $91ca15859685b28b$var$CLASS_NAME_HORIZONTAL = 'collapse-horizontal';\nconst $91ca15859685b28b$var$WIDTH = 'width';\nconst $91ca15859685b28b$var$HEIGHT = 'height';\nconst $91ca15859685b28b$var$SELECTOR_ACTIVES = '.collapse.show, .collapse.collapsing';\nconst $91ca15859685b28b$var$SELECTOR_DATA_TOGGLE$4 = '[data-bs-toggle=\"collapse\"]';\nconst $91ca15859685b28b$var$Default$a = {\n    parent: null,\n    toggle: true\n};\nconst $91ca15859685b28b$var$DefaultType$a = {\n    parent: '(null|element)',\n    toggle: 'boolean'\n};\n/**\n * Class definition\n */ class $91ca15859685b28b$export$78768a9af065a7b extends $91ca15859685b28b$var$BaseComponent {\n    constructor(element, config){\n        super(element, config);\n        this._isTransitioning = false;\n        this._triggerArray = [];\n        const toggleList = $91ca15859685b28b$var$SelectorEngine.find($91ca15859685b28b$var$SELECTOR_DATA_TOGGLE$4);\n        for (const elem of toggleList){\n            const selector = $91ca15859685b28b$var$SelectorEngine.getSelectorFromElement(elem);\n            const filterElement = $91ca15859685b28b$var$SelectorEngine.find(selector).filter((foundElement)=>foundElement === this._element);\n            if (selector !== null && filterElement.length) this._triggerArray.push(elem);\n        }\n        this._initializeChildren();\n        if (!this._config.parent) this._addAriaAndCollapsedClass(this._triggerArray, this._isShown());\n        if (this._config.toggle) this.toggle();\n    }\n    // Getters\n    static get Default() {\n        return $91ca15859685b28b$var$Default$a;\n    }\n    static get DefaultType() {\n        return $91ca15859685b28b$var$DefaultType$a;\n    }\n    static get NAME() {\n        return $91ca15859685b28b$var$NAME$b;\n    }\n    // Public\n    toggle() {\n        if (this._isShown()) this.hide();\n        else this.show();\n    }\n    show() {\n        if (this._isTransitioning || this._isShown()) return;\n        let activeChildren = [];\n        // find active children\n        if (this._config.parent) activeChildren = this._getFirstLevelChildren($91ca15859685b28b$var$SELECTOR_ACTIVES).filter((element)=>element !== this._element).map((element)=>$91ca15859685b28b$export$78768a9af065a7b.getOrCreateInstance(element, {\n                toggle: false\n            }));\n        if (activeChildren.length && activeChildren[0]._isTransitioning) return;\n        const startEvent = $91ca15859685b28b$var$EventHandler.trigger(this._element, $91ca15859685b28b$var$EVENT_SHOW$6);\n        if (startEvent.defaultPrevented) return;\n        for (const activeInstance of activeChildren)activeInstance.hide();\n        const dimension = this._getDimension();\n        this._element.classList.remove($91ca15859685b28b$var$CLASS_NAME_COLLAPSE);\n        this._element.classList.add($91ca15859685b28b$var$CLASS_NAME_COLLAPSING);\n        this._element.style[dimension] = 0;\n        this._addAriaAndCollapsedClass(this._triggerArray, true);\n        this._isTransitioning = true;\n        const complete = ()=>{\n            this._isTransitioning = false;\n            this._element.classList.remove($91ca15859685b28b$var$CLASS_NAME_COLLAPSING);\n            this._element.classList.add($91ca15859685b28b$var$CLASS_NAME_COLLAPSE, $91ca15859685b28b$var$CLASS_NAME_SHOW$7);\n            this._element.style[dimension] = '';\n            $91ca15859685b28b$var$EventHandler.trigger(this._element, $91ca15859685b28b$var$EVENT_SHOWN$6);\n        };\n        const capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);\n        const scrollSize = `scroll${capitalizedDimension}`;\n        this._queueCallback(complete, this._element, true);\n        this._element.style[dimension] = `${this._element[scrollSize]}px`;\n    }\n    hide() {\n        if (this._isTransitioning || !this._isShown()) return;\n        const startEvent = $91ca15859685b28b$var$EventHandler.trigger(this._element, $91ca15859685b28b$var$EVENT_HIDE$6);\n        if (startEvent.defaultPrevented) return;\n        const dimension = this._getDimension();\n        this._element.style[dimension] = `${this._element.getBoundingClientRect()[dimension]}px`;\n        $91ca15859685b28b$var$reflow(this._element);\n        this._element.classList.add($91ca15859685b28b$var$CLASS_NAME_COLLAPSING);\n        this._element.classList.remove($91ca15859685b28b$var$CLASS_NAME_COLLAPSE, $91ca15859685b28b$var$CLASS_NAME_SHOW$7);\n        for (const trigger of this._triggerArray){\n            const element = $91ca15859685b28b$var$SelectorEngine.getElementFromSelector(trigger);\n            if (element && !this._isShown(element)) this._addAriaAndCollapsedClass([\n                trigger\n            ], false);\n        }\n        this._isTransitioning = true;\n        const complete = ()=>{\n            this._isTransitioning = false;\n            this._element.classList.remove($91ca15859685b28b$var$CLASS_NAME_COLLAPSING);\n            this._element.classList.add($91ca15859685b28b$var$CLASS_NAME_COLLAPSE);\n            $91ca15859685b28b$var$EventHandler.trigger(this._element, $91ca15859685b28b$var$EVENT_HIDDEN$6);\n        };\n        this._element.style[dimension] = '';\n        this._queueCallback(complete, this._element, true);\n    }\n    // Private\n    _isShown(element = this._element) {\n        return element.classList.contains($91ca15859685b28b$var$CLASS_NAME_SHOW$7);\n    }\n    _configAfterMerge(config) {\n        config.toggle = Boolean(config.toggle); // Coerce string values\n        config.parent = $91ca15859685b28b$var$getElement(config.parent);\n        return config;\n    }\n    _getDimension() {\n        return this._element.classList.contains($91ca15859685b28b$var$CLASS_NAME_HORIZONTAL) ? $91ca15859685b28b$var$WIDTH : $91ca15859685b28b$var$HEIGHT;\n    }\n    _initializeChildren() {\n        if (!this._config.parent) return;\n        const children = this._getFirstLevelChildren($91ca15859685b28b$var$SELECTOR_DATA_TOGGLE$4);\n        for (const element of children){\n            const selected = $91ca15859685b28b$var$SelectorEngine.getElementFromSelector(element);\n            if (selected) this._addAriaAndCollapsedClass([\n                element\n            ], this._isShown(selected));\n        }\n    }\n    _getFirstLevelChildren(selector) {\n        const children = $91ca15859685b28b$var$SelectorEngine.find($91ca15859685b28b$var$CLASS_NAME_DEEPER_CHILDREN, this._config.parent);\n        // remove children if greater depth\n        return $91ca15859685b28b$var$SelectorEngine.find(selector, this._config.parent).filter((element)=>!children.includes(element));\n    }\n    _addAriaAndCollapsedClass(triggerArray, isOpen) {\n        if (!triggerArray.length) return;\n        for (const element of triggerArray){\n            element.classList.toggle($91ca15859685b28b$var$CLASS_NAME_COLLAPSED, !isOpen);\n            element.setAttribute('aria-expanded', isOpen);\n        }\n    }\n    // Static\n    static jQueryInterface(config) {\n        const _config = {};\n        if (typeof config === 'string' && /show|hide/.test(config)) _config.toggle = false;\n        return this.each(function() {\n            const data = $91ca15859685b28b$export$78768a9af065a7b.getOrCreateInstance(this, _config);\n            if (typeof config === 'string') {\n                if (typeof data[config] === 'undefined') throw new TypeError(`No method named \"${config}\"`);\n                data[config]();\n            }\n        });\n    }\n}\n/**\n * Data API implementation\n */ $91ca15859685b28b$var$EventHandler.on(document, $91ca15859685b28b$var$EVENT_CLICK_DATA_API$4, $91ca15859685b28b$var$SELECTOR_DATA_TOGGLE$4, function(event) {\n    // preventDefault only for <a> elements (which change the URL) not inside the collapsible element\n    if (event.target.tagName === 'A' || event.delegateTarget && event.delegateTarget.tagName === 'A') event.preventDefault();\n    for (const element of $91ca15859685b28b$var$SelectorEngine.getMultipleElementsFromSelector(this))$91ca15859685b28b$export$78768a9af065a7b.getOrCreateInstance(element, {\n        toggle: false\n    }).toggle();\n});\n/**\n * jQuery\n */ $91ca15859685b28b$var$defineJQueryPlugin($91ca15859685b28b$export$78768a9af065a7b);\n/**\n * --------------------------------------------------------------------------\n * Bootstrap dropdown.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */ /**\n * Constants\n */ const $91ca15859685b28b$var$NAME$a = 'dropdown';\nconst $91ca15859685b28b$var$DATA_KEY$6 = 'bs.dropdown';\nconst $91ca15859685b28b$var$EVENT_KEY$6 = `.${$91ca15859685b28b$var$DATA_KEY$6}`;\nconst $91ca15859685b28b$var$DATA_API_KEY$3 = '.data-api';\nconst $91ca15859685b28b$var$ESCAPE_KEY$2 = 'Escape';\nconst $91ca15859685b28b$var$TAB_KEY$1 = 'Tab';\nconst $91ca15859685b28b$var$ARROW_UP_KEY$1 = 'ArrowUp';\nconst $91ca15859685b28b$var$ARROW_DOWN_KEY$1 = 'ArrowDown';\nconst $91ca15859685b28b$var$RIGHT_MOUSE_BUTTON = 2; // MouseEvent.button value for the secondary button, usually the right button\nconst $91ca15859685b28b$var$EVENT_HIDE$5 = `hide${$91ca15859685b28b$var$EVENT_KEY$6}`;\nconst $91ca15859685b28b$var$EVENT_HIDDEN$5 = `hidden${$91ca15859685b28b$var$EVENT_KEY$6}`;\nconst $91ca15859685b28b$var$EVENT_SHOW$5 = `show${$91ca15859685b28b$var$EVENT_KEY$6}`;\nconst $91ca15859685b28b$var$EVENT_SHOWN$5 = `shown${$91ca15859685b28b$var$EVENT_KEY$6}`;\nconst $91ca15859685b28b$var$EVENT_CLICK_DATA_API$3 = `click${$91ca15859685b28b$var$EVENT_KEY$6}${$91ca15859685b28b$var$DATA_API_KEY$3}`;\nconst $91ca15859685b28b$var$EVENT_KEYDOWN_DATA_API = `keydown${$91ca15859685b28b$var$EVENT_KEY$6}${$91ca15859685b28b$var$DATA_API_KEY$3}`;\nconst $91ca15859685b28b$var$EVENT_KEYUP_DATA_API = `keyup${$91ca15859685b28b$var$EVENT_KEY$6}${$91ca15859685b28b$var$DATA_API_KEY$3}`;\nconst $91ca15859685b28b$var$CLASS_NAME_SHOW$6 = 'show';\nconst $91ca15859685b28b$var$CLASS_NAME_DROPUP = 'dropup';\nconst $91ca15859685b28b$var$CLASS_NAME_DROPEND = 'dropend';\nconst $91ca15859685b28b$var$CLASS_NAME_DROPSTART = 'dropstart';\nconst $91ca15859685b28b$var$CLASS_NAME_DROPUP_CENTER = 'dropup-center';\nconst $91ca15859685b28b$var$CLASS_NAME_DROPDOWN_CENTER = 'dropdown-center';\nconst $91ca15859685b28b$var$SELECTOR_DATA_TOGGLE$3 = '[data-bs-toggle=\"dropdown\"]:not(.disabled):not(:disabled)';\nconst $91ca15859685b28b$var$SELECTOR_DATA_TOGGLE_SHOWN = `${$91ca15859685b28b$var$SELECTOR_DATA_TOGGLE$3}.${$91ca15859685b28b$var$CLASS_NAME_SHOW$6}`;\nconst $91ca15859685b28b$var$SELECTOR_MENU = '.dropdown-menu';\nconst $91ca15859685b28b$var$SELECTOR_NAVBAR = '.navbar';\nconst $91ca15859685b28b$var$SELECTOR_NAVBAR_NAV = '.navbar-nav';\nconst $91ca15859685b28b$var$SELECTOR_VISIBLE_ITEMS = '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)';\nconst $91ca15859685b28b$var$PLACEMENT_TOP = $91ca15859685b28b$var$isRTL() ? 'top-end' : 'top-start';\nconst $91ca15859685b28b$var$PLACEMENT_TOPEND = $91ca15859685b28b$var$isRTL() ? 'top-start' : 'top-end';\nconst $91ca15859685b28b$var$PLACEMENT_BOTTOM = $91ca15859685b28b$var$isRTL() ? 'bottom-end' : 'bottom-start';\nconst $91ca15859685b28b$var$PLACEMENT_BOTTOMEND = $91ca15859685b28b$var$isRTL() ? 'bottom-start' : 'bottom-end';\nconst $91ca15859685b28b$var$PLACEMENT_RIGHT = $91ca15859685b28b$var$isRTL() ? 'left-start' : 'right-start';\nconst $91ca15859685b28b$var$PLACEMENT_LEFT = $91ca15859685b28b$var$isRTL() ? 'right-start' : 'left-start';\nconst $91ca15859685b28b$var$PLACEMENT_TOPCENTER = 'top';\nconst $91ca15859685b28b$var$PLACEMENT_BOTTOMCENTER = 'bottom';\nconst $91ca15859685b28b$var$Default$9 = {\n    autoClose: true,\n    boundary: 'clippingParents',\n    display: 'dynamic',\n    offset: [\n        0,\n        2\n    ],\n    popperConfig: null,\n    reference: 'toggle'\n};\nconst $91ca15859685b28b$var$DefaultType$9 = {\n    autoClose: '(boolean|string)',\n    boundary: '(string|element)',\n    display: 'string',\n    offset: '(array|string|function)',\n    popperConfig: '(null|object|function)',\n    reference: '(string|element|object)'\n};\n/**\n * Class definition\n */ class $91ca15859685b28b$export$931cbfb6bfb85fc extends $91ca15859685b28b$var$BaseComponent {\n    constructor(element, config){\n        super(element, config);\n        this._popper = null;\n        this._parent = this._element.parentNode; // dropdown wrapper\n        // TODO: v6 revert #37011 & change markup https://getbootstrap.com/docs/5.3/forms/input-group/\n        this._menu = $91ca15859685b28b$var$SelectorEngine.next(this._element, $91ca15859685b28b$var$SELECTOR_MENU)[0] || $91ca15859685b28b$var$SelectorEngine.prev(this._element, $91ca15859685b28b$var$SELECTOR_MENU)[0] || $91ca15859685b28b$var$SelectorEngine.findOne($91ca15859685b28b$var$SELECTOR_MENU, this._parent);\n        this._inNavbar = this._detectNavbar();\n    }\n    // Getters\n    static get Default() {\n        return $91ca15859685b28b$var$Default$9;\n    }\n    static get DefaultType() {\n        return $91ca15859685b28b$var$DefaultType$9;\n    }\n    static get NAME() {\n        return $91ca15859685b28b$var$NAME$a;\n    }\n    // Public\n    toggle() {\n        return this._isShown() ? this.hide() : this.show();\n    }\n    show() {\n        if ($91ca15859685b28b$var$isDisabled(this._element) || this._isShown()) return;\n        const relatedTarget = {\n            relatedTarget: this._element\n        };\n        const showEvent = $91ca15859685b28b$var$EventHandler.trigger(this._element, $91ca15859685b28b$var$EVENT_SHOW$5, relatedTarget);\n        if (showEvent.defaultPrevented) return;\n        this._createPopper();\n        // If this is a touch-enabled device we add extra\n        // empty mouseover listeners to the body's immediate children;\n        // only needed because of broken event delegation on iOS\n        // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n        if ('ontouchstart' in document.documentElement && !this._parent.closest($91ca15859685b28b$var$SELECTOR_NAVBAR_NAV)) for (const element of [].concat(...document.body.children))$91ca15859685b28b$var$EventHandler.on(element, 'mouseover', $91ca15859685b28b$var$noop);\n        this._element.focus();\n        this._element.setAttribute('aria-expanded', true);\n        this._menu.classList.add($91ca15859685b28b$var$CLASS_NAME_SHOW$6);\n        this._element.classList.add($91ca15859685b28b$var$CLASS_NAME_SHOW$6);\n        $91ca15859685b28b$var$EventHandler.trigger(this._element, $91ca15859685b28b$var$EVENT_SHOWN$5, relatedTarget);\n    }\n    hide() {\n        if ($91ca15859685b28b$var$isDisabled(this._element) || !this._isShown()) return;\n        const relatedTarget = {\n            relatedTarget: this._element\n        };\n        this._completeHide(relatedTarget);\n    }\n    dispose() {\n        if (this._popper) this._popper.destroy();\n        super.dispose();\n    }\n    update() {\n        this._inNavbar = this._detectNavbar();\n        if (this._popper) this._popper.update();\n    }\n    // Private\n    _completeHide(relatedTarget) {\n        const hideEvent = $91ca15859685b28b$var$EventHandler.trigger(this._element, $91ca15859685b28b$var$EVENT_HIDE$5, relatedTarget);\n        if (hideEvent.defaultPrevented) return;\n        // If this is a touch-enabled device we remove the extra\n        // empty mouseover listeners we added for iOS support\n        if ('ontouchstart' in document.documentElement) for (const element of [].concat(...document.body.children))$91ca15859685b28b$var$EventHandler.off(element, 'mouseover', $91ca15859685b28b$var$noop);\n        if (this._popper) this._popper.destroy();\n        this._menu.classList.remove($91ca15859685b28b$var$CLASS_NAME_SHOW$6);\n        this._element.classList.remove($91ca15859685b28b$var$CLASS_NAME_SHOW$6);\n        this._element.setAttribute('aria-expanded', 'false');\n        $91ca15859685b28b$var$Manipulator.removeDataAttribute(this._menu, 'popper');\n        $91ca15859685b28b$var$EventHandler.trigger(this._element, $91ca15859685b28b$var$EVENT_HIDDEN$5, relatedTarget);\n        // Explicitly return focus to the trigger element\n        this._element.focus();\n    }\n    _getConfig(config) {\n        config = super._getConfig(config);\n        if (typeof config.reference === 'object' && !$91ca15859685b28b$var$isElement(config.reference) && typeof config.reference.getBoundingClientRect !== 'function') // Popper virtual elements require a getBoundingClientRect method\n        throw new TypeError(`${$91ca15859685b28b$var$NAME$a.toUpperCase()}: Option \"reference\" provided type \"object\" without a required \"getBoundingClientRect\" method.`);\n        return config;\n    }\n    _createPopper() {\n        if (typeof $d37552697cc5ea39$exports === 'undefined') throw new TypeError('Bootstrap\\'s dropdowns require Popper (https://popper.js.org/docs/v2/)');\n        let referenceElement = this._element;\n        if (this._config.reference === 'parent') referenceElement = this._parent;\n        else if ($91ca15859685b28b$var$isElement(this._config.reference)) referenceElement = $91ca15859685b28b$var$getElement(this._config.reference);\n        else if (typeof this._config.reference === 'object') referenceElement = this._config.reference;\n        const popperConfig = this._getPopperConfig();\n        this._popper = $d37552697cc5ea39$exports.createPopper(referenceElement, this._menu, popperConfig);\n    }\n    _isShown() {\n        return this._menu.classList.contains($91ca15859685b28b$var$CLASS_NAME_SHOW$6);\n    }\n    _getPlacement() {\n        const parentDropdown = this._parent;\n        if (parentDropdown.classList.contains($91ca15859685b28b$var$CLASS_NAME_DROPEND)) return $91ca15859685b28b$var$PLACEMENT_RIGHT;\n        if (parentDropdown.classList.contains($91ca15859685b28b$var$CLASS_NAME_DROPSTART)) return $91ca15859685b28b$var$PLACEMENT_LEFT;\n        if (parentDropdown.classList.contains($91ca15859685b28b$var$CLASS_NAME_DROPUP_CENTER)) return $91ca15859685b28b$var$PLACEMENT_TOPCENTER;\n        if (parentDropdown.classList.contains($91ca15859685b28b$var$CLASS_NAME_DROPDOWN_CENTER)) return $91ca15859685b28b$var$PLACEMENT_BOTTOMCENTER;\n        // We need to trim the value because custom properties can also include spaces\n        const isEnd = getComputedStyle(this._menu).getPropertyValue('--bs-position').trim() === 'end';\n        if (parentDropdown.classList.contains($91ca15859685b28b$var$CLASS_NAME_DROPUP)) return isEnd ? $91ca15859685b28b$var$PLACEMENT_TOPEND : $91ca15859685b28b$var$PLACEMENT_TOP;\n        return isEnd ? $91ca15859685b28b$var$PLACEMENT_BOTTOMEND : $91ca15859685b28b$var$PLACEMENT_BOTTOM;\n    }\n    _detectNavbar() {\n        return this._element.closest($91ca15859685b28b$var$SELECTOR_NAVBAR) !== null;\n    }\n    _getOffset() {\n        const { offset: offset } = this._config;\n        if (typeof offset === 'string') return offset.split(',').map((value)=>Number.parseInt(value, 10));\n        if (typeof offset === 'function') return (popperData)=>offset(popperData, this._element);\n        return offset;\n    }\n    _getPopperConfig() {\n        const defaultBsPopperConfig = {\n            placement: this._getPlacement(),\n            modifiers: [\n                {\n                    name: 'preventOverflow',\n                    options: {\n                        boundary: this._config.boundary\n                    }\n                },\n                {\n                    name: 'offset',\n                    options: {\n                        offset: this._getOffset()\n                    }\n                }\n            ]\n        };\n        // Disable Popper if we have a static display or Dropdown is in Navbar\n        if (this._inNavbar || this._config.display === 'static') {\n            $91ca15859685b28b$var$Manipulator.setDataAttribute(this._menu, 'popper', 'static'); // TODO: v6 remove\n            defaultBsPopperConfig.modifiers = [\n                {\n                    name: 'applyStyles',\n                    enabled: false\n                }\n            ];\n        }\n        return {\n            ...defaultBsPopperConfig,\n            ...$91ca15859685b28b$var$execute(this._config.popperConfig, [\n                undefined,\n                defaultBsPopperConfig\n            ])\n        };\n    }\n    _selectMenuItem({ key: key, target: target }) {\n        const items = $91ca15859685b28b$var$SelectorEngine.find($91ca15859685b28b$var$SELECTOR_VISIBLE_ITEMS, this._menu).filter((element)=>$91ca15859685b28b$var$isVisible(element));\n        if (!items.length) return;\n        // if target isn't included in items (e.g. when expanding the dropdown)\n        // allow cycling to get the last item in case key equals ARROW_UP_KEY\n        $91ca15859685b28b$var$getNextActiveElement(items, target, key === $91ca15859685b28b$var$ARROW_DOWN_KEY$1, !items.includes(target)).focus();\n    }\n    // Static\n    static jQueryInterface(config) {\n        return this.each(function() {\n            const data = $91ca15859685b28b$export$931cbfb6bfb85fc.getOrCreateInstance(this, config);\n            if (typeof config !== 'string') return;\n            if (typeof data[config] === 'undefined') throw new TypeError(`No method named \"${config}\"`);\n            data[config]();\n        });\n    }\n    static clearMenus(event) {\n        if (event.button === $91ca15859685b28b$var$RIGHT_MOUSE_BUTTON || event.type === 'keyup' && event.key !== $91ca15859685b28b$var$TAB_KEY$1) return;\n        const openToggles = $91ca15859685b28b$var$SelectorEngine.find($91ca15859685b28b$var$SELECTOR_DATA_TOGGLE_SHOWN);\n        for (const toggle of openToggles){\n            const context = $91ca15859685b28b$export$931cbfb6bfb85fc.getInstance(toggle);\n            if (!context || context._config.autoClose === false) continue;\n            const composedPath = event.composedPath();\n            const isMenuTarget = composedPath.includes(context._menu);\n            if (composedPath.includes(context._element) || context._config.autoClose === 'inside' && !isMenuTarget || context._config.autoClose === 'outside' && isMenuTarget) continue;\n            // Tab navigation through the dropdown menu or events from contained inputs shouldn't close the menu\n            if (context._menu.contains(event.target) && (event.type === 'keyup' && event.key === $91ca15859685b28b$var$TAB_KEY$1 || /input|select|option|textarea|form/i.test(event.target.tagName))) continue;\n            const relatedTarget = {\n                relatedTarget: context._element\n            };\n            if (event.type === 'click') relatedTarget.clickEvent = event;\n            context._completeHide(relatedTarget);\n        }\n    }\n    static dataApiKeydownHandler(event) {\n        // If not an UP | DOWN | ESCAPE key => not a dropdown command\n        // If input/textarea && if key is other than ESCAPE => not a dropdown command\n        const isInput = /input|textarea/i.test(event.target.tagName);\n        const isEscapeEvent = event.key === $91ca15859685b28b$var$ESCAPE_KEY$2;\n        const isUpOrDownEvent = [\n            $91ca15859685b28b$var$ARROW_UP_KEY$1,\n            $91ca15859685b28b$var$ARROW_DOWN_KEY$1\n        ].includes(event.key);\n        if (!isUpOrDownEvent && !isEscapeEvent) return;\n        if (isInput && !isEscapeEvent) return;\n        event.preventDefault();\n        // TODO: v6 revert #37011 & change markup https://getbootstrap.com/docs/5.3/forms/input-group/\n        const getToggleButton = this.matches($91ca15859685b28b$var$SELECTOR_DATA_TOGGLE$3) ? this : $91ca15859685b28b$var$SelectorEngine.prev(this, $91ca15859685b28b$var$SELECTOR_DATA_TOGGLE$3)[0] || $91ca15859685b28b$var$SelectorEngine.next(this, $91ca15859685b28b$var$SELECTOR_DATA_TOGGLE$3)[0] || $91ca15859685b28b$var$SelectorEngine.findOne($91ca15859685b28b$var$SELECTOR_DATA_TOGGLE$3, event.delegateTarget.parentNode);\n        const instance = $91ca15859685b28b$export$931cbfb6bfb85fc.getOrCreateInstance(getToggleButton);\n        if (isUpOrDownEvent) {\n            event.stopPropagation();\n            instance.show();\n            instance._selectMenuItem(event);\n            return;\n        }\n        if (instance._isShown()) {\n            // else is escape and we check if it is shown\n            event.stopPropagation();\n            instance.hide();\n            getToggleButton.focus();\n        }\n    }\n}\n/**\n * Data API implementation\n */ $91ca15859685b28b$var$EventHandler.on(document, $91ca15859685b28b$var$EVENT_KEYDOWN_DATA_API, $91ca15859685b28b$var$SELECTOR_DATA_TOGGLE$3, $91ca15859685b28b$export$931cbfb6bfb85fc.dataApiKeydownHandler);\n$91ca15859685b28b$var$EventHandler.on(document, $91ca15859685b28b$var$EVENT_KEYDOWN_DATA_API, $91ca15859685b28b$var$SELECTOR_MENU, $91ca15859685b28b$export$931cbfb6bfb85fc.dataApiKeydownHandler);\n$91ca15859685b28b$var$EventHandler.on(document, $91ca15859685b28b$var$EVENT_CLICK_DATA_API$3, $91ca15859685b28b$export$931cbfb6bfb85fc.clearMenus);\n$91ca15859685b28b$var$EventHandler.on(document, $91ca15859685b28b$var$EVENT_KEYUP_DATA_API, $91ca15859685b28b$export$931cbfb6bfb85fc.clearMenus);\n$91ca15859685b28b$var$EventHandler.on(document, $91ca15859685b28b$var$EVENT_CLICK_DATA_API$3, $91ca15859685b28b$var$SELECTOR_DATA_TOGGLE$3, function(event) {\n    event.preventDefault();\n    $91ca15859685b28b$export$931cbfb6bfb85fc.getOrCreateInstance(this).toggle();\n});\n/**\n * jQuery\n */ $91ca15859685b28b$var$defineJQueryPlugin($91ca15859685b28b$export$931cbfb6bfb85fc);\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/backdrop.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */ /**\n * Constants\n */ const $91ca15859685b28b$var$NAME$9 = 'backdrop';\nconst $91ca15859685b28b$var$CLASS_NAME_FADE$4 = 'fade';\nconst $91ca15859685b28b$var$CLASS_NAME_SHOW$5 = 'show';\nconst $91ca15859685b28b$var$EVENT_MOUSEDOWN = `mousedown.bs.${$91ca15859685b28b$var$NAME$9}`;\nconst $91ca15859685b28b$var$Default$8 = {\n    className: 'modal-backdrop',\n    clickCallback: null,\n    isAnimated: false,\n    isVisible: true,\n    // if false, we use the backdrop helper without adding any element to the dom\n    rootElement: 'body' // give the choice to place backdrop under different elements\n};\nconst $91ca15859685b28b$var$DefaultType$8 = {\n    className: 'string',\n    clickCallback: '(function|null)',\n    isAnimated: 'boolean',\n    isVisible: 'boolean',\n    rootElement: '(element|string)'\n};\n/**\n * Class definition\n */ class $91ca15859685b28b$var$Backdrop extends $91ca15859685b28b$var$Config {\n    constructor(config){\n        super();\n        this._config = this._getConfig(config);\n        this._isAppended = false;\n        this._element = null;\n    }\n    // Getters\n    static get Default() {\n        return $91ca15859685b28b$var$Default$8;\n    }\n    static get DefaultType() {\n        return $91ca15859685b28b$var$DefaultType$8;\n    }\n    static get NAME() {\n        return $91ca15859685b28b$var$NAME$9;\n    }\n    // Public\n    show(callback) {\n        if (!this._config.isVisible) {\n            $91ca15859685b28b$var$execute(callback);\n            return;\n        }\n        this._append();\n        const element = this._getElement();\n        if (this._config.isAnimated) $91ca15859685b28b$var$reflow(element);\n        element.classList.add($91ca15859685b28b$var$CLASS_NAME_SHOW$5);\n        this._emulateAnimation(()=>{\n            $91ca15859685b28b$var$execute(callback);\n        });\n    }\n    hide(callback) {\n        if (!this._config.isVisible) {\n            $91ca15859685b28b$var$execute(callback);\n            return;\n        }\n        this._getElement().classList.remove($91ca15859685b28b$var$CLASS_NAME_SHOW$5);\n        this._emulateAnimation(()=>{\n            this.dispose();\n            $91ca15859685b28b$var$execute(callback);\n        });\n    }\n    dispose() {\n        if (!this._isAppended) return;\n        $91ca15859685b28b$var$EventHandler.off(this._element, $91ca15859685b28b$var$EVENT_MOUSEDOWN);\n        this._element.remove();\n        this._isAppended = false;\n    }\n    // Private\n    _getElement() {\n        if (!this._element) {\n            const backdrop = document.createElement('div');\n            backdrop.className = this._config.className;\n            if (this._config.isAnimated) backdrop.classList.add($91ca15859685b28b$var$CLASS_NAME_FADE$4);\n            this._element = backdrop;\n        }\n        return this._element;\n    }\n    _configAfterMerge(config) {\n        // use getElement() with the default \"body\" to get a fresh Element on each instantiation\n        config.rootElement = $91ca15859685b28b$var$getElement(config.rootElement);\n        return config;\n    }\n    _append() {\n        if (this._isAppended) return;\n        const element = this._getElement();\n        this._config.rootElement.append(element);\n        $91ca15859685b28b$var$EventHandler.on(element, $91ca15859685b28b$var$EVENT_MOUSEDOWN, ()=>{\n            $91ca15859685b28b$var$execute(this._config.clickCallback);\n        });\n        this._isAppended = true;\n    }\n    _emulateAnimation(callback) {\n        $91ca15859685b28b$var$executeAfterTransition(callback, this._getElement(), this._config.isAnimated);\n    }\n}\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/focustrap.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */ /**\n * Constants\n */ const $91ca15859685b28b$var$NAME$8 = 'focustrap';\nconst $91ca15859685b28b$var$DATA_KEY$5 = 'bs.focustrap';\nconst $91ca15859685b28b$var$EVENT_KEY$5 = `.${$91ca15859685b28b$var$DATA_KEY$5}`;\nconst $91ca15859685b28b$var$EVENT_FOCUSIN$2 = `focusin${$91ca15859685b28b$var$EVENT_KEY$5}`;\nconst $91ca15859685b28b$var$EVENT_KEYDOWN_TAB = `keydown.tab${$91ca15859685b28b$var$EVENT_KEY$5}`;\nconst $91ca15859685b28b$var$TAB_KEY = 'Tab';\nconst $91ca15859685b28b$var$TAB_NAV_FORWARD = 'forward';\nconst $91ca15859685b28b$var$TAB_NAV_BACKWARD = 'backward';\nconst $91ca15859685b28b$var$Default$7 = {\n    autofocus: true,\n    trapElement: null // The element to trap focus inside of\n};\nconst $91ca15859685b28b$var$DefaultType$7 = {\n    autofocus: 'boolean',\n    trapElement: 'element'\n};\n/**\n * Class definition\n */ class $91ca15859685b28b$var$FocusTrap extends $91ca15859685b28b$var$Config {\n    constructor(config){\n        super();\n        this._config = this._getConfig(config);\n        this._isActive = false;\n        this._lastTabNavDirection = null;\n    }\n    // Getters\n    static get Default() {\n        return $91ca15859685b28b$var$Default$7;\n    }\n    static get DefaultType() {\n        return $91ca15859685b28b$var$DefaultType$7;\n    }\n    static get NAME() {\n        return $91ca15859685b28b$var$NAME$8;\n    }\n    // Public\n    activate() {\n        if (this._isActive) return;\n        if (this._config.autofocus) this._config.trapElement.focus();\n        $91ca15859685b28b$var$EventHandler.off(document, $91ca15859685b28b$var$EVENT_KEY$5); // guard against infinite focus loop\n        $91ca15859685b28b$var$EventHandler.on(document, $91ca15859685b28b$var$EVENT_FOCUSIN$2, (event)=>this._handleFocusin(event));\n        $91ca15859685b28b$var$EventHandler.on(document, $91ca15859685b28b$var$EVENT_KEYDOWN_TAB, (event)=>this._handleKeydown(event));\n        this._isActive = true;\n    }\n    deactivate() {\n        if (!this._isActive) return;\n        this._isActive = false;\n        $91ca15859685b28b$var$EventHandler.off(document, $91ca15859685b28b$var$EVENT_KEY$5);\n    }\n    // Private\n    _handleFocusin(event) {\n        const { trapElement: trapElement } = this._config;\n        if (event.target === document || event.target === trapElement || trapElement.contains(event.target)) return;\n        const elements = $91ca15859685b28b$var$SelectorEngine.focusableChildren(trapElement);\n        if (elements.length === 0) trapElement.focus();\n        else if (this._lastTabNavDirection === $91ca15859685b28b$var$TAB_NAV_BACKWARD) elements[elements.length - 1].focus();\n        else elements[0].focus();\n    }\n    _handleKeydown(event) {\n        if (event.key !== $91ca15859685b28b$var$TAB_KEY) return;\n        this._lastTabNavDirection = event.shiftKey ? $91ca15859685b28b$var$TAB_NAV_BACKWARD : $91ca15859685b28b$var$TAB_NAV_FORWARD;\n    }\n}\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/scrollBar.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */ /**\n * Constants\n */ const $91ca15859685b28b$var$SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top';\nconst $91ca15859685b28b$var$SELECTOR_STICKY_CONTENT = '.sticky-top';\nconst $91ca15859685b28b$var$PROPERTY_PADDING = 'padding-right';\nconst $91ca15859685b28b$var$PROPERTY_MARGIN = 'margin-right';\n/**\n * Class definition\n */ class $91ca15859685b28b$var$ScrollBarHelper {\n    constructor(){\n        this._element = document.body;\n    }\n    // Public\n    getWidth() {\n        // https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth#usage_notes\n        const documentWidth = document.documentElement.clientWidth;\n        return Math.abs(window.innerWidth - documentWidth);\n    }\n    hide() {\n        const width = this.getWidth();\n        this._disableOverFlow();\n        // give padding to element to balance the hidden scrollbar width\n        this._setElementAttributes(this._element, $91ca15859685b28b$var$PROPERTY_PADDING, (calculatedValue)=>calculatedValue + width);\n        // trick: We adjust positive paddingRight and negative marginRight to sticky-top elements to keep showing fullwidth\n        this._setElementAttributes($91ca15859685b28b$var$SELECTOR_FIXED_CONTENT, $91ca15859685b28b$var$PROPERTY_PADDING, (calculatedValue)=>calculatedValue + width);\n        this._setElementAttributes($91ca15859685b28b$var$SELECTOR_STICKY_CONTENT, $91ca15859685b28b$var$PROPERTY_MARGIN, (calculatedValue)=>calculatedValue - width);\n    }\n    reset() {\n        this._resetElementAttributes(this._element, 'overflow');\n        this._resetElementAttributes(this._element, $91ca15859685b28b$var$PROPERTY_PADDING);\n        this._resetElementAttributes($91ca15859685b28b$var$SELECTOR_FIXED_CONTENT, $91ca15859685b28b$var$PROPERTY_PADDING);\n        this._resetElementAttributes($91ca15859685b28b$var$SELECTOR_STICKY_CONTENT, $91ca15859685b28b$var$PROPERTY_MARGIN);\n    }\n    isOverflowing() {\n        return this.getWidth() > 0;\n    }\n    // Private\n    _disableOverFlow() {\n        this._saveInitialAttribute(this._element, 'overflow');\n        this._element.style.overflow = 'hidden';\n    }\n    _setElementAttributes(selector, styleProperty, callback) {\n        const scrollbarWidth = this.getWidth();\n        const manipulationCallBack = (element)=>{\n            if (element !== this._element && window.innerWidth > element.clientWidth + scrollbarWidth) return;\n            this._saveInitialAttribute(element, styleProperty);\n            const calculatedValue = window.getComputedStyle(element).getPropertyValue(styleProperty);\n            element.style.setProperty(styleProperty, `${callback(Number.parseFloat(calculatedValue))}px`);\n        };\n        this._applyManipulationCallback(selector, manipulationCallBack);\n    }\n    _saveInitialAttribute(element, styleProperty) {\n        const actualValue = element.style.getPropertyValue(styleProperty);\n        if (actualValue) $91ca15859685b28b$var$Manipulator.setDataAttribute(element, styleProperty, actualValue);\n    }\n    _resetElementAttributes(selector, styleProperty) {\n        const manipulationCallBack = (element)=>{\n            const value = $91ca15859685b28b$var$Manipulator.getDataAttribute(element, styleProperty);\n            // We only want to remove the property if the value is `null`; the value can also be zero\n            if (value === null) {\n                element.style.removeProperty(styleProperty);\n                return;\n            }\n            $91ca15859685b28b$var$Manipulator.removeDataAttribute(element, styleProperty);\n            element.style.setProperty(styleProperty, value);\n        };\n        this._applyManipulationCallback(selector, manipulationCallBack);\n    }\n    _applyManipulationCallback(selector, callBack) {\n        if ($91ca15859685b28b$var$isElement(selector)) {\n            callBack(selector);\n            return;\n        }\n        for (const sel of $91ca15859685b28b$var$SelectorEngine.find(selector, this._element))callBack(sel);\n    }\n}\n/**\n * --------------------------------------------------------------------------\n * Bootstrap modal.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */ /**\n * Constants\n */ const $91ca15859685b28b$var$NAME$7 = 'modal';\nconst $91ca15859685b28b$var$DATA_KEY$4 = 'bs.modal';\nconst $91ca15859685b28b$var$EVENT_KEY$4 = `.${$91ca15859685b28b$var$DATA_KEY$4}`;\nconst $91ca15859685b28b$var$DATA_API_KEY$2 = '.data-api';\nconst $91ca15859685b28b$var$ESCAPE_KEY$1 = 'Escape';\nconst $91ca15859685b28b$var$EVENT_HIDE$4 = `hide${$91ca15859685b28b$var$EVENT_KEY$4}`;\nconst $91ca15859685b28b$var$EVENT_HIDE_PREVENTED$1 = `hidePrevented${$91ca15859685b28b$var$EVENT_KEY$4}`;\nconst $91ca15859685b28b$var$EVENT_HIDDEN$4 = `hidden${$91ca15859685b28b$var$EVENT_KEY$4}`;\nconst $91ca15859685b28b$var$EVENT_SHOW$4 = `show${$91ca15859685b28b$var$EVENT_KEY$4}`;\nconst $91ca15859685b28b$var$EVENT_SHOWN$4 = `shown${$91ca15859685b28b$var$EVENT_KEY$4}`;\nconst $91ca15859685b28b$var$EVENT_RESIZE$1 = `resize${$91ca15859685b28b$var$EVENT_KEY$4}`;\nconst $91ca15859685b28b$var$EVENT_CLICK_DISMISS = `click.dismiss${$91ca15859685b28b$var$EVENT_KEY$4}`;\nconst $91ca15859685b28b$var$EVENT_MOUSEDOWN_DISMISS = `mousedown.dismiss${$91ca15859685b28b$var$EVENT_KEY$4}`;\nconst $91ca15859685b28b$var$EVENT_KEYDOWN_DISMISS$1 = `keydown.dismiss${$91ca15859685b28b$var$EVENT_KEY$4}`;\nconst $91ca15859685b28b$var$EVENT_CLICK_DATA_API$2 = `click${$91ca15859685b28b$var$EVENT_KEY$4}${$91ca15859685b28b$var$DATA_API_KEY$2}`;\nconst $91ca15859685b28b$var$CLASS_NAME_OPEN = 'modal-open';\nconst $91ca15859685b28b$var$CLASS_NAME_FADE$3 = 'fade';\nconst $91ca15859685b28b$var$CLASS_NAME_SHOW$4 = 'show';\nconst $91ca15859685b28b$var$CLASS_NAME_STATIC = 'modal-static';\nconst $91ca15859685b28b$var$OPEN_SELECTOR$1 = '.modal.show';\nconst $91ca15859685b28b$var$SELECTOR_DIALOG = '.modal-dialog';\nconst $91ca15859685b28b$var$SELECTOR_MODAL_BODY = '.modal-body';\nconst $91ca15859685b28b$var$SELECTOR_DATA_TOGGLE$2 = '[data-bs-toggle=\"modal\"]';\nconst $91ca15859685b28b$var$Default$6 = {\n    backdrop: true,\n    focus: true,\n    keyboard: true\n};\nconst $91ca15859685b28b$var$DefaultType$6 = {\n    backdrop: '(boolean|string)',\n    focus: 'boolean',\n    keyboard: 'boolean'\n};\n/**\n * Class definition\n */ class $91ca15859685b28b$export$2b77a92f1a5ad772 extends $91ca15859685b28b$var$BaseComponent {\n    constructor(element, config){\n        super(element, config);\n        this._dialog = $91ca15859685b28b$var$SelectorEngine.findOne($91ca15859685b28b$var$SELECTOR_DIALOG, this._element);\n        this._backdrop = this._initializeBackDrop();\n        this._focustrap = this._initializeFocusTrap();\n        this._isShown = false;\n        this._isTransitioning = false;\n        this._scrollBar = new $91ca15859685b28b$var$ScrollBarHelper();\n        this._addEventListeners();\n    }\n    // Getters\n    static get Default() {\n        return $91ca15859685b28b$var$Default$6;\n    }\n    static get DefaultType() {\n        return $91ca15859685b28b$var$DefaultType$6;\n    }\n    static get NAME() {\n        return $91ca15859685b28b$var$NAME$7;\n    }\n    // Public\n    toggle(relatedTarget) {\n        return this._isShown ? this.hide() : this.show(relatedTarget);\n    }\n    show(relatedTarget) {\n        if (this._isShown || this._isTransitioning) return;\n        const showEvent = $91ca15859685b28b$var$EventHandler.trigger(this._element, $91ca15859685b28b$var$EVENT_SHOW$4, {\n            relatedTarget: relatedTarget\n        });\n        if (showEvent.defaultPrevented) return;\n        this._isShown = true;\n        this._isTransitioning = true;\n        this._scrollBar.hide();\n        document.body.classList.add($91ca15859685b28b$var$CLASS_NAME_OPEN);\n        this._adjustDialog();\n        this._backdrop.show(()=>this._showElement(relatedTarget));\n    }\n    hide() {\n        if (!this._isShown || this._isTransitioning) return;\n        const hideEvent = $91ca15859685b28b$var$EventHandler.trigger(this._element, $91ca15859685b28b$var$EVENT_HIDE$4);\n        if (hideEvent.defaultPrevented) return;\n        this._isShown = false;\n        this._isTransitioning = true;\n        this._focustrap.deactivate();\n        this._element.classList.remove($91ca15859685b28b$var$CLASS_NAME_SHOW$4);\n        this._queueCallback(()=>this._hideModal(), this._element, this._isAnimated());\n    }\n    dispose() {\n        $91ca15859685b28b$var$EventHandler.off(window, $91ca15859685b28b$var$EVENT_KEY$4);\n        $91ca15859685b28b$var$EventHandler.off(this._dialog, $91ca15859685b28b$var$EVENT_KEY$4);\n        this._backdrop.dispose();\n        this._focustrap.deactivate();\n        super.dispose();\n    }\n    handleUpdate() {\n        this._adjustDialog();\n    }\n    // Private\n    _initializeBackDrop() {\n        return new $91ca15859685b28b$var$Backdrop({\n            isVisible: Boolean(this._config.backdrop),\n            // 'static' option will be translated to true, and booleans will keep their value,\n            isAnimated: this._isAnimated()\n        });\n    }\n    _initializeFocusTrap() {\n        return new $91ca15859685b28b$var$FocusTrap({\n            trapElement: this._element\n        });\n    }\n    _showElement(relatedTarget) {\n        // try to append dynamic modal\n        if (!document.body.contains(this._element)) document.body.append(this._element);\n        this._element.style.display = 'block';\n        this._element.removeAttribute('aria-hidden');\n        this._element.setAttribute('aria-modal', true);\n        this._element.setAttribute('role', 'dialog');\n        this._element.scrollTop = 0;\n        const modalBody = $91ca15859685b28b$var$SelectorEngine.findOne($91ca15859685b28b$var$SELECTOR_MODAL_BODY, this._dialog);\n        if (modalBody) modalBody.scrollTop = 0;\n        $91ca15859685b28b$var$reflow(this._element);\n        this._element.classList.add($91ca15859685b28b$var$CLASS_NAME_SHOW$4);\n        const transitionComplete = ()=>{\n            if (this._config.focus) this._focustrap.activate();\n            this._isTransitioning = false;\n            $91ca15859685b28b$var$EventHandler.trigger(this._element, $91ca15859685b28b$var$EVENT_SHOWN$4, {\n                relatedTarget: relatedTarget\n            });\n        };\n        this._queueCallback(transitionComplete, this._dialog, this._isAnimated());\n    }\n    _addEventListeners() {\n        $91ca15859685b28b$var$EventHandler.on(this._element, $91ca15859685b28b$var$EVENT_KEYDOWN_DISMISS$1, (event)=>{\n            if (event.key !== $91ca15859685b28b$var$ESCAPE_KEY$1) return;\n            if (this._config.keyboard) {\n                this.hide();\n                return;\n            }\n            this._triggerBackdropTransition();\n        });\n        $91ca15859685b28b$var$EventHandler.on(window, $91ca15859685b28b$var$EVENT_RESIZE$1, ()=>{\n            if (this._isShown && !this._isTransitioning) this._adjustDialog();\n        });\n        $91ca15859685b28b$var$EventHandler.on(this._element, $91ca15859685b28b$var$EVENT_MOUSEDOWN_DISMISS, (event)=>{\n            // a bad trick to segregate clicks that may start inside dialog but end outside, and avoid listen to scrollbar clicks\n            $91ca15859685b28b$var$EventHandler.one(this._element, $91ca15859685b28b$var$EVENT_CLICK_DISMISS, (event2)=>{\n                if (this._element !== event.target || this._element !== event2.target) return;\n                if (this._config.backdrop === 'static') {\n                    this._triggerBackdropTransition();\n                    return;\n                }\n                if (this._config.backdrop) this.hide();\n            });\n        });\n    }\n    _hideModal() {\n        this._element.style.display = 'none';\n        this._element.setAttribute('aria-hidden', true);\n        this._element.removeAttribute('aria-modal');\n        this._element.removeAttribute('role');\n        this._isTransitioning = false;\n        this._backdrop.hide(()=>{\n            document.body.classList.remove($91ca15859685b28b$var$CLASS_NAME_OPEN);\n            this._resetAdjustments();\n            this._scrollBar.reset();\n            $91ca15859685b28b$var$EventHandler.trigger(this._element, $91ca15859685b28b$var$EVENT_HIDDEN$4);\n        });\n    }\n    _isAnimated() {\n        return this._element.classList.contains($91ca15859685b28b$var$CLASS_NAME_FADE$3);\n    }\n    _triggerBackdropTransition() {\n        const hideEvent = $91ca15859685b28b$var$EventHandler.trigger(this._element, $91ca15859685b28b$var$EVENT_HIDE_PREVENTED$1);\n        if (hideEvent.defaultPrevented) return;\n        const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;\n        const initialOverflowY = this._element.style.overflowY;\n        // return if the following background transition hasn't yet completed\n        if (initialOverflowY === 'hidden' || this._element.classList.contains($91ca15859685b28b$var$CLASS_NAME_STATIC)) return;\n        if (!isModalOverflowing) this._element.style.overflowY = 'hidden';\n        this._element.classList.add($91ca15859685b28b$var$CLASS_NAME_STATIC);\n        this._queueCallback(()=>{\n            this._element.classList.remove($91ca15859685b28b$var$CLASS_NAME_STATIC);\n            this._queueCallback(()=>{\n                this._element.style.overflowY = initialOverflowY;\n            }, this._dialog);\n        }, this._dialog);\n        this._element.focus();\n    }\n    /**\n   * The following methods are used to handle overflowing modals\n   */ _adjustDialog() {\n        const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;\n        const scrollbarWidth = this._scrollBar.getWidth();\n        const isBodyOverflowing = scrollbarWidth > 0;\n        if (isBodyOverflowing && !isModalOverflowing) {\n            const property = $91ca15859685b28b$var$isRTL() ? 'paddingLeft' : 'paddingRight';\n            this._element.style[property] = `${scrollbarWidth}px`;\n        }\n        if (!isBodyOverflowing && isModalOverflowing) {\n            const property = $91ca15859685b28b$var$isRTL() ? 'paddingRight' : 'paddingLeft';\n            this._element.style[property] = `${scrollbarWidth}px`;\n        }\n    }\n    _resetAdjustments() {\n        this._element.style.paddingLeft = '';\n        this._element.style.paddingRight = '';\n    }\n    // Static\n    static jQueryInterface(config, relatedTarget) {\n        return this.each(function() {\n            const data = $91ca15859685b28b$export$2b77a92f1a5ad772.getOrCreateInstance(this, config);\n            if (typeof config !== 'string') return;\n            if (typeof data[config] === 'undefined') throw new TypeError(`No method named \"${config}\"`);\n            data[config](relatedTarget);\n        });\n    }\n}\n/**\n * Data API implementation\n */ $91ca15859685b28b$var$EventHandler.on(document, $91ca15859685b28b$var$EVENT_CLICK_DATA_API$2, $91ca15859685b28b$var$SELECTOR_DATA_TOGGLE$2, function(event) {\n    const target = $91ca15859685b28b$var$SelectorEngine.getElementFromSelector(this);\n    if ([\n        'A',\n        'AREA'\n    ].includes(this.tagName)) event.preventDefault();\n    $91ca15859685b28b$var$EventHandler.one(target, $91ca15859685b28b$var$EVENT_SHOW$4, (showEvent)=>{\n        if (showEvent.defaultPrevented) // only register focus restorer if modal will actually get shown\n        return;\n        $91ca15859685b28b$var$EventHandler.one(target, $91ca15859685b28b$var$EVENT_HIDDEN$4, ()=>{\n            if ($91ca15859685b28b$var$isVisible(this)) this.focus();\n        });\n    });\n    // avoid conflict when clicking modal toggler while another one is open\n    const alreadyOpen = $91ca15859685b28b$var$SelectorEngine.findOne($91ca15859685b28b$var$OPEN_SELECTOR$1);\n    if (alreadyOpen) $91ca15859685b28b$export$2b77a92f1a5ad772.getInstance(alreadyOpen).hide();\n    const data = $91ca15859685b28b$export$2b77a92f1a5ad772.getOrCreateInstance(target);\n    data.toggle(this);\n});\n$91ca15859685b28b$var$enableDismissTrigger($91ca15859685b28b$export$2b77a92f1a5ad772);\n/**\n * jQuery\n */ $91ca15859685b28b$var$defineJQueryPlugin($91ca15859685b28b$export$2b77a92f1a5ad772);\n/**\n * --------------------------------------------------------------------------\n * Bootstrap offcanvas.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */ /**\n * Constants\n */ const $91ca15859685b28b$var$NAME$6 = 'offcanvas';\nconst $91ca15859685b28b$var$DATA_KEY$3 = 'bs.offcanvas';\nconst $91ca15859685b28b$var$EVENT_KEY$3 = `.${$91ca15859685b28b$var$DATA_KEY$3}`;\nconst $91ca15859685b28b$var$DATA_API_KEY$1 = '.data-api';\nconst $91ca15859685b28b$var$EVENT_LOAD_DATA_API$2 = `load${$91ca15859685b28b$var$EVENT_KEY$3}${$91ca15859685b28b$var$DATA_API_KEY$1}`;\nconst $91ca15859685b28b$var$ESCAPE_KEY = 'Escape';\nconst $91ca15859685b28b$var$CLASS_NAME_SHOW$3 = 'show';\nconst $91ca15859685b28b$var$CLASS_NAME_SHOWING$1 = 'showing';\nconst $91ca15859685b28b$var$CLASS_NAME_HIDING = 'hiding';\nconst $91ca15859685b28b$var$CLASS_NAME_BACKDROP = 'offcanvas-backdrop';\nconst $91ca15859685b28b$var$OPEN_SELECTOR = '.offcanvas.show';\nconst $91ca15859685b28b$var$EVENT_SHOW$3 = `show${$91ca15859685b28b$var$EVENT_KEY$3}`;\nconst $91ca15859685b28b$var$EVENT_SHOWN$3 = `shown${$91ca15859685b28b$var$EVENT_KEY$3}`;\nconst $91ca15859685b28b$var$EVENT_HIDE$3 = `hide${$91ca15859685b28b$var$EVENT_KEY$3}`;\nconst $91ca15859685b28b$var$EVENT_HIDE_PREVENTED = `hidePrevented${$91ca15859685b28b$var$EVENT_KEY$3}`;\nconst $91ca15859685b28b$var$EVENT_HIDDEN$3 = `hidden${$91ca15859685b28b$var$EVENT_KEY$3}`;\nconst $91ca15859685b28b$var$EVENT_RESIZE = `resize${$91ca15859685b28b$var$EVENT_KEY$3}`;\nconst $91ca15859685b28b$var$EVENT_CLICK_DATA_API$1 = `click${$91ca15859685b28b$var$EVENT_KEY$3}${$91ca15859685b28b$var$DATA_API_KEY$1}`;\nconst $91ca15859685b28b$var$EVENT_KEYDOWN_DISMISS = `keydown.dismiss${$91ca15859685b28b$var$EVENT_KEY$3}`;\nconst $91ca15859685b28b$var$SELECTOR_DATA_TOGGLE$1 = '[data-bs-toggle=\"offcanvas\"]';\nconst $91ca15859685b28b$var$Default$5 = {\n    backdrop: true,\n    keyboard: true,\n    scroll: false\n};\nconst $91ca15859685b28b$var$DefaultType$5 = {\n    backdrop: '(boolean|string)',\n    keyboard: 'boolean',\n    scroll: 'boolean'\n};\n/**\n * Class definition\n */ class $91ca15859685b28b$export$591ca0244c9dfcd4 extends $91ca15859685b28b$var$BaseComponent {\n    constructor(element, config){\n        super(element, config);\n        this._isShown = false;\n        this._backdrop = this._initializeBackDrop();\n        this._focustrap = this._initializeFocusTrap();\n        this._addEventListeners();\n    }\n    // Getters\n    static get Default() {\n        return $91ca15859685b28b$var$Default$5;\n    }\n    static get DefaultType() {\n        return $91ca15859685b28b$var$DefaultType$5;\n    }\n    static get NAME() {\n        return $91ca15859685b28b$var$NAME$6;\n    }\n    // Public\n    toggle(relatedTarget) {\n        return this._isShown ? this.hide() : this.show(relatedTarget);\n    }\n    show(relatedTarget) {\n        if (this._isShown) return;\n        const showEvent = $91ca15859685b28b$var$EventHandler.trigger(this._element, $91ca15859685b28b$var$EVENT_SHOW$3, {\n            relatedTarget: relatedTarget\n        });\n        if (showEvent.defaultPrevented) return;\n        this._isShown = true;\n        this._backdrop.show();\n        if (!this._config.scroll) new $91ca15859685b28b$var$ScrollBarHelper().hide();\n        this._element.setAttribute('aria-modal', true);\n        this._element.setAttribute('role', 'dialog');\n        this._element.classList.add($91ca15859685b28b$var$CLASS_NAME_SHOWING$1);\n        const completeCallBack = ()=>{\n            if (!this._config.scroll || this._config.backdrop) this._focustrap.activate();\n            this._element.classList.add($91ca15859685b28b$var$CLASS_NAME_SHOW$3);\n            this._element.classList.remove($91ca15859685b28b$var$CLASS_NAME_SHOWING$1);\n            $91ca15859685b28b$var$EventHandler.trigger(this._element, $91ca15859685b28b$var$EVENT_SHOWN$3, {\n                relatedTarget: relatedTarget\n            });\n        };\n        this._queueCallback(completeCallBack, this._element, true);\n    }\n    hide() {\n        if (!this._isShown) return;\n        const hideEvent = $91ca15859685b28b$var$EventHandler.trigger(this._element, $91ca15859685b28b$var$EVENT_HIDE$3);\n        if (hideEvent.defaultPrevented) return;\n        this._focustrap.deactivate();\n        this._element.blur();\n        this._isShown = false;\n        this._element.classList.add($91ca15859685b28b$var$CLASS_NAME_HIDING);\n        this._backdrop.hide();\n        const completeCallback = ()=>{\n            this._element.classList.remove($91ca15859685b28b$var$CLASS_NAME_SHOW$3, $91ca15859685b28b$var$CLASS_NAME_HIDING);\n            this._element.removeAttribute('aria-modal');\n            this._element.removeAttribute('role');\n            if (!this._config.scroll) new $91ca15859685b28b$var$ScrollBarHelper().reset();\n            $91ca15859685b28b$var$EventHandler.trigger(this._element, $91ca15859685b28b$var$EVENT_HIDDEN$3);\n        };\n        this._queueCallback(completeCallback, this._element, true);\n    }\n    dispose() {\n        this._backdrop.dispose();\n        this._focustrap.deactivate();\n        super.dispose();\n    }\n    // Private\n    _initializeBackDrop() {\n        const clickCallback = ()=>{\n            if (this._config.backdrop === 'static') {\n                $91ca15859685b28b$var$EventHandler.trigger(this._element, $91ca15859685b28b$var$EVENT_HIDE_PREVENTED);\n                return;\n            }\n            this.hide();\n        };\n        // 'static' option will be translated to true, and booleans will keep their value\n        const isVisible = Boolean(this._config.backdrop);\n        return new $91ca15859685b28b$var$Backdrop({\n            className: $91ca15859685b28b$var$CLASS_NAME_BACKDROP,\n            isVisible: isVisible,\n            isAnimated: true,\n            rootElement: this._element.parentNode,\n            clickCallback: isVisible ? clickCallback : null\n        });\n    }\n    _initializeFocusTrap() {\n        return new $91ca15859685b28b$var$FocusTrap({\n            trapElement: this._element\n        });\n    }\n    _addEventListeners() {\n        $91ca15859685b28b$var$EventHandler.on(this._element, $91ca15859685b28b$var$EVENT_KEYDOWN_DISMISS, (event)=>{\n            if (event.key !== $91ca15859685b28b$var$ESCAPE_KEY) return;\n            if (this._config.keyboard) {\n                this.hide();\n                return;\n            }\n            $91ca15859685b28b$var$EventHandler.trigger(this._element, $91ca15859685b28b$var$EVENT_HIDE_PREVENTED);\n        });\n    }\n    // Static\n    static jQueryInterface(config) {\n        return this.each(function() {\n            const data = $91ca15859685b28b$export$591ca0244c9dfcd4.getOrCreateInstance(this, config);\n            if (typeof config !== 'string') return;\n            if (data[config] === undefined || config.startsWith('_') || config === 'constructor') throw new TypeError(`No method named \"${config}\"`);\n            data[config](this);\n        });\n    }\n}\n/**\n * Data API implementation\n */ $91ca15859685b28b$var$EventHandler.on(document, $91ca15859685b28b$var$EVENT_CLICK_DATA_API$1, $91ca15859685b28b$var$SELECTOR_DATA_TOGGLE$1, function(event) {\n    const target = $91ca15859685b28b$var$SelectorEngine.getElementFromSelector(this);\n    if ([\n        'A',\n        'AREA'\n    ].includes(this.tagName)) event.preventDefault();\n    if ($91ca15859685b28b$var$isDisabled(this)) return;\n    $91ca15859685b28b$var$EventHandler.one(target, $91ca15859685b28b$var$EVENT_HIDDEN$3, ()=>{\n        // focus on trigger when it is closed\n        if ($91ca15859685b28b$var$isVisible(this)) this.focus();\n    });\n    // avoid conflict when clicking a toggler of an offcanvas, while another is open\n    const alreadyOpen = $91ca15859685b28b$var$SelectorEngine.findOne($91ca15859685b28b$var$OPEN_SELECTOR);\n    if (alreadyOpen && alreadyOpen !== target) $91ca15859685b28b$export$591ca0244c9dfcd4.getInstance(alreadyOpen).hide();\n    const data = $91ca15859685b28b$export$591ca0244c9dfcd4.getOrCreateInstance(target);\n    data.toggle(this);\n});\n$91ca15859685b28b$var$EventHandler.on(window, $91ca15859685b28b$var$EVENT_LOAD_DATA_API$2, ()=>{\n    for (const selector of $91ca15859685b28b$var$SelectorEngine.find($91ca15859685b28b$var$OPEN_SELECTOR))$91ca15859685b28b$export$591ca0244c9dfcd4.getOrCreateInstance(selector).show();\n});\n$91ca15859685b28b$var$EventHandler.on(window, $91ca15859685b28b$var$EVENT_RESIZE, ()=>{\n    for (const element of $91ca15859685b28b$var$SelectorEngine.find('[aria-modal][class*=show][class*=offcanvas-]'))if (getComputedStyle(element).position !== 'fixed') $91ca15859685b28b$export$591ca0244c9dfcd4.getOrCreateInstance(element).hide();\n});\n$91ca15859685b28b$var$enableDismissTrigger($91ca15859685b28b$export$591ca0244c9dfcd4);\n/**\n * jQuery\n */ $91ca15859685b28b$var$defineJQueryPlugin($91ca15859685b28b$export$591ca0244c9dfcd4);\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/sanitizer.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */ // js-docs-start allow-list\nconst $91ca15859685b28b$var$ARIA_ATTRIBUTE_PATTERN = /^aria-[\\w-]*$/i;\nconst $91ca15859685b28b$var$DefaultAllowlist = {\n    // Global attributes allowed on any supplied element below.\n    '*': [\n        'class',\n        'dir',\n        'id',\n        'lang',\n        'role',\n        $91ca15859685b28b$var$ARIA_ATTRIBUTE_PATTERN\n    ],\n    a: [\n        'target',\n        'href',\n        'title',\n        'rel'\n    ],\n    area: [],\n    b: [],\n    br: [],\n    col: [],\n    code: [],\n    dd: [],\n    div: [],\n    dl: [],\n    dt: [],\n    em: [],\n    hr: [],\n    h1: [],\n    h2: [],\n    h3: [],\n    h4: [],\n    h5: [],\n    h6: [],\n    i: [],\n    img: [\n        'src',\n        'srcset',\n        'alt',\n        'title',\n        'width',\n        'height'\n    ],\n    li: [],\n    ol: [],\n    p: [],\n    pre: [],\n    s: [],\n    small: [],\n    span: [],\n    sub: [],\n    sup: [],\n    strong: [],\n    u: [],\n    ul: []\n};\n// js-docs-end allow-list\nconst $91ca15859685b28b$var$uriAttributes = new Set([\n    'background',\n    'cite',\n    'href',\n    'itemtype',\n    'longdesc',\n    'poster',\n    'src',\n    'xlink:href'\n]);\n/**\n * A pattern that recognizes URLs that are safe wrt. XSS in URL navigation\n * contexts.\n *\n * Shout-out to Angular https://github.com/angular/angular/blob/15.2.8/packages/core/src/sanitization/url_sanitizer.ts#L38\n */ const $91ca15859685b28b$var$SAFE_URL_PATTERN = /^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:/?#]*(?:[/?#]|$))/i;\nconst $91ca15859685b28b$var$allowedAttribute = (attribute, allowedAttributeList)=>{\n    const attributeName = attribute.nodeName.toLowerCase();\n    if (allowedAttributeList.includes(attributeName)) {\n        if ($91ca15859685b28b$var$uriAttributes.has(attributeName)) return Boolean($91ca15859685b28b$var$SAFE_URL_PATTERN.test(attribute.nodeValue));\n        return true;\n    }\n    // Check if a regular expression validates the attribute.\n    return allowedAttributeList.filter((attributeRegex)=>attributeRegex instanceof RegExp).some((regex)=>regex.test(attributeName));\n};\nfunction $91ca15859685b28b$var$sanitizeHtml(unsafeHtml, allowList, sanitizeFunction) {\n    if (!unsafeHtml.length) return unsafeHtml;\n    if (sanitizeFunction && typeof sanitizeFunction === 'function') return sanitizeFunction(unsafeHtml);\n    const domParser = new window.DOMParser();\n    const createdDocument = domParser.parseFromString(unsafeHtml, 'text/html');\n    const elements = [].concat(...createdDocument.body.querySelectorAll('*'));\n    for (const element of elements){\n        const elementName = element.nodeName.toLowerCase();\n        if (!Object.keys(allowList).includes(elementName)) {\n            element.remove();\n            continue;\n        }\n        const attributeList = [].concat(...element.attributes);\n        const allowedAttributes = [].concat(allowList['*'] || [], allowList[elementName] || []);\n        for (const attribute of attributeList)if (!$91ca15859685b28b$var$allowedAttribute(attribute, allowedAttributes)) element.removeAttribute(attribute.nodeName);\n    }\n    return createdDocument.body.innerHTML;\n}\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/template-factory.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */ /**\n * Constants\n */ const $91ca15859685b28b$var$NAME$5 = 'TemplateFactory';\nconst $91ca15859685b28b$var$Default$4 = {\n    allowList: $91ca15859685b28b$var$DefaultAllowlist,\n    content: {},\n    // { selector : text ,  selector2 : text2 , }\n    extraClass: '',\n    html: false,\n    sanitize: true,\n    sanitizeFn: null,\n    template: '<div></div>'\n};\nconst $91ca15859685b28b$var$DefaultType$4 = {\n    allowList: 'object',\n    content: 'object',\n    extraClass: '(string|function)',\n    html: 'boolean',\n    sanitize: 'boolean',\n    sanitizeFn: '(null|function)',\n    template: 'string'\n};\nconst $91ca15859685b28b$var$DefaultContentType = {\n    entry: '(string|element|function|null)',\n    selector: '(string|element)'\n};\n/**\n * Class definition\n */ class $91ca15859685b28b$var$TemplateFactory extends $91ca15859685b28b$var$Config {\n    constructor(config){\n        super();\n        this._config = this._getConfig(config);\n    }\n    // Getters\n    static get Default() {\n        return $91ca15859685b28b$var$Default$4;\n    }\n    static get DefaultType() {\n        return $91ca15859685b28b$var$DefaultType$4;\n    }\n    static get NAME() {\n        return $91ca15859685b28b$var$NAME$5;\n    }\n    // Public\n    getContent() {\n        return Object.values(this._config.content).map((config)=>this._resolvePossibleFunction(config)).filter(Boolean);\n    }\n    hasContent() {\n        return this.getContent().length > 0;\n    }\n    changeContent(content) {\n        this._checkContent(content);\n        this._config.content = {\n            ...this._config.content,\n            ...content\n        };\n        return this;\n    }\n    toHtml() {\n        const templateWrapper = document.createElement('div');\n        templateWrapper.innerHTML = this._maybeSanitize(this._config.template);\n        for (const [selector, text] of Object.entries(this._config.content))this._setContent(templateWrapper, text, selector);\n        const template = templateWrapper.children[0];\n        const extraClass = this._resolvePossibleFunction(this._config.extraClass);\n        if (extraClass) template.classList.add(...extraClass.split(' '));\n        return template;\n    }\n    // Private\n    _typeCheckConfig(config) {\n        super._typeCheckConfig(config);\n        this._checkContent(config.content);\n    }\n    _checkContent(arg) {\n        for (const [selector, content] of Object.entries(arg))super._typeCheckConfig({\n            selector: selector,\n            entry: content\n        }, $91ca15859685b28b$var$DefaultContentType);\n    }\n    _setContent(template, content, selector) {\n        const templateElement = $91ca15859685b28b$var$SelectorEngine.findOne(selector, template);\n        if (!templateElement) return;\n        content = this._resolvePossibleFunction(content);\n        if (!content) {\n            templateElement.remove();\n            return;\n        }\n        if ($91ca15859685b28b$var$isElement(content)) {\n            this._putElementInTemplate($91ca15859685b28b$var$getElement(content), templateElement);\n            return;\n        }\n        if (this._config.html) {\n            templateElement.innerHTML = this._maybeSanitize(content);\n            return;\n        }\n        templateElement.textContent = content;\n    }\n    _maybeSanitize(arg) {\n        return this._config.sanitize ? $91ca15859685b28b$var$sanitizeHtml(arg, this._config.allowList, this._config.sanitizeFn) : arg;\n    }\n    _resolvePossibleFunction(arg) {\n        return $91ca15859685b28b$var$execute(arg, [\n            undefined,\n            this\n        ]);\n    }\n    _putElementInTemplate(element, templateElement) {\n        if (this._config.html) {\n            templateElement.innerHTML = '';\n            templateElement.append(element);\n            return;\n        }\n        templateElement.textContent = element.textContent;\n    }\n}\n/**\n * --------------------------------------------------------------------------\n * Bootstrap tooltip.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */ /**\n * Constants\n */ const $91ca15859685b28b$var$NAME$4 = 'tooltip';\nconst $91ca15859685b28b$var$DISALLOWED_ATTRIBUTES = new Set([\n    'sanitize',\n    'allowList',\n    'sanitizeFn'\n]);\nconst $91ca15859685b28b$var$CLASS_NAME_FADE$2 = 'fade';\nconst $91ca15859685b28b$var$CLASS_NAME_MODAL = 'modal';\nconst $91ca15859685b28b$var$CLASS_NAME_SHOW$2 = 'show';\nconst $91ca15859685b28b$var$SELECTOR_TOOLTIP_INNER = '.tooltip-inner';\nconst $91ca15859685b28b$var$SELECTOR_MODAL = `.${$91ca15859685b28b$var$CLASS_NAME_MODAL}`;\nconst $91ca15859685b28b$var$EVENT_MODAL_HIDE = 'hide.bs.modal';\nconst $91ca15859685b28b$var$TRIGGER_HOVER = 'hover';\nconst $91ca15859685b28b$var$TRIGGER_FOCUS = 'focus';\nconst $91ca15859685b28b$var$TRIGGER_CLICK = 'click';\nconst $91ca15859685b28b$var$TRIGGER_MANUAL = 'manual';\nconst $91ca15859685b28b$var$EVENT_HIDE$2 = 'hide';\nconst $91ca15859685b28b$var$EVENT_HIDDEN$2 = 'hidden';\nconst $91ca15859685b28b$var$EVENT_SHOW$2 = 'show';\nconst $91ca15859685b28b$var$EVENT_SHOWN$2 = 'shown';\nconst $91ca15859685b28b$var$EVENT_INSERTED = 'inserted';\nconst $91ca15859685b28b$var$EVENT_CLICK$1 = 'click';\nconst $91ca15859685b28b$var$EVENT_FOCUSIN$1 = 'focusin';\nconst $91ca15859685b28b$var$EVENT_FOCUSOUT$1 = 'focusout';\nconst $91ca15859685b28b$var$EVENT_MOUSEENTER = 'mouseenter';\nconst $91ca15859685b28b$var$EVENT_MOUSELEAVE = 'mouseleave';\nconst $91ca15859685b28b$var$AttachmentMap = {\n    AUTO: 'auto',\n    TOP: 'top',\n    RIGHT: $91ca15859685b28b$var$isRTL() ? 'left' : 'right',\n    BOTTOM: 'bottom',\n    LEFT: $91ca15859685b28b$var$isRTL() ? 'right' : 'left'\n};\nconst $91ca15859685b28b$var$Default$3 = {\n    allowList: $91ca15859685b28b$var$DefaultAllowlist,\n    animation: true,\n    boundary: 'clippingParents',\n    container: false,\n    customClass: '',\n    delay: 0,\n    fallbackPlacements: [\n        'top',\n        'right',\n        'bottom',\n        'left'\n    ],\n    html: false,\n    offset: [\n        0,\n        6\n    ],\n    placement: 'top',\n    popperConfig: null,\n    sanitize: true,\n    sanitizeFn: null,\n    selector: false,\n    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n    title: '',\n    trigger: 'hover focus'\n};\nconst $91ca15859685b28b$var$DefaultType$3 = {\n    allowList: 'object',\n    animation: 'boolean',\n    boundary: '(string|element)',\n    container: '(string|element|boolean)',\n    customClass: '(string|function)',\n    delay: '(number|object)',\n    fallbackPlacements: 'array',\n    html: 'boolean',\n    offset: '(array|string|function)',\n    placement: '(string|function)',\n    popperConfig: '(null|object|function)',\n    sanitize: 'boolean',\n    sanitizeFn: '(null|function)',\n    selector: '(string|boolean)',\n    template: 'string',\n    title: '(string|element|function)',\n    trigger: 'string'\n};\n/**\n * Class definition\n */ class $91ca15859685b28b$export$28c660c63b792dea extends $91ca15859685b28b$var$BaseComponent {\n    constructor(element, config){\n        if (typeof $d37552697cc5ea39$exports === 'undefined') throw new TypeError('Bootstrap\\'s tooltips require Popper (https://popper.js.org/docs/v2/)');\n        super(element, config);\n        // Private\n        this._isEnabled = true;\n        this._timeout = 0;\n        this._isHovered = null;\n        this._activeTrigger = {};\n        this._popper = null;\n        this._templateFactory = null;\n        this._newContent = null;\n        // Protected\n        this.tip = null;\n        this._setListeners();\n        if (!this._config.selector) this._fixTitle();\n    }\n    // Getters\n    static get Default() {\n        return $91ca15859685b28b$var$Default$3;\n    }\n    static get DefaultType() {\n        return $91ca15859685b28b$var$DefaultType$3;\n    }\n    static get NAME() {\n        return $91ca15859685b28b$var$NAME$4;\n    }\n    // Public\n    enable() {\n        this._isEnabled = true;\n    }\n    disable() {\n        this._isEnabled = false;\n    }\n    toggleEnabled() {\n        this._isEnabled = !this._isEnabled;\n    }\n    toggle() {\n        if (!this._isEnabled) return;\n        if (this._isShown()) {\n            this._leave();\n            return;\n        }\n        this._enter();\n    }\n    dispose() {\n        clearTimeout(this._timeout);\n        $91ca15859685b28b$var$EventHandler.off(this._element.closest($91ca15859685b28b$var$SELECTOR_MODAL), $91ca15859685b28b$var$EVENT_MODAL_HIDE, this._hideModalHandler);\n        if (this._element.getAttribute('data-bs-original-title')) this._element.setAttribute('title', this._element.getAttribute('data-bs-original-title'));\n        this._disposePopper();\n        super.dispose();\n    }\n    show() {\n        if (this._element.style.display === 'none') throw new Error('Please use show on visible elements');\n        if (!(this._isWithContent() && this._isEnabled)) return;\n        const showEvent = $91ca15859685b28b$var$EventHandler.trigger(this._element, this.constructor.eventName($91ca15859685b28b$var$EVENT_SHOW$2));\n        const shadowRoot = $91ca15859685b28b$var$findShadowRoot(this._element);\n        const isInTheDom = (shadowRoot || this._element.ownerDocument.documentElement).contains(this._element);\n        if (showEvent.defaultPrevented || !isInTheDom) return;\n        // TODO: v6 remove this or make it optional\n        this._disposePopper();\n        const tip = this._getTipElement();\n        this._element.setAttribute('aria-describedby', tip.getAttribute('id'));\n        const { container: container } = this._config;\n        if (!this._element.ownerDocument.documentElement.contains(this.tip)) {\n            container.append(tip);\n            $91ca15859685b28b$var$EventHandler.trigger(this._element, this.constructor.eventName($91ca15859685b28b$var$EVENT_INSERTED));\n        }\n        this._popper = this._createPopper(tip);\n        tip.classList.add($91ca15859685b28b$var$CLASS_NAME_SHOW$2);\n        // If this is a touch-enabled device we add extra\n        // empty mouseover listeners to the body's immediate children;\n        // only needed because of broken event delegation on iOS\n        // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n        if ('ontouchstart' in document.documentElement) for (const element of [].concat(...document.body.children))$91ca15859685b28b$var$EventHandler.on(element, 'mouseover', $91ca15859685b28b$var$noop);\n        const complete = ()=>{\n            $91ca15859685b28b$var$EventHandler.trigger(this._element, this.constructor.eventName($91ca15859685b28b$var$EVENT_SHOWN$2));\n            if (this._isHovered === false) this._leave();\n            this._isHovered = false;\n        };\n        this._queueCallback(complete, this.tip, this._isAnimated());\n    }\n    hide() {\n        if (!this._isShown()) return;\n        const hideEvent = $91ca15859685b28b$var$EventHandler.trigger(this._element, this.constructor.eventName($91ca15859685b28b$var$EVENT_HIDE$2));\n        if (hideEvent.defaultPrevented) return;\n        const tip = this._getTipElement();\n        tip.classList.remove($91ca15859685b28b$var$CLASS_NAME_SHOW$2);\n        // If this is a touch-enabled device we remove the extra\n        // empty mouseover listeners we added for iOS support\n        if ('ontouchstart' in document.documentElement) for (const element of [].concat(...document.body.children))$91ca15859685b28b$var$EventHandler.off(element, 'mouseover', $91ca15859685b28b$var$noop);\n        this._activeTrigger[$91ca15859685b28b$var$TRIGGER_CLICK] = false;\n        this._activeTrigger[$91ca15859685b28b$var$TRIGGER_FOCUS] = false;\n        this._activeTrigger[$91ca15859685b28b$var$TRIGGER_HOVER] = false;\n        this._isHovered = null; // it is a trick to support manual triggering\n        const complete = ()=>{\n            if (this._isWithActiveTrigger()) return;\n            if (!this._isHovered) this._disposePopper();\n            this._element.removeAttribute('aria-describedby');\n            $91ca15859685b28b$var$EventHandler.trigger(this._element, this.constructor.eventName($91ca15859685b28b$var$EVENT_HIDDEN$2));\n        };\n        this._queueCallback(complete, this.tip, this._isAnimated());\n    }\n    update() {\n        if (this._popper) this._popper.update();\n    }\n    // Protected\n    _isWithContent() {\n        return Boolean(this._getTitle());\n    }\n    _getTipElement() {\n        if (!this.tip) this.tip = this._createTipElement(this._newContent || this._getContentForTemplate());\n        return this.tip;\n    }\n    _createTipElement(content) {\n        const tip = this._getTemplateFactory(content).toHtml();\n        // TODO: remove this check in v6\n        if (!tip) return null;\n        tip.classList.remove($91ca15859685b28b$var$CLASS_NAME_FADE$2, $91ca15859685b28b$var$CLASS_NAME_SHOW$2);\n        // TODO: v6 the following can be achieved with CSS only\n        tip.classList.add(`bs-${this.constructor.NAME}-auto`);\n        const tipId = $91ca15859685b28b$var$getUID(this.constructor.NAME).toString();\n        tip.setAttribute('id', tipId);\n        if (this._isAnimated()) tip.classList.add($91ca15859685b28b$var$CLASS_NAME_FADE$2);\n        return tip;\n    }\n    setContent(content) {\n        this._newContent = content;\n        if (this._isShown()) {\n            this._disposePopper();\n            this.show();\n        }\n    }\n    _getTemplateFactory(content) {\n        if (this._templateFactory) this._templateFactory.changeContent(content);\n        else this._templateFactory = new $91ca15859685b28b$var$TemplateFactory({\n            ...this._config,\n            content: // the `content` var has to be after `this._config`\n            // to override config.content in case of popover\n            content,\n            extraClass: this._resolvePossibleFunction(this._config.customClass)\n        });\n        return this._templateFactory;\n    }\n    _getContentForTemplate() {\n        return {\n            [$91ca15859685b28b$var$SELECTOR_TOOLTIP_INNER]: this._getTitle()\n        };\n    }\n    _getTitle() {\n        return this._resolvePossibleFunction(this._config.title) || this._element.getAttribute('data-bs-original-title');\n    }\n    // Private\n    _initializeOnDelegatedTarget(event) {\n        return this.constructor.getOrCreateInstance(event.delegateTarget, this._getDelegateConfig());\n    }\n    _isAnimated() {\n        return this._config.animation || this.tip && this.tip.classList.contains($91ca15859685b28b$var$CLASS_NAME_FADE$2);\n    }\n    _isShown() {\n        return this.tip && this.tip.classList.contains($91ca15859685b28b$var$CLASS_NAME_SHOW$2);\n    }\n    _createPopper(tip) {\n        const placement = $91ca15859685b28b$var$execute(this._config.placement, [\n            this,\n            tip,\n            this._element\n        ]);\n        const attachment = $91ca15859685b28b$var$AttachmentMap[placement.toUpperCase()];\n        return $d37552697cc5ea39$exports.createPopper(this._element, tip, this._getPopperConfig(attachment));\n    }\n    _getOffset() {\n        const { offset: offset } = this._config;\n        if (typeof offset === 'string') return offset.split(',').map((value)=>Number.parseInt(value, 10));\n        if (typeof offset === 'function') return (popperData)=>offset(popperData, this._element);\n        return offset;\n    }\n    _resolvePossibleFunction(arg) {\n        return $91ca15859685b28b$var$execute(arg, [\n            this._element,\n            this._element\n        ]);\n    }\n    _getPopperConfig(attachment) {\n        const defaultBsPopperConfig = {\n            placement: attachment,\n            modifiers: [\n                {\n                    name: 'flip',\n                    options: {\n                        fallbackPlacements: this._config.fallbackPlacements\n                    }\n                },\n                {\n                    name: 'offset',\n                    options: {\n                        offset: this._getOffset()\n                    }\n                },\n                {\n                    name: 'preventOverflow',\n                    options: {\n                        boundary: this._config.boundary\n                    }\n                },\n                {\n                    name: 'arrow',\n                    options: {\n                        element: `.${this.constructor.NAME}-arrow`\n                    }\n                },\n                {\n                    name: 'preSetPlacement',\n                    enabled: true,\n                    phase: 'beforeMain',\n                    fn: (data)=>{\n                        // Pre-set Popper's placement attribute in order to read the arrow sizes properly.\n                        // Otherwise, Popper mixes up the width and height dimensions since the initial arrow style is for top placement\n                        this._getTipElement().setAttribute('data-popper-placement', data.state.placement);\n                    }\n                }\n            ]\n        };\n        return {\n            ...defaultBsPopperConfig,\n            ...$91ca15859685b28b$var$execute(this._config.popperConfig, [\n                undefined,\n                defaultBsPopperConfig\n            ])\n        };\n    }\n    _setListeners() {\n        const triggers = this._config.trigger.split(' ');\n        for (const trigger of triggers){\n            if (trigger === 'click') $91ca15859685b28b$var$EventHandler.on(this._element, this.constructor.eventName($91ca15859685b28b$var$EVENT_CLICK$1), this._config.selector, (event)=>{\n                const context = this._initializeOnDelegatedTarget(event);\n                context._activeTrigger[$91ca15859685b28b$var$TRIGGER_CLICK] = !(context._isShown() && context._activeTrigger[$91ca15859685b28b$var$TRIGGER_CLICK]);\n                context.toggle();\n            });\n            else if (trigger !== $91ca15859685b28b$var$TRIGGER_MANUAL) {\n                const eventIn = trigger === $91ca15859685b28b$var$TRIGGER_HOVER ? this.constructor.eventName($91ca15859685b28b$var$EVENT_MOUSEENTER) : this.constructor.eventName($91ca15859685b28b$var$EVENT_FOCUSIN$1);\n                const eventOut = trigger === $91ca15859685b28b$var$TRIGGER_HOVER ? this.constructor.eventName($91ca15859685b28b$var$EVENT_MOUSELEAVE) : this.constructor.eventName($91ca15859685b28b$var$EVENT_FOCUSOUT$1);\n                $91ca15859685b28b$var$EventHandler.on(this._element, eventIn, this._config.selector, (event)=>{\n                    const context = this._initializeOnDelegatedTarget(event);\n                    context._activeTrigger[event.type === 'focusin' ? $91ca15859685b28b$var$TRIGGER_FOCUS : $91ca15859685b28b$var$TRIGGER_HOVER] = true;\n                    context._enter();\n                });\n                $91ca15859685b28b$var$EventHandler.on(this._element, eventOut, this._config.selector, (event)=>{\n                    const context = this._initializeOnDelegatedTarget(event);\n                    context._activeTrigger[event.type === 'focusout' ? $91ca15859685b28b$var$TRIGGER_FOCUS : $91ca15859685b28b$var$TRIGGER_HOVER] = context._element.contains(event.relatedTarget);\n                    context._leave();\n                });\n            }\n        }\n        this._hideModalHandler = ()=>{\n            if (this._element) this.hide();\n        };\n        $91ca15859685b28b$var$EventHandler.on(this._element.closest($91ca15859685b28b$var$SELECTOR_MODAL), $91ca15859685b28b$var$EVENT_MODAL_HIDE, this._hideModalHandler);\n    }\n    _fixTitle() {\n        const title = this._element.getAttribute('title');\n        if (!title) return;\n        if (!this._element.getAttribute('aria-label') && !this._element.textContent.trim()) this._element.setAttribute('aria-label', title);\n        this._element.setAttribute('data-bs-original-title', title); // DO NOT USE IT. Is only for backwards compatibility\n        this._element.removeAttribute('title');\n    }\n    _enter() {\n        if (this._isShown() || this._isHovered) {\n            this._isHovered = true;\n            return;\n        }\n        this._isHovered = true;\n        this._setTimeout(()=>{\n            if (this._isHovered) this.show();\n        }, this._config.delay.show);\n    }\n    _leave() {\n        if (this._isWithActiveTrigger()) return;\n        this._isHovered = false;\n        this._setTimeout(()=>{\n            if (!this._isHovered) this.hide();\n        }, this._config.delay.hide);\n    }\n    _setTimeout(handler, timeout) {\n        clearTimeout(this._timeout);\n        this._timeout = setTimeout(handler, timeout);\n    }\n    _isWithActiveTrigger() {\n        return Object.values(this._activeTrigger).includes(true);\n    }\n    _getConfig(config) {\n        const dataAttributes = $91ca15859685b28b$var$Manipulator.getDataAttributes(this._element);\n        for (const dataAttribute of Object.keys(dataAttributes))if ($91ca15859685b28b$var$DISALLOWED_ATTRIBUTES.has(dataAttribute)) delete dataAttributes[dataAttribute];\n        config = {\n            ...dataAttributes,\n            ...typeof config === 'object' && config ? config : {}\n        };\n        config = this._mergeConfigObj(config);\n        config = this._configAfterMerge(config);\n        this._typeCheckConfig(config);\n        return config;\n    }\n    _configAfterMerge(config) {\n        config.container = config.container === false ? document.body : $91ca15859685b28b$var$getElement(config.container);\n        if (typeof config.delay === 'number') config.delay = {\n            show: config.delay,\n            hide: config.delay\n        };\n        if (typeof config.title === 'number') config.title = config.title.toString();\n        if (typeof config.content === 'number') config.content = config.content.toString();\n        return config;\n    }\n    _getDelegateConfig() {\n        const config = {};\n        for (const [key, value] of Object.entries(this._config))if (this.constructor.Default[key] !== value) config[key] = value;\n        config.selector = false;\n        config.trigger = 'manual';\n        // In the future can be replaced with:\n        // const keysWithDifferentValues = Object.entries(this._config).filter(entry => this.constructor.Default[entry[0]] !== this._config[entry[0]])\n        // `Object.fromEntries(keysWithDifferentValues)`\n        return config;\n    }\n    _disposePopper() {\n        if (this._popper) {\n            this._popper.destroy();\n            this._popper = null;\n        }\n        if (this.tip) {\n            this.tip.remove();\n            this.tip = null;\n        }\n    }\n    // Static\n    static jQueryInterface(config) {\n        return this.each(function() {\n            const data = $91ca15859685b28b$export$28c660c63b792dea.getOrCreateInstance(this, config);\n            if (typeof config !== 'string') return;\n            if (typeof data[config] === 'undefined') throw new TypeError(`No method named \"${config}\"`);\n            data[config]();\n        });\n    }\n}\n/**\n * jQuery\n */ $91ca15859685b28b$var$defineJQueryPlugin($91ca15859685b28b$export$28c660c63b792dea);\n/**\n * --------------------------------------------------------------------------\n * Bootstrap popover.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */ /**\n * Constants\n */ const $91ca15859685b28b$var$NAME$3 = 'popover';\nconst $91ca15859685b28b$var$SELECTOR_TITLE = '.popover-header';\nconst $91ca15859685b28b$var$SELECTOR_CONTENT = '.popover-body';\nconst $91ca15859685b28b$var$Default$2 = {\n    ...$91ca15859685b28b$export$28c660c63b792dea.Default,\n    content: '',\n    offset: [\n        0,\n        8\n    ],\n    placement: 'right',\n    template: '<div class=\"popover\" role=\"tooltip\"><div class=\"popover-arrow\"></div><h3 class=\"popover-header\"></h3><div class=\"popover-body\"></div></div>',\n    trigger: 'click'\n};\nconst $91ca15859685b28b$var$DefaultType$2 = {\n    ...$91ca15859685b28b$export$28c660c63b792dea.DefaultType,\n    content: '(null|string|element|function)'\n};\n/**\n * Class definition\n */ class $91ca15859685b28b$export$5b6b19405a83ff9d extends $91ca15859685b28b$export$28c660c63b792dea {\n    // Getters\n    static get Default() {\n        return $91ca15859685b28b$var$Default$2;\n    }\n    static get DefaultType() {\n        return $91ca15859685b28b$var$DefaultType$2;\n    }\n    static get NAME() {\n        return $91ca15859685b28b$var$NAME$3;\n    }\n    // Overrides\n    _isWithContent() {\n        return this._getTitle() || this._getContent();\n    }\n    // Private\n    _getContentForTemplate() {\n        return {\n            [$91ca15859685b28b$var$SELECTOR_TITLE]: this._getTitle(),\n            [$91ca15859685b28b$var$SELECTOR_CONTENT]: this._getContent()\n        };\n    }\n    _getContent() {\n        return this._resolvePossibleFunction(this._config.content);\n    }\n    // Static\n    static jQueryInterface(config) {\n        return this.each(function() {\n            const data = $91ca15859685b28b$export$5b6b19405a83ff9d.getOrCreateInstance(this, config);\n            if (typeof config !== 'string') return;\n            if (typeof data[config] === 'undefined') throw new TypeError(`No method named \"${config}\"`);\n            data[config]();\n        });\n    }\n}\n/**\n * jQuery\n */ $91ca15859685b28b$var$defineJQueryPlugin($91ca15859685b28b$export$5b6b19405a83ff9d);\n/**\n * --------------------------------------------------------------------------\n * Bootstrap scrollspy.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */ /**\n * Constants\n */ const $91ca15859685b28b$var$NAME$2 = 'scrollspy';\nconst $91ca15859685b28b$var$DATA_KEY$2 = 'bs.scrollspy';\nconst $91ca15859685b28b$var$EVENT_KEY$2 = `.${$91ca15859685b28b$var$DATA_KEY$2}`;\nconst $91ca15859685b28b$var$DATA_API_KEY = '.data-api';\nconst $91ca15859685b28b$var$EVENT_ACTIVATE = `activate${$91ca15859685b28b$var$EVENT_KEY$2}`;\nconst $91ca15859685b28b$var$EVENT_CLICK = `click${$91ca15859685b28b$var$EVENT_KEY$2}`;\nconst $91ca15859685b28b$var$EVENT_LOAD_DATA_API$1 = `load${$91ca15859685b28b$var$EVENT_KEY$2}${$91ca15859685b28b$var$DATA_API_KEY}`;\nconst $91ca15859685b28b$var$CLASS_NAME_DROPDOWN_ITEM = 'dropdown-item';\nconst $91ca15859685b28b$var$CLASS_NAME_ACTIVE$1 = 'active';\nconst $91ca15859685b28b$var$SELECTOR_DATA_SPY = '[data-bs-spy=\"scroll\"]';\nconst $91ca15859685b28b$var$SELECTOR_TARGET_LINKS = '[href]';\nconst $91ca15859685b28b$var$SELECTOR_NAV_LIST_GROUP = '.nav, .list-group';\nconst $91ca15859685b28b$var$SELECTOR_NAV_LINKS = '.nav-link';\nconst $91ca15859685b28b$var$SELECTOR_NAV_ITEMS = '.nav-item';\nconst $91ca15859685b28b$var$SELECTOR_LIST_ITEMS = '.list-group-item';\nconst $91ca15859685b28b$var$SELECTOR_LINK_ITEMS = `${$91ca15859685b28b$var$SELECTOR_NAV_LINKS}, ${$91ca15859685b28b$var$SELECTOR_NAV_ITEMS} > ${$91ca15859685b28b$var$SELECTOR_NAV_LINKS}, ${$91ca15859685b28b$var$SELECTOR_LIST_ITEMS}`;\nconst $91ca15859685b28b$var$SELECTOR_DROPDOWN = '.dropdown';\nconst $91ca15859685b28b$var$SELECTOR_DROPDOWN_TOGGLE$1 = '.dropdown-toggle';\nconst $91ca15859685b28b$var$Default$1 = {\n    offset: null,\n    // TODO: v6 @deprecated, keep it for backwards compatibility reasons\n    rootMargin: '0px 0px -25%',\n    smoothScroll: false,\n    target: null,\n    threshold: [\n        0.1,\n        0.5,\n        1\n    ]\n};\nconst $91ca15859685b28b$var$DefaultType$1 = {\n    offset: '(number|null)',\n    // TODO v6 @deprecated, keep it for backwards compatibility reasons\n    rootMargin: 'string',\n    smoothScroll: 'boolean',\n    target: 'element',\n    threshold: 'array'\n};\n/**\n * Class definition\n */ class $91ca15859685b28b$export$a6472a5298a374be extends $91ca15859685b28b$var$BaseComponent {\n    constructor(element, config){\n        super(element, config);\n        // this._element is the observablesContainer and config.target the menu links wrapper\n        this._targetLinks = new Map();\n        this._observableSections = new Map();\n        this._rootElement = getComputedStyle(this._element).overflowY === 'visible' ? null : this._element;\n        this._activeTarget = null;\n        this._observer = null;\n        this._previousScrollData = {\n            visibleEntryTop: 0,\n            parentScrollTop: 0\n        };\n        this.refresh(); // initialize\n    }\n    // Getters\n    static get Default() {\n        return $91ca15859685b28b$var$Default$1;\n    }\n    static get DefaultType() {\n        return $91ca15859685b28b$var$DefaultType$1;\n    }\n    static get NAME() {\n        return $91ca15859685b28b$var$NAME$2;\n    }\n    // Public\n    refresh() {\n        this._initializeTargetsAndObservables();\n        this._maybeEnableSmoothScroll();\n        if (this._observer) this._observer.disconnect();\n        else this._observer = this._getNewObserver();\n        for (const section of this._observableSections.values())this._observer.observe(section);\n    }\n    dispose() {\n        this._observer.disconnect();\n        super.dispose();\n    }\n    // Private\n    _configAfterMerge(config) {\n        // TODO: on v6 target should be given explicitly & remove the {target: 'ss-target'} case\n        config.target = $91ca15859685b28b$var$getElement(config.target) || document.body;\n        // TODO: v6 Only for backwards compatibility reasons. Use rootMargin only\n        config.rootMargin = config.offset ? `${config.offset}px 0px -30%` : config.rootMargin;\n        if (typeof config.threshold === 'string') config.threshold = config.threshold.split(',').map((value)=>Number.parseFloat(value));\n        return config;\n    }\n    _maybeEnableSmoothScroll() {\n        if (!this._config.smoothScroll) return;\n        // unregister any previous listeners\n        $91ca15859685b28b$var$EventHandler.off(this._config.target, $91ca15859685b28b$var$EVENT_CLICK);\n        $91ca15859685b28b$var$EventHandler.on(this._config.target, $91ca15859685b28b$var$EVENT_CLICK, $91ca15859685b28b$var$SELECTOR_TARGET_LINKS, (event)=>{\n            const observableSection = this._observableSections.get(event.target.hash);\n            if (observableSection) {\n                event.preventDefault();\n                const root = this._rootElement || window;\n                const height = observableSection.offsetTop - this._element.offsetTop;\n                if (root.scrollTo) {\n                    root.scrollTo({\n                        top: height,\n                        behavior: 'smooth'\n                    });\n                    return;\n                }\n                // Chrome 60 doesn't support `scrollTo`\n                root.scrollTop = height;\n            }\n        });\n    }\n    _getNewObserver() {\n        const options = {\n            root: this._rootElement,\n            threshold: this._config.threshold,\n            rootMargin: this._config.rootMargin\n        };\n        return new IntersectionObserver((entries)=>this._observerCallback(entries), options);\n    }\n    // The logic of selection\n    _observerCallback(entries) {\n        const targetElement = (entry)=>this._targetLinks.get(`#${entry.target.id}`);\n        const activate = (entry)=>{\n            this._previousScrollData.visibleEntryTop = entry.target.offsetTop;\n            this._process(targetElement(entry));\n        };\n        const parentScrollTop = (this._rootElement || document.documentElement).scrollTop;\n        const userScrollsDown = parentScrollTop >= this._previousScrollData.parentScrollTop;\n        this._previousScrollData.parentScrollTop = parentScrollTop;\n        for (const entry of entries){\n            if (!entry.isIntersecting) {\n                this._activeTarget = null;\n                this._clearActiveClass(targetElement(entry));\n                continue;\n            }\n            const entryIsLowerThanPrevious = entry.target.offsetTop >= this._previousScrollData.visibleEntryTop;\n            // if we are scrolling down, pick the bigger offsetTop\n            if (userScrollsDown && entryIsLowerThanPrevious) {\n                activate(entry);\n                // if parent isn't scrolled, let's keep the first visible item, breaking the iteration\n                if (!parentScrollTop) return;\n                continue;\n            }\n            // if we are scrolling up, pick the smallest offsetTop\n            if (!userScrollsDown && !entryIsLowerThanPrevious) activate(entry);\n        }\n    }\n    _initializeTargetsAndObservables() {\n        this._targetLinks = new Map();\n        this._observableSections = new Map();\n        const targetLinks = $91ca15859685b28b$var$SelectorEngine.find($91ca15859685b28b$var$SELECTOR_TARGET_LINKS, this._config.target);\n        for (const anchor of targetLinks){\n            // ensure that the anchor has an id and is not disabled\n            if (!anchor.hash || $91ca15859685b28b$var$isDisabled(anchor)) continue;\n            const observableSection = $91ca15859685b28b$var$SelectorEngine.findOne(decodeURI(anchor.hash), this._element);\n            // ensure that the observableSection exists & is visible\n            if ($91ca15859685b28b$var$isVisible(observableSection)) {\n                this._targetLinks.set(decodeURI(anchor.hash), anchor);\n                this._observableSections.set(anchor.hash, observableSection);\n            }\n        }\n    }\n    _process(target) {\n        if (this._activeTarget === target) return;\n        this._clearActiveClass(this._config.target);\n        this._activeTarget = target;\n        target.classList.add($91ca15859685b28b$var$CLASS_NAME_ACTIVE$1);\n        this._activateParents(target);\n        $91ca15859685b28b$var$EventHandler.trigger(this._element, $91ca15859685b28b$var$EVENT_ACTIVATE, {\n            relatedTarget: target\n        });\n    }\n    _activateParents(target) {\n        // Activate dropdown parents\n        if (target.classList.contains($91ca15859685b28b$var$CLASS_NAME_DROPDOWN_ITEM)) {\n            $91ca15859685b28b$var$SelectorEngine.findOne($91ca15859685b28b$var$SELECTOR_DROPDOWN_TOGGLE$1, target.closest($91ca15859685b28b$var$SELECTOR_DROPDOWN)).classList.add($91ca15859685b28b$var$CLASS_NAME_ACTIVE$1);\n            return;\n        }\n        for (const listGroup of $91ca15859685b28b$var$SelectorEngine.parents(target, $91ca15859685b28b$var$SELECTOR_NAV_LIST_GROUP))// Set triggered links parents as active\n        // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n        for (const item of $91ca15859685b28b$var$SelectorEngine.prev(listGroup, $91ca15859685b28b$var$SELECTOR_LINK_ITEMS))item.classList.add($91ca15859685b28b$var$CLASS_NAME_ACTIVE$1);\n    }\n    _clearActiveClass(parent) {\n        parent.classList.remove($91ca15859685b28b$var$CLASS_NAME_ACTIVE$1);\n        const activeNodes = $91ca15859685b28b$var$SelectorEngine.find(`${$91ca15859685b28b$var$SELECTOR_TARGET_LINKS}.${$91ca15859685b28b$var$CLASS_NAME_ACTIVE$1}`, parent);\n        for (const node of activeNodes)node.classList.remove($91ca15859685b28b$var$CLASS_NAME_ACTIVE$1);\n    }\n    // Static\n    static jQueryInterface(config) {\n        return this.each(function() {\n            const data = $91ca15859685b28b$export$a6472a5298a374be.getOrCreateInstance(this, config);\n            if (typeof config !== 'string') return;\n            if (data[config] === undefined || config.startsWith('_') || config === 'constructor') throw new TypeError(`No method named \"${config}\"`);\n            data[config]();\n        });\n    }\n}\n/**\n * Data API implementation\n */ $91ca15859685b28b$var$EventHandler.on(window, $91ca15859685b28b$var$EVENT_LOAD_DATA_API$1, ()=>{\n    for (const spy of $91ca15859685b28b$var$SelectorEngine.find($91ca15859685b28b$var$SELECTOR_DATA_SPY))$91ca15859685b28b$export$a6472a5298a374be.getOrCreateInstance(spy);\n});\n/**\n * jQuery\n */ $91ca15859685b28b$var$defineJQueryPlugin($91ca15859685b28b$export$a6472a5298a374be);\n/**\n * --------------------------------------------------------------------------\n * Bootstrap tab.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */ /**\n * Constants\n */ const $91ca15859685b28b$var$NAME$1 = 'tab';\nconst $91ca15859685b28b$var$DATA_KEY$1 = 'bs.tab';\nconst $91ca15859685b28b$var$EVENT_KEY$1 = `.${$91ca15859685b28b$var$DATA_KEY$1}`;\nconst $91ca15859685b28b$var$EVENT_HIDE$1 = `hide${$91ca15859685b28b$var$EVENT_KEY$1}`;\nconst $91ca15859685b28b$var$EVENT_HIDDEN$1 = `hidden${$91ca15859685b28b$var$EVENT_KEY$1}`;\nconst $91ca15859685b28b$var$EVENT_SHOW$1 = `show${$91ca15859685b28b$var$EVENT_KEY$1}`;\nconst $91ca15859685b28b$var$EVENT_SHOWN$1 = `shown${$91ca15859685b28b$var$EVENT_KEY$1}`;\nconst $91ca15859685b28b$var$EVENT_CLICK_DATA_API = `click${$91ca15859685b28b$var$EVENT_KEY$1}`;\nconst $91ca15859685b28b$var$EVENT_KEYDOWN = `keydown${$91ca15859685b28b$var$EVENT_KEY$1}`;\nconst $91ca15859685b28b$var$EVENT_LOAD_DATA_API = `load${$91ca15859685b28b$var$EVENT_KEY$1}`;\nconst $91ca15859685b28b$var$ARROW_LEFT_KEY = 'ArrowLeft';\nconst $91ca15859685b28b$var$ARROW_RIGHT_KEY = 'ArrowRight';\nconst $91ca15859685b28b$var$ARROW_UP_KEY = 'ArrowUp';\nconst $91ca15859685b28b$var$ARROW_DOWN_KEY = 'ArrowDown';\nconst $91ca15859685b28b$var$HOME_KEY = 'Home';\nconst $91ca15859685b28b$var$END_KEY = 'End';\nconst $91ca15859685b28b$var$CLASS_NAME_ACTIVE = 'active';\nconst $91ca15859685b28b$var$CLASS_NAME_FADE$1 = 'fade';\nconst $91ca15859685b28b$var$CLASS_NAME_SHOW$1 = 'show';\nconst $91ca15859685b28b$var$CLASS_DROPDOWN = 'dropdown';\nconst $91ca15859685b28b$var$SELECTOR_DROPDOWN_TOGGLE = '.dropdown-toggle';\nconst $91ca15859685b28b$var$SELECTOR_DROPDOWN_MENU = '.dropdown-menu';\nconst $91ca15859685b28b$var$NOT_SELECTOR_DROPDOWN_TOGGLE = `:not(${$91ca15859685b28b$var$SELECTOR_DROPDOWN_TOGGLE})`;\nconst $91ca15859685b28b$var$SELECTOR_TAB_PANEL = '.list-group, .nav, [role=\"tablist\"]';\nconst $91ca15859685b28b$var$SELECTOR_OUTER = '.nav-item, .list-group-item';\nconst $91ca15859685b28b$var$SELECTOR_INNER = `.nav-link${$91ca15859685b28b$var$NOT_SELECTOR_DROPDOWN_TOGGLE}, .list-group-item${$91ca15859685b28b$var$NOT_SELECTOR_DROPDOWN_TOGGLE}, [role=\"tab\"]${$91ca15859685b28b$var$NOT_SELECTOR_DROPDOWN_TOGGLE}`;\nconst $91ca15859685b28b$var$SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"tab\"], [data-bs-toggle=\"pill\"], [data-bs-toggle=\"list\"]'; // TODO: could only be `tab` in v6\nconst $91ca15859685b28b$var$SELECTOR_INNER_ELEM = `${$91ca15859685b28b$var$SELECTOR_INNER}, ${$91ca15859685b28b$var$SELECTOR_DATA_TOGGLE}`;\nconst $91ca15859685b28b$var$SELECTOR_DATA_TOGGLE_ACTIVE = `.${$91ca15859685b28b$var$CLASS_NAME_ACTIVE}[data-bs-toggle=\"tab\"], .${$91ca15859685b28b$var$CLASS_NAME_ACTIVE}[data-bs-toggle=\"pill\"], .${$91ca15859685b28b$var$CLASS_NAME_ACTIVE}[data-bs-toggle=\"list\"]`;\n/**\n * Class definition\n */ class $91ca15859685b28b$export$3e41faf802a29e71 extends $91ca15859685b28b$var$BaseComponent {\n    constructor(element){\n        super(element);\n        this._parent = this._element.closest($91ca15859685b28b$var$SELECTOR_TAB_PANEL);\n        if (!this._parent) return;\n        // Set up initial aria attributes\n        this._setInitialAttributes(this._parent, this._getChildren());\n        $91ca15859685b28b$var$EventHandler.on(this._element, $91ca15859685b28b$var$EVENT_KEYDOWN, (event)=>this._keydown(event));\n    }\n    // Getters\n    static get NAME() {\n        return $91ca15859685b28b$var$NAME$1;\n    }\n    // Public\n    show() {\n        // Shows this elem and deactivate the active sibling if exists\n        const innerElem = this._element;\n        if (this._elemIsActive(innerElem)) return;\n        // Search for active tab on same parent to deactivate it\n        const active = this._getActiveElem();\n        const hideEvent = active ? $91ca15859685b28b$var$EventHandler.trigger(active, $91ca15859685b28b$var$EVENT_HIDE$1, {\n            relatedTarget: innerElem\n        }) : null;\n        const showEvent = $91ca15859685b28b$var$EventHandler.trigger(innerElem, $91ca15859685b28b$var$EVENT_SHOW$1, {\n            relatedTarget: active\n        });\n        if (showEvent.defaultPrevented || hideEvent && hideEvent.defaultPrevented) return;\n        this._deactivate(active, innerElem);\n        this._activate(innerElem, active);\n    }\n    // Private\n    _activate(element, relatedElem) {\n        if (!element) return;\n        element.classList.add($91ca15859685b28b$var$CLASS_NAME_ACTIVE);\n        this._activate($91ca15859685b28b$var$SelectorEngine.getElementFromSelector(element)); // Search and activate/show the proper section\n        const complete = ()=>{\n            if (element.getAttribute('role') !== 'tab') {\n                element.classList.add($91ca15859685b28b$var$CLASS_NAME_SHOW$1);\n                return;\n            }\n            element.removeAttribute('tabindex');\n            element.setAttribute('aria-selected', true);\n            this._toggleDropDown(element, true);\n            $91ca15859685b28b$var$EventHandler.trigger(element, $91ca15859685b28b$var$EVENT_SHOWN$1, {\n                relatedTarget: relatedElem\n            });\n        };\n        this._queueCallback(complete, element, element.classList.contains($91ca15859685b28b$var$CLASS_NAME_FADE$1));\n    }\n    _deactivate(element, relatedElem) {\n        if (!element) return;\n        element.classList.remove($91ca15859685b28b$var$CLASS_NAME_ACTIVE);\n        element.blur();\n        this._deactivate($91ca15859685b28b$var$SelectorEngine.getElementFromSelector(element)); // Search and deactivate the shown section too\n        const complete = ()=>{\n            if (element.getAttribute('role') !== 'tab') {\n                element.classList.remove($91ca15859685b28b$var$CLASS_NAME_SHOW$1);\n                return;\n            }\n            element.setAttribute('aria-selected', false);\n            element.setAttribute('tabindex', '-1');\n            this._toggleDropDown(element, false);\n            $91ca15859685b28b$var$EventHandler.trigger(element, $91ca15859685b28b$var$EVENT_HIDDEN$1, {\n                relatedTarget: relatedElem\n            });\n        };\n        this._queueCallback(complete, element, element.classList.contains($91ca15859685b28b$var$CLASS_NAME_FADE$1));\n    }\n    _keydown(event) {\n        if (![\n            $91ca15859685b28b$var$ARROW_LEFT_KEY,\n            $91ca15859685b28b$var$ARROW_RIGHT_KEY,\n            $91ca15859685b28b$var$ARROW_UP_KEY,\n            $91ca15859685b28b$var$ARROW_DOWN_KEY,\n            $91ca15859685b28b$var$HOME_KEY,\n            $91ca15859685b28b$var$END_KEY\n        ].includes(event.key)) return;\n        event.stopPropagation(); // stopPropagation/preventDefault both added to support up/down keys without scrolling the page\n        event.preventDefault();\n        const children = this._getChildren().filter((element)=>!$91ca15859685b28b$var$isDisabled(element));\n        let nextActiveElement;\n        if ([\n            $91ca15859685b28b$var$HOME_KEY,\n            $91ca15859685b28b$var$END_KEY\n        ].includes(event.key)) nextActiveElement = children[event.key === $91ca15859685b28b$var$HOME_KEY ? 0 : children.length - 1];\n        else {\n            const isNext = [\n                $91ca15859685b28b$var$ARROW_RIGHT_KEY,\n                $91ca15859685b28b$var$ARROW_DOWN_KEY\n            ].includes(event.key);\n            nextActiveElement = $91ca15859685b28b$var$getNextActiveElement(children, event.target, isNext, true);\n        }\n        if (nextActiveElement) {\n            nextActiveElement.focus({\n                preventScroll: true\n            });\n            $91ca15859685b28b$export$3e41faf802a29e71.getOrCreateInstance(nextActiveElement).show();\n        }\n    }\n    _getChildren() {\n        // collection of inner elements\n        return $91ca15859685b28b$var$SelectorEngine.find($91ca15859685b28b$var$SELECTOR_INNER_ELEM, this._parent);\n    }\n    _getActiveElem() {\n        return this._getChildren().find((child)=>this._elemIsActive(child)) || null;\n    }\n    _setInitialAttributes(parent, children) {\n        this._setAttributeIfNotExists(parent, 'role', 'tablist');\n        for (const child of children)this._setInitialAttributesOnChild(child);\n    }\n    _setInitialAttributesOnChild(child) {\n        child = this._getInnerElement(child);\n        const isActive = this._elemIsActive(child);\n        const outerElem = this._getOuterElement(child);\n        child.setAttribute('aria-selected', isActive);\n        if (outerElem !== child) this._setAttributeIfNotExists(outerElem, 'role', 'presentation');\n        if (!isActive) child.setAttribute('tabindex', '-1');\n        this._setAttributeIfNotExists(child, 'role', 'tab');\n        // set attributes to the related panel too\n        this._setInitialAttributesOnTargetPanel(child);\n    }\n    _setInitialAttributesOnTargetPanel(child) {\n        const target = $91ca15859685b28b$var$SelectorEngine.getElementFromSelector(child);\n        if (!target) return;\n        this._setAttributeIfNotExists(target, 'role', 'tabpanel');\n        if (child.id) this._setAttributeIfNotExists(target, 'aria-labelledby', `${child.id}`);\n    }\n    _toggleDropDown(element, open) {\n        const outerElem = this._getOuterElement(element);\n        if (!outerElem.classList.contains($91ca15859685b28b$var$CLASS_DROPDOWN)) return;\n        const toggle = (selector, className)=>{\n            const element = $91ca15859685b28b$var$SelectorEngine.findOne(selector, outerElem);\n            if (element) element.classList.toggle(className, open);\n        };\n        toggle($91ca15859685b28b$var$SELECTOR_DROPDOWN_TOGGLE, $91ca15859685b28b$var$CLASS_NAME_ACTIVE);\n        toggle($91ca15859685b28b$var$SELECTOR_DROPDOWN_MENU, $91ca15859685b28b$var$CLASS_NAME_SHOW$1);\n        outerElem.setAttribute('aria-expanded', open);\n    }\n    _setAttributeIfNotExists(element, attribute, value) {\n        if (!element.hasAttribute(attribute)) element.setAttribute(attribute, value);\n    }\n    _elemIsActive(elem) {\n        return elem.classList.contains($91ca15859685b28b$var$CLASS_NAME_ACTIVE);\n    }\n    // Try to get the inner element (usually the .nav-link)\n    _getInnerElement(elem) {\n        return elem.matches($91ca15859685b28b$var$SELECTOR_INNER_ELEM) ? elem : $91ca15859685b28b$var$SelectorEngine.findOne($91ca15859685b28b$var$SELECTOR_INNER_ELEM, elem);\n    }\n    // Try to get the outer element (usually the .nav-item)\n    _getOuterElement(elem) {\n        return elem.closest($91ca15859685b28b$var$SELECTOR_OUTER) || elem;\n    }\n    // Static\n    static jQueryInterface(config) {\n        return this.each(function() {\n            const data = $91ca15859685b28b$export$3e41faf802a29e71.getOrCreateInstance(this);\n            if (typeof config !== 'string') return;\n            if (data[config] === undefined || config.startsWith('_') || config === 'constructor') throw new TypeError(`No method named \"${config}\"`);\n            data[config]();\n        });\n    }\n}\n/**\n * Data API implementation\n */ $91ca15859685b28b$var$EventHandler.on(document, $91ca15859685b28b$var$EVENT_CLICK_DATA_API, $91ca15859685b28b$var$SELECTOR_DATA_TOGGLE, function(event) {\n    if ([\n        'A',\n        'AREA'\n    ].includes(this.tagName)) event.preventDefault();\n    if ($91ca15859685b28b$var$isDisabled(this)) return;\n    $91ca15859685b28b$export$3e41faf802a29e71.getOrCreateInstance(this).show();\n});\n/**\n * Initialize on focus\n */ $91ca15859685b28b$var$EventHandler.on(window, $91ca15859685b28b$var$EVENT_LOAD_DATA_API, ()=>{\n    for (const element of $91ca15859685b28b$var$SelectorEngine.find($91ca15859685b28b$var$SELECTOR_DATA_TOGGLE_ACTIVE))$91ca15859685b28b$export$3e41faf802a29e71.getOrCreateInstance(element);\n});\n/**\n * jQuery\n */ $91ca15859685b28b$var$defineJQueryPlugin($91ca15859685b28b$export$3e41faf802a29e71);\n/**\n * --------------------------------------------------------------------------\n * Bootstrap toast.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */ /**\n * Constants\n */ const $91ca15859685b28b$var$NAME = 'toast';\nconst $91ca15859685b28b$var$DATA_KEY = 'bs.toast';\nconst $91ca15859685b28b$var$EVENT_KEY = `.${$91ca15859685b28b$var$DATA_KEY}`;\nconst $91ca15859685b28b$var$EVENT_MOUSEOVER = `mouseover${$91ca15859685b28b$var$EVENT_KEY}`;\nconst $91ca15859685b28b$var$EVENT_MOUSEOUT = `mouseout${$91ca15859685b28b$var$EVENT_KEY}`;\nconst $91ca15859685b28b$var$EVENT_FOCUSIN = `focusin${$91ca15859685b28b$var$EVENT_KEY}`;\nconst $91ca15859685b28b$var$EVENT_FOCUSOUT = `focusout${$91ca15859685b28b$var$EVENT_KEY}`;\nconst $91ca15859685b28b$var$EVENT_HIDE = `hide${$91ca15859685b28b$var$EVENT_KEY}`;\nconst $91ca15859685b28b$var$EVENT_HIDDEN = `hidden${$91ca15859685b28b$var$EVENT_KEY}`;\nconst $91ca15859685b28b$var$EVENT_SHOW = `show${$91ca15859685b28b$var$EVENT_KEY}`;\nconst $91ca15859685b28b$var$EVENT_SHOWN = `shown${$91ca15859685b28b$var$EVENT_KEY}`;\nconst $91ca15859685b28b$var$CLASS_NAME_FADE = 'fade';\nconst $91ca15859685b28b$var$CLASS_NAME_HIDE = 'hide'; // @deprecated - kept here only for backwards compatibility\nconst $91ca15859685b28b$var$CLASS_NAME_SHOW = 'show';\nconst $91ca15859685b28b$var$CLASS_NAME_SHOWING = 'showing';\nconst $91ca15859685b28b$var$DefaultType = {\n    animation: 'boolean',\n    autohide: 'boolean',\n    delay: 'number'\n};\nconst $91ca15859685b28b$var$Default = {\n    animation: true,\n    autohide: true,\n    delay: 5000\n};\n/**\n * Class definition\n */ class $91ca15859685b28b$export$8d8dc7d5f743331b extends $91ca15859685b28b$var$BaseComponent {\n    constructor(element, config){\n        super(element, config);\n        this._timeout = null;\n        this._hasMouseInteraction = false;\n        this._hasKeyboardInteraction = false;\n        this._setListeners();\n    }\n    // Getters\n    static get Default() {\n        return $91ca15859685b28b$var$Default;\n    }\n    static get DefaultType() {\n        return $91ca15859685b28b$var$DefaultType;\n    }\n    static get NAME() {\n        return $91ca15859685b28b$var$NAME;\n    }\n    // Public\n    show() {\n        const showEvent = $91ca15859685b28b$var$EventHandler.trigger(this._element, $91ca15859685b28b$var$EVENT_SHOW);\n        if (showEvent.defaultPrevented) return;\n        this._clearTimeout();\n        if (this._config.animation) this._element.classList.add($91ca15859685b28b$var$CLASS_NAME_FADE);\n        const complete = ()=>{\n            this._element.classList.remove($91ca15859685b28b$var$CLASS_NAME_SHOWING);\n            $91ca15859685b28b$var$EventHandler.trigger(this._element, $91ca15859685b28b$var$EVENT_SHOWN);\n            this._maybeScheduleHide();\n        };\n        this._element.classList.remove($91ca15859685b28b$var$CLASS_NAME_HIDE); // @deprecated\n        $91ca15859685b28b$var$reflow(this._element);\n        this._element.classList.add($91ca15859685b28b$var$CLASS_NAME_SHOW, $91ca15859685b28b$var$CLASS_NAME_SHOWING);\n        this._queueCallback(complete, this._element, this._config.animation);\n    }\n    hide() {\n        if (!this.isShown()) return;\n        const hideEvent = $91ca15859685b28b$var$EventHandler.trigger(this._element, $91ca15859685b28b$var$EVENT_HIDE);\n        if (hideEvent.defaultPrevented) return;\n        const complete = ()=>{\n            this._element.classList.add($91ca15859685b28b$var$CLASS_NAME_HIDE); // @deprecated\n            this._element.classList.remove($91ca15859685b28b$var$CLASS_NAME_SHOWING, $91ca15859685b28b$var$CLASS_NAME_SHOW);\n            $91ca15859685b28b$var$EventHandler.trigger(this._element, $91ca15859685b28b$var$EVENT_HIDDEN);\n        };\n        this._element.classList.add($91ca15859685b28b$var$CLASS_NAME_SHOWING);\n        this._queueCallback(complete, this._element, this._config.animation);\n    }\n    dispose() {\n        this._clearTimeout();\n        if (this.isShown()) this._element.classList.remove($91ca15859685b28b$var$CLASS_NAME_SHOW);\n        super.dispose();\n    }\n    isShown() {\n        return this._element.classList.contains($91ca15859685b28b$var$CLASS_NAME_SHOW);\n    }\n    // Private\n    _maybeScheduleHide() {\n        if (!this._config.autohide) return;\n        if (this._hasMouseInteraction || this._hasKeyboardInteraction) return;\n        this._timeout = setTimeout(()=>{\n            this.hide();\n        }, this._config.delay);\n    }\n    _onInteraction(event, isInteracting) {\n        switch(event.type){\n            case 'mouseover':\n            case 'mouseout':\n                this._hasMouseInteraction = isInteracting;\n                break;\n            case 'focusin':\n            case 'focusout':\n                this._hasKeyboardInteraction = isInteracting;\n                break;\n        }\n        if (isInteracting) {\n            this._clearTimeout();\n            return;\n        }\n        const nextElement = event.relatedTarget;\n        if (this._element === nextElement || this._element.contains(nextElement)) return;\n        this._maybeScheduleHide();\n    }\n    _setListeners() {\n        $91ca15859685b28b$var$EventHandler.on(this._element, $91ca15859685b28b$var$EVENT_MOUSEOVER, (event)=>this._onInteraction(event, true));\n        $91ca15859685b28b$var$EventHandler.on(this._element, $91ca15859685b28b$var$EVENT_MOUSEOUT, (event)=>this._onInteraction(event, false));\n        $91ca15859685b28b$var$EventHandler.on(this._element, $91ca15859685b28b$var$EVENT_FOCUSIN, (event)=>this._onInteraction(event, true));\n        $91ca15859685b28b$var$EventHandler.on(this._element, $91ca15859685b28b$var$EVENT_FOCUSOUT, (event)=>this._onInteraction(event, false));\n    }\n    _clearTimeout() {\n        clearTimeout(this._timeout);\n        this._timeout = null;\n    }\n    // Static\n    static jQueryInterface(config) {\n        return this.each(function() {\n            const data = $91ca15859685b28b$export$8d8dc7d5f743331b.getOrCreateInstance(this, config);\n            if (typeof config === 'string') {\n                if (typeof data[config] === 'undefined') throw new TypeError(`No method named \"${config}\"`);\n                data[config](this);\n            }\n        });\n    }\n}\n/**\n * Data API implementation\n */ $91ca15859685b28b$var$enableDismissTrigger($91ca15859685b28b$export$8d8dc7d5f743331b);\n/**\n * jQuery\n */ $91ca15859685b28b$var$defineJQueryPlugin($91ca15859685b28b$export$8d8dc7d5f743331b);\n\n\n\n\nvar $8if87 = parcelRequire(\"8if87\");\n\nvar $1dc9569bcdd0b469$exports = {};\n/**\n * Componente de Autocomplete reutilizável\n * Usado para campos de busca com HTMX\n */ class $1dc9569bcdd0b469$var$AutocompleteField {\n    constructor(options){\n        this.searchInput = options.searchInput;\n        this.hiddenInput = options.hiddenInput;\n        this.resultsContainer = options.resultsContainer;\n        this.selectedDisplay = options.selectedDisplay;\n        this.selectedText = options.selectedText;\n        this.clearButton = options.clearButton;\n        this.onSelect = options.onSelect || this.defaultOnSelect.bind(this);\n        this.isOpen = false;\n        this.init();\n    }\n    init() {\n        this.bindEvents();\n    }\n    bindEvents() {\n        // Mostrar/esconder resultados baseado no foco e conteúdo\n        this.searchInput.addEventListener('focus', ()=>{\n            if (this.searchInput.value.length >= 2) this.showResults();\n        });\n        this.searchInput.addEventListener('input', ()=>{\n            if (this.searchInput.value.length >= 2) {\n                this.showResults();\n                // Limpa seleção anterior se o usuário digitar novamente\n                if (this.hiddenInput.value) this.clearSelection();\n            } else this.hideResults();\n        });\n        // Fechar autocomplete ao clicar fora\n        document.addEventListener('click', (e)=>{\n            if (!this.searchInput.contains(e.target) && !this.resultsContainer.contains(e.target)) this.hideResults();\n        });\n        // Delegação de evento para clique nos itens\n        this.resultsContainer.addEventListener('click', (e)=>{\n            const item = e.target.closest('.autocomplete-item');\n            if (item && item.dataset.pessoaId) this.selectItem(item);\n        });\n        // Hover nos itens\n        this.resultsContainer.addEventListener('mouseover', (e)=>{\n            const item = e.target.closest('.autocomplete-item');\n            if (item) {\n                this.clearHover();\n                item.classList.add('bg-light');\n            }\n        });\n        this.resultsContainer.addEventListener('mouseout', (e)=>{\n            const item = e.target.closest('.autocomplete-item');\n            if (item) item.classList.remove('bg-light');\n        });\n        // Botão de limpar seleção\n        if (this.clearButton) this.clearButton.addEventListener('click', ()=>{\n            this.clearSelection();\n        });\n    }\n    showResults() {\n        this.resultsContainer.style.display = 'block';\n        this.isOpen = true;\n    }\n    hideResults() {\n        this.resultsContainer.style.display = 'none';\n        this.isOpen = false;\n    }\n    clearHover() {\n        this.resultsContainer.querySelectorAll('.autocomplete-item').forEach((item)=>{\n            item.classList.remove('bg-light');\n        });\n    }\n    selectItem(item) {\n        const pessoaId = item.dataset.pessoaId;\n        const pessoaNome = item.dataset.pessoaNome;\n        const pessoaDoc = item.dataset.pessoaDoc;\n        this.onSelect(pessoaId, pessoaNome, pessoaDoc);\n        this.hideResults();\n    }\n    defaultOnSelect(pessoaId, pessoaNome, pessoaDoc) {\n        // Define os valores nos campos\n        this.hiddenInput.value = pessoaId;\n        this.searchInput.value = `${pessoaNome} - ${pessoaDoc}`;\n        // Mostra a seleção se os elementos existirem\n        if (this.selectedText) this.selectedText.textContent = `${pessoaNome} - ${pessoaDoc}`;\n        if (this.selectedDisplay) this.selectedDisplay.style.display = 'block';\n    }\n    clearSelection() {\n        this.hiddenInput.value = '';\n        this.searchInput.value = '';\n        if (this.selectedDisplay) this.selectedDisplay.style.display = 'none';\n        this.hideResults();\n    }\n}\n// Função global para compatibilidade com templates existentes\nwindow.selecionarPessoa = function(pessoaId, pessoaNome, pessoaDoc) {\n    // Esta função será sobrescrita pelo autocomplete específico de cada modal\n    console.warn(\"selecionarPessoa n\\xe3o foi inicializada corretamente\");\n};\nwindow.limparSelecaoPessoa = function() {\n    // Esta função será sobrescrita pelo autocomplete específico de cada modal  \n    console.warn(\"limparSelecaoPessoa n\\xe3o foi inicializada corretamente\");\n};\n// Exporta a classe para uso em módulos\nif ($1dc9569bcdd0b469$exports) $1dc9569bcdd0b469$exports = $1dc9569bcdd0b469$var$AutocompleteField;\n// Disponibiliza globalmente\nwindow.AutocompleteField = $1dc9569bcdd0b469$var$AutocompleteField;\n\n\n// Make libraries available globally\nwindow.bootstrap = $91ca15859685b28b$exports;\nwindow.htmx = (0, $8if87.default);\n// Initialize Bootstrap components\ndocument.addEventListener('DOMContentLoaded', function() {\n    // Initialize all tooltips\n    const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]');\n    const tooltipList = [\n        ...tooltipTriggerList\n    ].map((tooltipTriggerEl)=>new $91ca15859685b28b$exports.Tooltip(tooltipTriggerEl));\n    // Initialize all popovers\n    const popoverTriggerList = document.querySelectorAll('[data-bs-toggle=\"popover\"]');\n    const popoverList = [\n        ...popoverTriggerList\n    ].map((popoverTriggerEl)=>new $91ca15859685b28b$exports.Popover(popoverTriggerEl));\n});\n\n})();\n//# sourceMappingURL=app.js.map\n","var htmx = (function() {\n  'use strict'\n\n  // Public API\n  const htmx = {\n    // Tsc madness here, assigning the functions directly results in an invalid TypeScript output, but reassigning is fine\n    /* Event processing */\n    /** @type {typeof onLoadHelper} */\n    onLoad: null,\n    /** @type {typeof processNode} */\n    process: null,\n    /** @type {typeof addEventListenerImpl} */\n    on: null,\n    /** @type {typeof removeEventListenerImpl} */\n    off: null,\n    /** @type {typeof triggerEvent} */\n    trigger: null,\n    /** @type {typeof ajaxHelper} */\n    ajax: null,\n    /* DOM querying helpers */\n    /** @type {typeof find} */\n    find: null,\n    /** @type {typeof findAll} */\n    findAll: null,\n    /** @type {typeof closest} */\n    closest: null,\n    /**\n     * Returns the input values that would resolve for a given element via the htmx value resolution mechanism\n     *\n     * @see https://htmx.org/api/#values\n     *\n     * @param {Element} elt the element to resolve values on\n     * @param {HttpVerb} type the request type (e.g. **get** or **post**) non-GET's will include the enclosing form of the element. Defaults to **post**\n     * @returns {Object}\n     */\n    values: function(elt, type) {\n      const inputValues = getInputValues(elt, type || 'post')\n      return inputValues.values\n    },\n    /* DOM manipulation helpers */\n    /** @type {typeof removeElement} */\n    remove: null,\n    /** @type {typeof addClassToElement} */\n    addClass: null,\n    /** @type {typeof removeClassFromElement} */\n    removeClass: null,\n    /** @type {typeof toggleClassOnElement} */\n    toggleClass: null,\n    /** @type {typeof takeClassForElement} */\n    takeClass: null,\n    /** @type {typeof swap} */\n    swap: null,\n    /* Extension entrypoints */\n    /** @type {typeof defineExtension} */\n    defineExtension: null,\n    /** @type {typeof removeExtension} */\n    removeExtension: null,\n    /* Debugging */\n    /** @type {typeof logAll} */\n    logAll: null,\n    /** @type {typeof logNone} */\n    logNone: null,\n    /* Debugging */\n    /**\n     * The logger htmx uses to log with\n     *\n     * @see https://htmx.org/api/#logger\n     */\n    logger: null,\n    /**\n     * A property holding the configuration htmx uses at runtime.\n     *\n     * Note that using a [meta tag](https://htmx.org/docs/#config) is the preferred mechanism for setting these properties.\n     *\n     * @see https://htmx.org/api/#config\n     */\n    config: {\n      /**\n       * Whether to use history.\n       * @type boolean\n       * @default true\n       */\n      historyEnabled: true,\n      /**\n       * The number of pages to keep in **sessionStorage** for history support.\n       * @type number\n       * @default 10\n       */\n      historyCacheSize: 10,\n      /**\n       * @type boolean\n       * @default false\n       */\n      refreshOnHistoryMiss: false,\n      /**\n       * The default swap style to use if **[hx-swap](https://htmx.org/attributes/hx-swap)** is omitted.\n       * @type HtmxSwapStyle\n       * @default 'innerHTML'\n       */\n      defaultSwapStyle: 'innerHTML',\n      /**\n       * The default delay between receiving a response from the server and doing the swap.\n       * @type number\n       * @default 0\n       */\n      defaultSwapDelay: 0,\n      /**\n       * The default delay between completing the content swap and settling attributes.\n       * @type number\n       * @default 20\n       */\n      defaultSettleDelay: 20,\n      /**\n       * If true, htmx will inject a small amount of CSS into the page to make indicators invisible unless the **htmx-indicator** class is present.\n       * @type boolean\n       * @default true\n       */\n      includeIndicatorStyles: true,\n      /**\n       * The class to place on indicators when a request is in flight.\n       * @type string\n       * @default 'htmx-indicator'\n       */\n      indicatorClass: 'htmx-indicator',\n      /**\n       * The class to place on triggering elements when a request is in flight.\n       * @type string\n       * @default 'htmx-request'\n       */\n      requestClass: 'htmx-request',\n      /**\n       * The class to temporarily place on elements that htmx has added to the DOM.\n       * @type string\n       * @default 'htmx-added'\n       */\n      addedClass: 'htmx-added',\n      /**\n       * The class to place on target elements when htmx is in the settling phase.\n       * @type string\n       * @default 'htmx-settling'\n       */\n      settlingClass: 'htmx-settling',\n      /**\n       * The class to place on target elements when htmx is in the swapping phase.\n       * @type string\n       * @default 'htmx-swapping'\n       */\n      swappingClass: 'htmx-swapping',\n      /**\n       * Allows the use of eval-like functionality in htmx, to enable **hx-vars**, trigger conditions & script tag evaluation. Can be set to **false** for CSP compatibility.\n       * @type boolean\n       * @default true\n       */\n      allowEval: true,\n      /**\n       * If set to false, disables the interpretation of script tags.\n       * @type boolean\n       * @default true\n       */\n      allowScriptTags: true,\n      /**\n       * If set, the nonce will be added to inline scripts.\n       * @type string\n       * @default ''\n       */\n      inlineScriptNonce: '',\n      /**\n       * If set, the nonce will be added to inline styles.\n       * @type string\n       * @default ''\n       */\n      inlineStyleNonce: '',\n      /**\n       * The attributes to settle during the settling phase.\n       * @type string[]\n       * @default ['class', 'style', 'width', 'height']\n       */\n      attributesToSettle: ['class', 'style', 'width', 'height'],\n      /**\n       * Allow cross-site Access-Control requests using credentials such as cookies, authorization headers or TLS client certificates.\n       * @type boolean\n       * @default false\n       */\n      withCredentials: false,\n      /**\n       * @type number\n       * @default 0\n       */\n      timeout: 0,\n      /**\n       * The default implementation of **getWebSocketReconnectDelay** for reconnecting after unexpected connection loss by the event code **Abnormal Closure**, **Service Restart** or **Try Again Later**.\n       * @type {'full-jitter' | ((retryCount:number) => number)}\n       * @default \"full-jitter\"\n       */\n      wsReconnectDelay: 'full-jitter',\n      /**\n       * The type of binary data being received over the WebSocket connection\n       * @type BinaryType\n       * @default 'blob'\n       */\n      wsBinaryType: 'blob',\n      /**\n       * @type string\n       * @default '[hx-disable], [data-hx-disable]'\n       */\n      disableSelector: '[hx-disable], [data-hx-disable]',\n      /**\n       * @type {'auto' | 'instant' | 'smooth'}\n       * @default 'instant'\n       */\n      scrollBehavior: 'instant',\n      /**\n       * If the focused element should be scrolled into view.\n       * @type boolean\n       * @default false\n       */\n      defaultFocusScroll: false,\n      /**\n       * If set to true htmx will include a cache-busting parameter in GET requests to avoid caching partial responses by the browser\n       * @type boolean\n       * @default false\n       */\n      getCacheBusterParam: false,\n      /**\n       * If set to true, htmx will use the View Transition API when swapping in new content.\n       * @type boolean\n       * @default false\n       */\n      globalViewTransitions: false,\n      /**\n       * htmx will format requests with these methods by encoding their parameters in the URL, not the request body\n       * @type {(HttpVerb)[]}\n       * @default ['get', 'delete']\n       */\n      methodsThatUseUrlParams: ['get', 'delete'],\n      /**\n       * If set to true, disables htmx-based requests to non-origin hosts.\n       * @type boolean\n       * @default false\n       */\n      selfRequestsOnly: true,\n      /**\n       * If set to true htmx will not update the title of the document when a title tag is found in new content\n       * @type boolean\n       * @default false\n       */\n      ignoreTitle: false,\n      /**\n       * Whether the target of a boosted element is scrolled into the viewport.\n       * @type boolean\n       * @default true\n       */\n      scrollIntoViewOnBoost: true,\n      /**\n       * The cache to store evaluated trigger specifications into.\n       * You may define a simple object to use a never-clearing cache, or implement your own system using a [proxy object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Proxy)\n       * @type {Object|null}\n       * @default null\n       */\n      triggerSpecsCache: null,\n      /** @type boolean */\n      disableInheritance: false,\n      /** @type HtmxResponseHandlingConfig[] */\n      responseHandling: [\n        { code: '204', swap: false },\n        { code: '[23]..', swap: true },\n        { code: '[45]..', swap: false, error: true }\n      ],\n      /**\n       * Whether to process OOB swaps on elements that are nested within the main response element.\n       * @type boolean\n       * @default true\n       */\n      allowNestedOobSwaps: true,\n      /**\n       * Whether to treat history cache miss full page reload requests as a \"HX-Request\" by returning this response header\n       * This should always be disabled when using HX-Request header to optionally return partial responses\n       * @type boolean\n       * @default true\n       */\n      historyRestoreAsHxRequest: true\n    },\n    /** @type {typeof parseInterval} */\n    parseInterval: null,\n    /**\n     * proxy of window.location used for page reload functions\n     * @type location\n     */\n    location,\n    /** @type {typeof internalEval} */\n    _: null,\n    version: '2.0.6'\n  }\n  // Tsc madness part 2\n  htmx.onLoad = onLoadHelper\n  htmx.process = processNode\n  htmx.on = addEventListenerImpl\n  htmx.off = removeEventListenerImpl\n  htmx.trigger = triggerEvent\n  htmx.ajax = ajaxHelper\n  htmx.find = find\n  htmx.findAll = findAll\n  htmx.closest = closest\n  htmx.remove = removeElement\n  htmx.addClass = addClassToElement\n  htmx.removeClass = removeClassFromElement\n  htmx.toggleClass = toggleClassOnElement\n  htmx.takeClass = takeClassForElement\n  htmx.swap = swap\n  htmx.defineExtension = defineExtension\n  htmx.removeExtension = removeExtension\n  htmx.logAll = logAll\n  htmx.logNone = logNone\n  htmx.parseInterval = parseInterval\n  htmx._ = internalEval\n\n  const internalAPI = {\n    addTriggerHandler,\n    bodyContains,\n    canAccessLocalStorage,\n    findThisElement,\n    filterValues,\n    swap,\n    hasAttribute,\n    getAttributeValue,\n    getClosestAttributeValue,\n    getClosestMatch,\n    getExpressionVars,\n    getHeaders,\n    getInputValues,\n    getInternalData,\n    getSwapSpecification,\n    getTriggerSpecs,\n    getTarget,\n    makeFragment,\n    mergeObjects,\n    makeSettleInfo,\n    oobSwap,\n    querySelectorExt,\n    settleImmediately,\n    shouldCancel,\n    triggerEvent,\n    triggerErrorEvent,\n    withExtensions\n  }\n\n  const VERBS = ['get', 'post', 'put', 'delete', 'patch']\n  const VERB_SELECTOR = VERBS.map(function(verb) {\n    return '[hx-' + verb + '], [data-hx-' + verb + ']'\n  }).join(', ')\n\n  //= ===================================================================\n  // Utilities\n  //= ===================================================================\n\n  /**\n   * Parses an interval string consistent with the way htmx does. Useful for plugins that have timing-related attributes.\n   *\n   * Caution: Accepts an int followed by either **s** or **ms**. All other values use **parseFloat**\n   *\n   * @see https://htmx.org/api/#parseInterval\n   *\n   * @param {string} str timing string\n   * @returns {number|undefined}\n   */\n  function parseInterval(str) {\n    if (str == undefined) {\n      return undefined\n    }\n\n    let interval = NaN\n    if (str.slice(-2) == 'ms') {\n      interval = parseFloat(str.slice(0, -2))\n    } else if (str.slice(-1) == 's') {\n      interval = parseFloat(str.slice(0, -1)) * 1000\n    } else if (str.slice(-1) == 'm') {\n      interval = parseFloat(str.slice(0, -1)) * 1000 * 60\n    } else {\n      interval = parseFloat(str)\n    }\n    return isNaN(interval) ? undefined : interval\n  }\n\n  /**\n   * @param {Node} elt\n   * @param {string} name\n   * @returns {(string | null)}\n   */\n  function getRawAttribute(elt, name) {\n    return elt instanceof Element && elt.getAttribute(name)\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {string} qualifiedName\n   * @returns {boolean}\n   */\n  // resolve with both hx and data-hx prefixes\n  function hasAttribute(elt, qualifiedName) {\n    return !!elt.hasAttribute && (elt.hasAttribute(qualifiedName) ||\n      elt.hasAttribute('data-' + qualifiedName))\n  }\n\n  /**\n   *\n   * @param {Node} elt\n   * @param {string} qualifiedName\n   * @returns {(string | null)}\n   */\n  function getAttributeValue(elt, qualifiedName) {\n    return getRawAttribute(elt, qualifiedName) || getRawAttribute(elt, 'data-' + qualifiedName)\n  }\n\n  /**\n   * @param {Node} elt\n   * @returns {Node | null}\n   */\n  function parentElt(elt) {\n    const parent = elt.parentElement\n    if (!parent && elt.parentNode instanceof ShadowRoot) return elt.parentNode\n    return parent\n  }\n\n  /**\n   * @returns {Document}\n   */\n  function getDocument() {\n    return document\n  }\n\n  /**\n   * @param {Node} elt\n   * @param {boolean} global\n   * @returns {Node|Document}\n   */\n  function getRootNode(elt, global) {\n    return elt.getRootNode ? elt.getRootNode({ composed: global }) : getDocument()\n  }\n\n  /**\n   * @param {Node} elt\n   * @param {(e:Node) => boolean} condition\n   * @returns {Node | null}\n   */\n  function getClosestMatch(elt, condition) {\n    while (elt && !condition(elt)) {\n      elt = parentElt(elt)\n    }\n\n    return elt || null\n  }\n\n  /**\n   * @param {Element} initialElement\n   * @param {Element} ancestor\n   * @param {string} attributeName\n   * @returns {string|null}\n   */\n  function getAttributeValueWithDisinheritance(initialElement, ancestor, attributeName) {\n    const attributeValue = getAttributeValue(ancestor, attributeName)\n    const disinherit = getAttributeValue(ancestor, 'hx-disinherit')\n    var inherit = getAttributeValue(ancestor, 'hx-inherit')\n    if (initialElement !== ancestor) {\n      if (htmx.config.disableInheritance) {\n        if (inherit && (inherit === '*' || inherit.split(' ').indexOf(attributeName) >= 0)) {\n          return attributeValue\n        } else {\n          return null\n        }\n      }\n      if (disinherit && (disinherit === '*' || disinherit.split(' ').indexOf(attributeName) >= 0)) {\n        return 'unset'\n      }\n    }\n    return attributeValue\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {string} attributeName\n   * @returns {string | null}\n   */\n  function getClosestAttributeValue(elt, attributeName) {\n    let closestAttr = null\n    getClosestMatch(elt, function(e) {\n      return !!(closestAttr = getAttributeValueWithDisinheritance(elt, asElement(e), attributeName))\n    })\n    if (closestAttr !== 'unset') {\n      return closestAttr\n    }\n  }\n\n  /**\n   * @param {Node} elt\n   * @param {string} selector\n   * @returns {boolean}\n   */\n  function matches(elt, selector) {\n    return elt instanceof Element && elt.matches(selector)\n  }\n\n  /**\n   * @param {string} str\n   * @returns {string}\n   */\n  function getStartTag(str) {\n    const tagMatcher = /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i\n    const match = tagMatcher.exec(str)\n    if (match) {\n      return match[1].toLowerCase()\n    } else {\n      return ''\n    }\n  }\n\n  /**\n   * @param {string} resp\n   * @returns {Document}\n   */\n  function parseHTML(resp) {\n    const parser = new DOMParser()\n    return parser.parseFromString(resp, 'text/html')\n  }\n\n  /**\n   * @param {DocumentFragment} fragment\n   * @param {Node} elt\n   */\n  function takeChildrenFor(fragment, elt) {\n    while (elt.childNodes.length > 0) {\n      fragment.append(elt.childNodes[0])\n    }\n  }\n\n  /**\n   * @param {HTMLScriptElement} script\n   * @returns {HTMLScriptElement}\n   */\n  function duplicateScript(script) {\n    const newScript = getDocument().createElement('script')\n    forEach(script.attributes, function(attr) {\n      newScript.setAttribute(attr.name, attr.value)\n    })\n    newScript.textContent = script.textContent\n    newScript.async = false\n    if (htmx.config.inlineScriptNonce) {\n      newScript.nonce = htmx.config.inlineScriptNonce\n    }\n    return newScript\n  }\n\n  /**\n   * @param {HTMLScriptElement} script\n   * @returns {boolean}\n   */\n  function isJavaScriptScriptNode(script) {\n    return script.matches('script') && (script.type === 'text/javascript' || script.type === 'module' || script.type === '')\n  }\n\n  /**\n   * we have to make new copies of script tags that we are going to insert because\n   * SOME browsers (not saying who, but it involves an element and an animal) don't\n   * execute scripts created in <template> tags when they are inserted into the DOM\n   * and all the others do lmao\n   * @param {DocumentFragment} fragment\n   */\n  function normalizeScriptTags(fragment) {\n    Array.from(fragment.querySelectorAll('script')).forEach(/** @param {HTMLScriptElement} script */ (script) => {\n      if (isJavaScriptScriptNode(script)) {\n        const newScript = duplicateScript(script)\n        const parent = script.parentNode\n        try {\n          parent.insertBefore(newScript, script)\n        } catch (e) {\n          logError(e)\n        } finally {\n          script.remove()\n        }\n      }\n    })\n  }\n\n  /**\n   * @typedef {DocumentFragment & {title?: string}} DocumentFragmentWithTitle\n   * @description  a document fragment representing the response HTML, including\n   * a `title` property for any title information found\n   */\n\n  /**\n   * @param {string} response HTML\n   * @returns {DocumentFragmentWithTitle}\n   */\n  function makeFragment(response) {\n    // strip head tag to determine shape of response we are dealing with\n    const responseWithNoHead = response.replace(/<head(\\s[^>]*)?>[\\s\\S]*?<\\/head>/i, '')\n    const startTag = getStartTag(responseWithNoHead)\n    /** @type DocumentFragmentWithTitle */\n    let fragment\n    if (startTag === 'html') {\n      // if it is a full document, parse it and return the body\n      fragment = /** @type DocumentFragmentWithTitle */ (new DocumentFragment())\n      const doc = parseHTML(response)\n      takeChildrenFor(fragment, doc.body)\n      fragment.title = doc.title\n    } else if (startTag === 'body') {\n      // parse body w/o wrapping in template\n      fragment = /** @type DocumentFragmentWithTitle */ (new DocumentFragment())\n      const doc = parseHTML(responseWithNoHead)\n      takeChildrenFor(fragment, doc.body)\n      fragment.title = doc.title\n    } else {\n      // otherwise we have non-body partial HTML content, so wrap it in a template to maximize parsing flexibility\n      const doc = parseHTML('<body><template class=\"internal-htmx-wrapper\">' + responseWithNoHead + '</template></body>')\n      fragment = /** @type DocumentFragmentWithTitle */ (doc.querySelector('template').content)\n      // extract title into fragment for later processing\n      fragment.title = doc.title\n\n      // for legacy reasons we support a title tag at the root level of non-body responses, so we need to handle it\n      var titleElement = fragment.querySelector('title')\n      if (titleElement && titleElement.parentNode === fragment) {\n        titleElement.remove()\n        fragment.title = titleElement.innerText\n      }\n    }\n    if (fragment) {\n      if (htmx.config.allowScriptTags) {\n        normalizeScriptTags(fragment)\n      } else {\n        // remove all script tags if scripts are disabled\n        fragment.querySelectorAll('script').forEach((script) => script.remove())\n      }\n    }\n    return fragment\n  }\n\n  /**\n   * @param {Function} func\n   */\n  function maybeCall(func) {\n    if (func) {\n      func()\n    }\n  }\n\n  /**\n   * @param {any} o\n   * @param {string} type\n   * @returns\n   */\n  function isType(o, type) {\n    return Object.prototype.toString.call(o) === '[object ' + type + ']'\n  }\n\n  /**\n   * @param {*} o\n   * @returns {o is Function}\n   */\n  function isFunction(o) {\n    return typeof o === 'function'\n  }\n\n  /**\n   * @param {*} o\n   * @returns {o is Object}\n   */\n  function isRawObject(o) {\n    return isType(o, 'Object')\n  }\n\n  /**\n   * @typedef {Object} OnHandler\n   * @property {(keyof HTMLElementEventMap)|string} event\n   * @property {EventListener} listener\n   */\n\n  /**\n   * @typedef {Object} ListenerInfo\n   * @property {string} trigger\n   * @property {EventListener} listener\n   * @property {EventTarget} on\n   */\n\n  /**\n   * @typedef {Object} HtmxNodeInternalData\n   * Element data\n   * @property {number} [initHash]\n   * @property {boolean} [boosted]\n   * @property {OnHandler[]} [onHandlers]\n   * @property {number} [timeout]\n   * @property {ListenerInfo[]} [listenerInfos]\n   * @property {boolean} [cancelled]\n   * @property {boolean} [triggeredOnce]\n   * @property {number} [delayed]\n   * @property {number|null} [throttle]\n   * @property {WeakMap<HtmxTriggerSpecification,WeakMap<EventTarget,string>>} [lastValue]\n   * @property {boolean} [loaded]\n   * @property {string} [path]\n   * @property {string} [verb]\n   * @property {boolean} [polling]\n   * @property {HTMLButtonElement|HTMLInputElement|null} [lastButtonClicked]\n   * @property {number} [requestCount]\n   * @property {XMLHttpRequest} [xhr]\n   * @property {(() => void)[]} [queuedRequests]\n   * @property {boolean} [abortable]\n   * @property {boolean} [firstInitCompleted]\n   *\n   * Event data\n   * @property {HtmxTriggerSpecification} [triggerSpec]\n   * @property {EventTarget[]} [handledFor]\n   */\n\n  /**\n   * getInternalData retrieves \"private\" data stored by htmx within an element\n   * @param {EventTarget|Event} elt\n   * @returns {HtmxNodeInternalData}\n   */\n  function getInternalData(elt) {\n    const dataProp = 'htmx-internal-data'\n    let data = elt[dataProp]\n    if (!data) {\n      data = elt[dataProp] = {}\n    }\n    return data\n  }\n\n  /**\n   * toArray converts an ArrayLike object into a real array.\n   * @template T\n   * @param {ArrayLike<T>} arr\n   * @returns {T[]}\n   */\n  function toArray(arr) {\n    const returnArr = []\n    if (arr) {\n      for (let i = 0; i < arr.length; i++) {\n        returnArr.push(arr[i])\n      }\n    }\n    return returnArr\n  }\n\n  /**\n   * @template T\n   * @param {T[]|NamedNodeMap|HTMLCollection|HTMLFormControlsCollection|ArrayLike<T>} arr\n   * @param {(T) => void} func\n   */\n  function forEach(arr, func) {\n    if (arr) {\n      for (let i = 0; i < arr.length; i++) {\n        func(arr[i])\n      }\n    }\n  }\n\n  /**\n   * @param {Element} el\n   * @returns {boolean}\n   */\n  function isScrolledIntoView(el) {\n    const rect = el.getBoundingClientRect()\n    const elemTop = rect.top\n    const elemBottom = rect.bottom\n    return elemTop < window.innerHeight && elemBottom >= 0\n  }\n\n  /**\n   * Checks whether the element is in the document (includes shadow roots).\n   * This function this is a slight misnomer; it will return true even for elements in the head.\n   *\n   * @param {Node} elt\n   * @returns {boolean}\n   */\n  function bodyContains(elt) {\n    return elt.getRootNode({ composed: true }) === document\n  }\n\n  /**\n   * @param {string} trigger\n   * @returns {string[]}\n   */\n  function splitOnWhitespace(trigger) {\n    return trigger.trim().split(/\\s+/)\n  }\n\n  /**\n   * mergeObjects takes all the keys from\n   * obj2 and duplicates them into obj1\n   * @template T1\n   * @template T2\n   * @param {T1} obj1\n   * @param {T2} obj2\n   * @returns {T1 & T2}\n   */\n  function mergeObjects(obj1, obj2) {\n    for (const key in obj2) {\n      if (obj2.hasOwnProperty(key)) {\n        // @ts-ignore tsc doesn't seem to properly handle types merging\n        obj1[key] = obj2[key]\n      }\n    }\n    // @ts-ignore tsc doesn't seem to properly handle types merging\n    return obj1\n  }\n\n  /**\n   * @param {string} jString\n   * @returns {any|null}\n   */\n  function parseJSON(jString) {\n    try {\n      return JSON.parse(jString)\n    } catch (error) {\n      logError(error)\n      return null\n    }\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  function canAccessLocalStorage() {\n    const test = 'htmx:sessionStorageTest'\n    try {\n      sessionStorage.setItem(test, test)\n      sessionStorage.removeItem(test)\n      return true\n    } catch (e) {\n      return false\n    }\n  }\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  function normalizePath(path) {\n    // use dummy base URL to allow normalize on path only\n    const url = new URL(path, 'http://x')\n    if (url) {\n      path = url.pathname + url.search\n    }\n    // remove trailing slash, unless index page\n    if (path != '/') {\n      path = path.replace(/\\/+$/, '')\n    }\n    return path\n  }\n\n  //= =========================================================================================\n  // public API\n  //= =========================================================================================\n\n  /**\n   * @param {string} str\n   * @returns {any}\n   */\n  function internalEval(str) {\n    return maybeEval(getDocument().body, function() {\n      return eval(str)\n    })\n  }\n\n  /**\n   * Adds a callback for the **htmx:load** event. This can be used to process new content, for example initializing the content with a javascript library\n   *\n   * @see https://htmx.org/api/#onLoad\n   *\n   * @param {(elt: Node) => void} callback the callback to call on newly loaded content\n   * @returns {EventListener}\n   */\n  function onLoadHelper(callback) {\n    const value = htmx.on('htmx:load', /** @param {CustomEvent} evt */ function(evt) {\n      callback(evt.detail.elt)\n    })\n    return value\n  }\n\n  /**\n   * Log all htmx events, useful for debugging.\n   *\n   * @see https://htmx.org/api/#logAll\n   */\n  function logAll() {\n    htmx.logger = function(elt, event, data) {\n      if (console) {\n        console.log(event, elt, data)\n      }\n    }\n  }\n\n  function logNone() {\n    htmx.logger = null\n  }\n\n  /**\n   * Finds an element matching the selector\n   *\n   * @see https://htmx.org/api/#find\n   *\n   * @param {ParentNode|string} eltOrSelector  the root element to find the matching element in, inclusive | the selector to match\n   * @param {string} [selector] the selector to match\n   * @returns {Element|null}\n   */\n  function find(eltOrSelector, selector) {\n    if (typeof eltOrSelector !== 'string') {\n      return eltOrSelector.querySelector(selector)\n    } else {\n      return find(getDocument(), eltOrSelector)\n    }\n  }\n\n  /**\n   * Finds all elements matching the selector\n   *\n   * @see https://htmx.org/api/#findAll\n   *\n   * @param {ParentNode|string} eltOrSelector the root element to find the matching elements in, inclusive | the selector to match\n   * @param {string} [selector] the selector to match\n   * @returns {NodeListOf<Element>}\n   */\n  function findAll(eltOrSelector, selector) {\n    if (typeof eltOrSelector !== 'string') {\n      return eltOrSelector.querySelectorAll(selector)\n    } else {\n      return findAll(getDocument(), eltOrSelector)\n    }\n  }\n\n  /**\n   * @returns Window\n   */\n  function getWindow() {\n    return window\n  }\n\n  /**\n   * Removes an element from the DOM\n   *\n   * @see https://htmx.org/api/#remove\n   *\n   * @param {Node} elt\n   * @param {number} [delay]\n   */\n  function removeElement(elt, delay) {\n    elt = resolveTarget(elt)\n    if (delay) {\n      getWindow().setTimeout(function() {\n        removeElement(elt)\n        elt = null\n      }, delay)\n    } else {\n      parentElt(elt).removeChild(elt)\n    }\n  }\n\n  /**\n   * @param {any} elt\n   * @return {Element|null}\n   */\n  function asElement(elt) {\n    return elt instanceof Element ? elt : null\n  }\n\n  /**\n   * @param {any} elt\n   * @return {HTMLElement|null}\n   */\n  function asHtmlElement(elt) {\n    return elt instanceof HTMLElement ? elt : null\n  }\n\n  /**\n   * @param {any} value\n   * @return {string|null}\n   */\n  function asString(value) {\n    return typeof value === 'string' ? value : null\n  }\n\n  /**\n   * @param {EventTarget} elt\n   * @return {ParentNode|null}\n   */\n  function asParentNode(elt) {\n    return elt instanceof Element || elt instanceof Document || elt instanceof DocumentFragment ? elt : null\n  }\n\n  /**\n   * This method adds a class to the given element.\n   *\n   * @see https://htmx.org/api/#addClass\n   *\n   * @param {Element|string} elt the element to add the class to\n   * @param {string} clazz the class to add\n   * @param {number} [delay] the delay (in milliseconds) before class is added\n   */\n  function addClassToElement(elt, clazz, delay) {\n    elt = asElement(resolveTarget(elt))\n    if (!elt) {\n      return\n    }\n    if (delay) {\n      getWindow().setTimeout(function() {\n        addClassToElement(elt, clazz)\n        elt = null\n      }, delay)\n    } else {\n      elt.classList && elt.classList.add(clazz)\n    }\n  }\n\n  /**\n   * Removes a class from the given element\n   *\n   * @see https://htmx.org/api/#removeClass\n   *\n   * @param {Node|string} node element to remove the class from\n   * @param {string} clazz the class to remove\n   * @param {number} [delay] the delay (in milliseconds before class is removed)\n   */\n  function removeClassFromElement(node, clazz, delay) {\n    let elt = asElement(resolveTarget(node))\n    if (!elt) {\n      return\n    }\n    if (delay) {\n      getWindow().setTimeout(function() {\n        removeClassFromElement(elt, clazz)\n        elt = null\n      }, delay)\n    } else {\n      if (elt.classList) {\n        elt.classList.remove(clazz)\n        // if there are no classes left, remove the class attribute\n        if (elt.classList.length === 0) {\n          elt.removeAttribute('class')\n        }\n      }\n    }\n  }\n\n  /**\n   * Toggles the given class on an element\n   *\n   * @see https://htmx.org/api/#toggleClass\n   *\n   * @param {Element|string} elt the element to toggle the class on\n   * @param {string} clazz the class to toggle\n   */\n  function toggleClassOnElement(elt, clazz) {\n    elt = resolveTarget(elt)\n    elt.classList.toggle(clazz)\n  }\n\n  /**\n   * Takes the given class from its siblings, so that among its siblings, only the given element will have the class.\n   *\n   * @see https://htmx.org/api/#takeClass\n   *\n   * @param {Node|string} elt the element that will take the class\n   * @param {string} clazz the class to take\n   */\n  function takeClassForElement(elt, clazz) {\n    elt = resolveTarget(elt)\n    forEach(elt.parentElement.children, function(child) {\n      removeClassFromElement(child, clazz)\n    })\n    addClassToElement(asElement(elt), clazz)\n  }\n\n  /**\n   * Finds the closest matching element in the given elements parentage, inclusive of the element\n   *\n   * @see https://htmx.org/api/#closest\n   *\n   * @param {Element|string} elt the element to find the selector from\n   * @param {string} selector the selector to find\n   * @returns {Element|null}\n   */\n  function closest(elt, selector) {\n    elt = asElement(resolveTarget(elt))\n    if (elt) {\n      return elt.closest(selector)\n    }\n    return null\n  }\n\n  /**\n   * @param {string} str\n   * @param {string} prefix\n   * @returns {boolean}\n   */\n  function startsWith(str, prefix) {\n    return str.substring(0, prefix.length) === prefix\n  }\n\n  /**\n   * @param {string} str\n   * @param {string} suffix\n   * @returns {boolean}\n   */\n  function endsWith(str, suffix) {\n    return str.substring(str.length - suffix.length) === suffix\n  }\n\n  /**\n   * @param {string} selector\n   * @returns {string}\n   */\n  function normalizeSelector(selector) {\n    const trimmedSelector = selector.trim()\n    if (startsWith(trimmedSelector, '<') && endsWith(trimmedSelector, '/>')) {\n      return trimmedSelector.substring(1, trimmedSelector.length - 2)\n    } else {\n      return trimmedSelector\n    }\n  }\n\n  /**\n   * @param {Node|Element|Document|string} elt\n   * @param {string} selector\n   * @param {boolean=} global\n   * @returns {(Node|Window)[]}\n   */\n  function querySelectorAllExt(elt, selector, global) {\n    if (selector.indexOf('global ') === 0) {\n      return querySelectorAllExt(elt, selector.slice(7), true)\n    }\n\n    elt = resolveTarget(elt)\n\n    const parts = []\n    {\n      let chevronsCount = 0\n      let offset = 0\n      for (let i = 0; i < selector.length; i++) {\n        const char = selector[i]\n        if (char === ',' && chevronsCount === 0) {\n          parts.push(selector.substring(offset, i))\n          offset = i + 1\n          continue\n        }\n        if (char === '<') {\n          chevronsCount++\n        } else if (char === '/' && i < selector.length - 1 && selector[i + 1] === '>') {\n          chevronsCount--\n        }\n      }\n      if (offset < selector.length) {\n        parts.push(selector.substring(offset))\n      }\n    }\n\n    const result = []\n    const unprocessedParts = []\n    while (parts.length > 0) {\n      const selector = normalizeSelector(parts.shift())\n      let item\n      if (selector.indexOf('closest ') === 0) {\n        item = closest(asElement(elt), normalizeSelector(selector.slice(8)))\n      } else if (selector.indexOf('find ') === 0) {\n        item = find(asParentNode(elt), normalizeSelector(selector.slice(5)))\n      } else if (selector === 'next' || selector === 'nextElementSibling') {\n        item = asElement(elt).nextElementSibling\n      } else if (selector.indexOf('next ') === 0) {\n        item = scanForwardQuery(elt, normalizeSelector(selector.slice(5)), !!global)\n      } else if (selector === 'previous' || selector === 'previousElementSibling') {\n        item = asElement(elt).previousElementSibling\n      } else if (selector.indexOf('previous ') === 0) {\n        item = scanBackwardsQuery(elt, normalizeSelector(selector.slice(9)), !!global)\n      } else if (selector === 'document') {\n        item = document\n      } else if (selector === 'window') {\n        item = window\n      } else if (selector === 'body') {\n        item = document.body\n      } else if (selector === 'root') {\n        item = getRootNode(elt, !!global)\n      } else if (selector === 'host') {\n        item = (/** @type ShadowRoot */(elt.getRootNode())).host\n      } else {\n        unprocessedParts.push(selector)\n      }\n\n      if (item) {\n        result.push(item)\n      }\n    }\n\n    if (unprocessedParts.length > 0) {\n      const standardSelector = unprocessedParts.join(',')\n      const rootNode = asParentNode(getRootNode(elt, !!global))\n      result.push(...toArray(rootNode.querySelectorAll(standardSelector)))\n    }\n\n    return result\n  }\n\n  /**\n   * @param {Node} start\n   * @param {string} match\n   * @param {boolean} global\n   * @returns {Element}\n   */\n  var scanForwardQuery = function(start, match, global) {\n    const results = asParentNode(getRootNode(start, global)).querySelectorAll(match)\n    for (let i = 0; i < results.length; i++) {\n      const elt = results[i]\n      if (elt.compareDocumentPosition(start) === Node.DOCUMENT_POSITION_PRECEDING) {\n        return elt\n      }\n    }\n  }\n\n  /**\n   * @param {Node} start\n   * @param {string} match\n   * @param {boolean} global\n   * @returns {Element}\n   */\n  var scanBackwardsQuery = function(start, match, global) {\n    const results = asParentNode(getRootNode(start, global)).querySelectorAll(match)\n    for (let i = results.length - 1; i >= 0; i--) {\n      const elt = results[i]\n      if (elt.compareDocumentPosition(start) === Node.DOCUMENT_POSITION_FOLLOWING) {\n        return elt\n      }\n    }\n  }\n\n  /**\n   * @param {Node|string} eltOrSelector\n   * @param {string=} selector\n   * @returns {Node|Window}\n   */\n  function querySelectorExt(eltOrSelector, selector) {\n    if (typeof eltOrSelector !== 'string') {\n      return querySelectorAllExt(eltOrSelector, selector)[0]\n    } else {\n      return querySelectorAllExt(getDocument().body, eltOrSelector)[0]\n    }\n  }\n\n  /**\n   * @template {EventTarget} T\n   * @param {T|string} eltOrSelector\n   * @param {T} [context]\n   * @returns {Element|T|null}\n   */\n  function resolveTarget(eltOrSelector, context) {\n    if (typeof eltOrSelector === 'string') {\n      return find(asParentNode(context) || document, eltOrSelector)\n    } else {\n      return eltOrSelector\n    }\n  }\n\n  /**\n   * @typedef {keyof HTMLElementEventMap|string} AnyEventName\n   */\n\n  /**\n   * @typedef {Object} EventArgs\n   * @property {EventTarget} target\n   * @property {AnyEventName} event\n   * @property {EventListener} listener\n   * @property {Object|boolean} options\n   */\n\n  /**\n   * @param {EventTarget|AnyEventName} arg1\n   * @param {AnyEventName|EventListener} arg2\n   * @param {EventListener|Object|boolean} [arg3]\n   * @param {Object|boolean} [arg4]\n   * @returns {EventArgs}\n   */\n  function processEventArgs(arg1, arg2, arg3, arg4) {\n    if (isFunction(arg2)) {\n      return {\n        target: getDocument().body,\n        event: asString(arg1),\n        listener: arg2,\n        options: arg3\n      }\n    } else {\n      return {\n        target: resolveTarget(arg1),\n        event: asString(arg2),\n        listener: arg3,\n        options: arg4\n      }\n    }\n  }\n\n  /**\n   * Adds an event listener to an element\n   *\n   * @see https://htmx.org/api/#on\n   *\n   * @param {EventTarget|string} arg1 the element to add the listener to | the event name to add the listener for\n   * @param {string|EventListener} arg2 the event name to add the listener for | the listener to add\n   * @param {EventListener|Object|boolean} [arg3] the listener to add | options to add\n   * @param {Object|boolean} [arg4] options to add\n   * @returns {EventListener}\n   */\n  function addEventListenerImpl(arg1, arg2, arg3, arg4) {\n    ready(function() {\n      const eventArgs = processEventArgs(arg1, arg2, arg3, arg4)\n      eventArgs.target.addEventListener(eventArgs.event, eventArgs.listener, eventArgs.options)\n    })\n    const b = isFunction(arg2)\n    return b ? arg2 : arg3\n  }\n\n  /**\n   * Removes an event listener from an element\n   *\n   * @see https://htmx.org/api/#off\n   *\n   * @param {EventTarget|string} arg1 the element to remove the listener from | the event name to remove the listener from\n   * @param {string|EventListener} arg2 the event name to remove the listener from | the listener to remove\n   * @param {EventListener} [arg3] the listener to remove\n   * @returns {EventListener}\n   */\n  function removeEventListenerImpl(arg1, arg2, arg3) {\n    ready(function() {\n      const eventArgs = processEventArgs(arg1, arg2, arg3)\n      eventArgs.target.removeEventListener(eventArgs.event, eventArgs.listener)\n    })\n    return isFunction(arg2) ? arg2 : arg3\n  }\n\n  //= ===================================================================\n  // Node processing\n  //= ===================================================================\n\n  const DUMMY_ELT = getDocument().createElement('output') // dummy element for bad selectors\n  /**\n   * @param {Element} elt\n   * @param {string} attrName\n   * @returns {(Node|Window)[]}\n   */\n  function findAttributeTargets(elt, attrName) {\n    const attrTarget = getClosestAttributeValue(elt, attrName)\n    if (attrTarget) {\n      if (attrTarget === 'this') {\n        return [findThisElement(elt, attrName)]\n      } else {\n        const result = querySelectorAllExt(elt, attrTarget)\n        // find `inherit` whole word in value, make sure it's surrounded by commas or is at the start/end of string\n        const shouldInherit = /(^|,)(\\s*)inherit(\\s*)($|,)/.test(attrTarget)\n        if (shouldInherit) {\n          const eltToInheritFrom = asElement(getClosestMatch(elt, function(parent) {\n            return parent !== elt && hasAttribute(asElement(parent), attrName)\n          }))\n          if (eltToInheritFrom) {\n            result.push(...findAttributeTargets(eltToInheritFrom, attrName))\n          }\n        }\n        if (result.length === 0) {\n          logError('The selector \"' + attrTarget + '\" on ' + attrName + ' returned no matches!')\n          return [DUMMY_ELT]\n        } else {\n          return result\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {string} attribute\n   * @returns {Element|null}\n   */\n  function findThisElement(elt, attribute) {\n    return asElement(getClosestMatch(elt, function(elt) {\n      return getAttributeValue(asElement(elt), attribute) != null\n    }))\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {Node|Window|null}\n   */\n  function getTarget(elt) {\n    const targetStr = getClosestAttributeValue(elt, 'hx-target')\n    if (targetStr) {\n      if (targetStr === 'this') {\n        return findThisElement(elt, 'hx-target')\n      } else {\n        return querySelectorExt(elt, targetStr)\n      }\n    } else {\n      const data = getInternalData(elt)\n      if (data.boosted) {\n        return getDocument().body\n      } else {\n        return elt\n      }\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @returns {boolean}\n   */\n  function shouldSettleAttribute(name) {\n    return htmx.config.attributesToSettle.includes(name)\n  }\n\n  /**\n   * @param {Element} mergeTo\n   * @param {Element} mergeFrom\n   */\n  function cloneAttributes(mergeTo, mergeFrom) {\n    forEach(mergeTo.attributes, function(attr) {\n      if (!mergeFrom.hasAttribute(attr.name) && shouldSettleAttribute(attr.name)) {\n        mergeTo.removeAttribute(attr.name)\n      }\n    })\n    forEach(mergeFrom.attributes, function(attr) {\n      if (shouldSettleAttribute(attr.name)) {\n        mergeTo.setAttribute(attr.name, attr.value)\n      }\n    })\n  }\n\n  /**\n   * @param {HtmxSwapStyle} swapStyle\n   * @param {Element} target\n   * @returns {boolean}\n   */\n  function isInlineSwap(swapStyle, target) {\n    const extensions = getExtensions(target)\n    for (let i = 0; i < extensions.length; i++) {\n      const extension = extensions[i]\n      try {\n        if (extension.isInlineSwap(swapStyle)) {\n          return true\n        }\n      } catch (e) {\n        logError(e)\n      }\n    }\n    return swapStyle === 'outerHTML'\n  }\n\n  /**\n   * @param {string} oobValue\n   * @param {Element} oobElement\n   * @param {HtmxSettleInfo} settleInfo\n   * @param {Node|Document} [rootNode]\n   * @returns\n   */\n  function oobSwap(oobValue, oobElement, settleInfo, rootNode) {\n    rootNode = rootNode || getDocument()\n    let selector = '#' + CSS.escape(getRawAttribute(oobElement, 'id'))\n    /** @type HtmxSwapStyle */\n    let swapStyle = 'outerHTML'\n    if (oobValue === 'true') {\n      // do nothing\n    } else if (oobValue.indexOf(':') > 0) {\n      swapStyle = oobValue.substring(0, oobValue.indexOf(':'))\n      selector = oobValue.substring(oobValue.indexOf(':') + 1)\n    } else {\n      swapStyle = oobValue\n    }\n    oobElement.removeAttribute('hx-swap-oob')\n    oobElement.removeAttribute('data-hx-swap-oob')\n\n    const targets = querySelectorAllExt(rootNode, selector, false)\n    if (targets.length) {\n      forEach(\n        targets,\n        function(target) {\n          let fragment\n          const oobElementClone = oobElement.cloneNode(true)\n          fragment = getDocument().createDocumentFragment()\n          fragment.appendChild(oobElementClone)\n          if (!isInlineSwap(swapStyle, target)) {\n            fragment = asParentNode(oobElementClone) // if this is not an inline swap, we use the content of the node, not the node itself\n          }\n\n          const beforeSwapDetails = { shouldSwap: true, target, fragment }\n          if (!triggerEvent(target, 'htmx:oobBeforeSwap', beforeSwapDetails)) return\n\n          target = beforeSwapDetails.target // allow re-targeting\n          if (beforeSwapDetails.shouldSwap) {\n            handlePreservedElements(fragment)\n            swapWithStyle(swapStyle, target, target, fragment, settleInfo)\n            restorePreservedElements()\n          }\n          forEach(settleInfo.elts, function(elt) {\n            triggerEvent(elt, 'htmx:oobAfterSwap', beforeSwapDetails)\n          })\n        }\n      )\n      oobElement.parentNode.removeChild(oobElement)\n    } else {\n      oobElement.parentNode.removeChild(oobElement)\n      triggerErrorEvent(getDocument().body, 'htmx:oobErrorNoTarget', { content: oobElement })\n    }\n    return oobValue\n  }\n\n  function restorePreservedElements() {\n    const pantry = find('#--htmx-preserve-pantry--')\n    if (pantry) {\n      for (const preservedElt of [...pantry.children]) {\n        const existingElement = find('#' + preservedElt.id)\n        // @ts-ignore - use proposed moveBefore feature\n        existingElement.parentNode.moveBefore(preservedElt, existingElement)\n        existingElement.remove()\n      }\n      pantry.remove()\n    }\n  }\n\n  /**\n   * @param {DocumentFragment|ParentNode} fragment\n   */\n  function handlePreservedElements(fragment) {\n    forEach(findAll(fragment, '[hx-preserve], [data-hx-preserve]'), function(preservedElt) {\n      const id = getAttributeValue(preservedElt, 'id')\n      const existingElement = getDocument().getElementById(id)\n      if (existingElement != null) {\n        if (preservedElt.moveBefore) { // if the moveBefore API exists, use it\n          // get or create a storage spot for stuff\n          let pantry = find('#--htmx-preserve-pantry--')\n          if (pantry == null) {\n            getDocument().body.insertAdjacentHTML('afterend', \"<div id='--htmx-preserve-pantry--'></div>\")\n            pantry = find('#--htmx-preserve-pantry--')\n          }\n          // @ts-ignore - use proposed moveBefore feature\n          pantry.moveBefore(existingElement, null)\n        } else {\n          preservedElt.parentNode.replaceChild(existingElement, preservedElt)\n        }\n      }\n    })\n  }\n\n  /**\n   * @param {Node} parentNode\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function handleAttributes(parentNode, fragment, settleInfo) {\n    forEach(fragment.querySelectorAll('[id]'), function(newNode) {\n      const id = getRawAttribute(newNode, 'id')\n      if (id && id.length > 0) {\n        const normalizedId = id.replace(\"'\", \"\\\\'\")\n        const normalizedTag = newNode.tagName.replace(':', '\\\\:')\n        const parentElt = asParentNode(parentNode)\n        const oldNode = parentElt && parentElt.querySelector(normalizedTag + \"[id='\" + normalizedId + \"']\")\n        if (oldNode && oldNode !== parentElt) {\n          const newAttributes = newNode.cloneNode()\n          cloneAttributes(newNode, oldNode)\n          settleInfo.tasks.push(function() {\n            cloneAttributes(newNode, newAttributes)\n          })\n        }\n      }\n    })\n  }\n\n  /**\n   * @param {Node} child\n   * @returns {HtmxSettleTask}\n   */\n  function makeAjaxLoadTask(child) {\n    return function() {\n      removeClassFromElement(child, htmx.config.addedClass)\n      processNode(asElement(child))\n      processFocus(asParentNode(child))\n      triggerEvent(child, 'htmx:load')\n    }\n  }\n\n  /**\n   * @param {ParentNode} child\n   */\n  function processFocus(child) {\n    const autofocus = '[autofocus]'\n    const autoFocusedElt = asHtmlElement(matches(child, autofocus) ? child : child.querySelector(autofocus))\n    if (autoFocusedElt != null) {\n      autoFocusedElt.focus()\n    }\n  }\n\n  /**\n   * @param {Node} parentNode\n   * @param {Node} insertBefore\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function insertNodesBefore(parentNode, insertBefore, fragment, settleInfo) {\n    handleAttributes(parentNode, fragment, settleInfo)\n    while (fragment.childNodes.length > 0) {\n      const child = fragment.firstChild\n      addClassToElement(asElement(child), htmx.config.addedClass)\n      parentNode.insertBefore(child, insertBefore)\n      if (child.nodeType !== Node.TEXT_NODE && child.nodeType !== Node.COMMENT_NODE) {\n        settleInfo.tasks.push(makeAjaxLoadTask(child))\n      }\n    }\n  }\n\n  /**\n   * based on https://gist.github.com/hyamamoto/fd435505d29ebfa3d9716fd2be8d42f0,\n   * derived from Java's string hashcode implementation\n   * @param {string} string\n   * @param {number} hash\n   * @returns {number}\n   */\n  function stringHash(string, hash) {\n    let char = 0\n    while (char < string.length) {\n      hash = (hash << 5) - hash + string.charCodeAt(char++) | 0 // bitwise or ensures we have a 32-bit int\n    }\n    return hash\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {number}\n   */\n  function attributeHash(elt) {\n    let hash = 0\n    for (let i = 0; i < elt.attributes.length; i++) {\n      const attribute = elt.attributes[i]\n      if (attribute.value) { // only include attributes w/ actual values (empty is same as non-existent)\n        hash = stringHash(attribute.name, hash)\n        hash = stringHash(attribute.value, hash)\n      }\n    }\n    return hash\n  }\n\n  /**\n   * @param {EventTarget} elt\n   */\n  function deInitOnHandlers(elt) {\n    const internalData = getInternalData(elt)\n    if (internalData.onHandlers) {\n      for (let i = 0; i < internalData.onHandlers.length; i++) {\n        const handlerInfo = internalData.onHandlers[i]\n        removeEventListenerImpl(elt, handlerInfo.event, handlerInfo.listener)\n      }\n      delete internalData.onHandlers\n    }\n  }\n\n  /**\n   * @param {Node} element\n   */\n  function deInitNode(element) {\n    const internalData = getInternalData(element)\n    if (internalData.timeout) {\n      clearTimeout(internalData.timeout)\n    }\n    if (internalData.listenerInfos) {\n      forEach(internalData.listenerInfos, function(info) {\n        if (info.on) {\n          removeEventListenerImpl(info.on, info.trigger, info.listener)\n        }\n      })\n    }\n    deInitOnHandlers(element)\n    forEach(Object.keys(internalData), function(key) { if (key !== 'firstInitCompleted') delete internalData[key] })\n  }\n\n  /**\n   * @param {Node} element\n   */\n  function cleanUpElement(element) {\n    triggerEvent(element, 'htmx:beforeCleanupElement')\n    deInitNode(element)\n    // @ts-ignore\n    forEach(element.children, function(child) { cleanUpElement(child) })\n  }\n\n  /**\n   * @param {Element} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function swapOuterHTML(target, fragment, settleInfo) {\n    if (target.tagName === 'BODY') { // special case the body to innerHTML because DocumentFragments can't contain a body elt unfortunately\n      return swapInnerHTML(target, fragment, settleInfo)\n    }\n    /** @type {Node} */\n    let newElt\n    const eltBeforeNewContent = target.previousSibling\n    const parentNode = parentElt(target)\n    if (!parentNode) { // when parent node disappears, we can't do anything\n      return\n    }\n    insertNodesBefore(parentNode, target, fragment, settleInfo)\n    if (eltBeforeNewContent == null) {\n      newElt = parentNode.firstChild\n    } else {\n      newElt = eltBeforeNewContent.nextSibling\n    }\n    settleInfo.elts = settleInfo.elts.filter(function(e) { return e !== target })\n    // scan through all newly added content and add all elements to the settle info so we trigger\n    // events properly on them\n    while (newElt && newElt !== target) {\n      if (newElt instanceof Element) {\n        settleInfo.elts.push(newElt)\n      }\n      newElt = newElt.nextSibling\n    }\n    cleanUpElement(target)\n    target.remove()\n  }\n\n  /**\n   * @param {Element} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function swapAfterBegin(target, fragment, settleInfo) {\n    return insertNodesBefore(target, target.firstChild, fragment, settleInfo)\n  }\n\n  /**\n   * @param {Element} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function swapBeforeBegin(target, fragment, settleInfo) {\n    return insertNodesBefore(parentElt(target), target, fragment, settleInfo)\n  }\n\n  /**\n   * @param {Element} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function swapBeforeEnd(target, fragment, settleInfo) {\n    return insertNodesBefore(target, null, fragment, settleInfo)\n  }\n\n  /**\n   * @param {Element} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function swapAfterEnd(target, fragment, settleInfo) {\n    return insertNodesBefore(parentElt(target), target.nextSibling, fragment, settleInfo)\n  }\n\n  /**\n   * @param {Element} target\n   */\n  function swapDelete(target) {\n    cleanUpElement(target)\n    const parent = parentElt(target)\n    if (parent) {\n      return parent.removeChild(target)\n    }\n  }\n\n  /**\n   * @param {Element} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function swapInnerHTML(target, fragment, settleInfo) {\n    const firstChild = target.firstChild\n    insertNodesBefore(target, firstChild, fragment, settleInfo)\n    if (firstChild) {\n      while (firstChild.nextSibling) {\n        cleanUpElement(firstChild.nextSibling)\n        target.removeChild(firstChild.nextSibling)\n      }\n      cleanUpElement(firstChild)\n      target.removeChild(firstChild)\n    }\n  }\n\n  /**\n   * @param {HtmxSwapStyle} swapStyle\n   * @param {Element} elt\n   * @param {Element} target\n   * @param {ParentNode} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   */\n  function swapWithStyle(swapStyle, elt, target, fragment, settleInfo) {\n    switch (swapStyle) {\n      case 'none':\n        return\n      case 'outerHTML':\n        swapOuterHTML(target, fragment, settleInfo)\n        return\n      case 'afterbegin':\n        swapAfterBegin(target, fragment, settleInfo)\n        return\n      case 'beforebegin':\n        swapBeforeBegin(target, fragment, settleInfo)\n        return\n      case 'beforeend':\n        swapBeforeEnd(target, fragment, settleInfo)\n        return\n      case 'afterend':\n        swapAfterEnd(target, fragment, settleInfo)\n        return\n      case 'delete':\n        swapDelete(target)\n        return\n      default:\n        var extensions = getExtensions(elt)\n        for (let i = 0; i < extensions.length; i++) {\n          const ext = extensions[i]\n          try {\n            const newElements = ext.handleSwap(swapStyle, target, fragment, settleInfo)\n            if (newElements) {\n              if (Array.isArray(newElements)) {\n                // if handleSwap returns an array (like) of elements, we handle them\n                for (let j = 0; j < newElements.length; j++) {\n                  const child = newElements[j]\n                  if (child.nodeType !== Node.TEXT_NODE && child.nodeType !== Node.COMMENT_NODE) {\n                    settleInfo.tasks.push(makeAjaxLoadTask(child))\n                  }\n                }\n              }\n              return\n            }\n          } catch (e) {\n            logError(e)\n          }\n        }\n        if (swapStyle === 'innerHTML') {\n          swapInnerHTML(target, fragment, settleInfo)\n        } else {\n          swapWithStyle(htmx.config.defaultSwapStyle, elt, target, fragment, settleInfo)\n        }\n    }\n  }\n\n  /**\n   * @param {DocumentFragment} fragment\n   * @param {HtmxSettleInfo} settleInfo\n   * @param {Node|Document} [rootNode]\n   */\n  function findAndSwapOobElements(fragment, settleInfo, rootNode) {\n    var oobElts = findAll(fragment, '[hx-swap-oob], [data-hx-swap-oob]')\n    forEach(oobElts, function(oobElement) {\n      if (htmx.config.allowNestedOobSwaps || oobElement.parentElement === null) {\n        const oobValue = getAttributeValue(oobElement, 'hx-swap-oob')\n        if (oobValue != null) {\n          oobSwap(oobValue, oobElement, settleInfo, rootNode)\n        }\n      } else {\n        oobElement.removeAttribute('hx-swap-oob')\n        oobElement.removeAttribute('data-hx-swap-oob')\n      }\n    })\n    return oobElts.length > 0\n  }\n\n  /**\n   * Implements complete swapping pipeline, including: delay, view transitions, focus and selection preservation,\n   * title updates, scroll, OOB swapping, normal swapping and settling\n   * @param {string|Element} target\n   * @param {string} content\n   * @param {HtmxSwapSpecification} swapSpec\n   * @param {SwapOptions} [swapOptions]\n   */\n  function swap(target, content, swapSpec, swapOptions) {\n    if (!swapOptions) {\n      swapOptions = {}\n    }\n    // optional transition API promise callbacks\n    let settleResolve = null\n    let settleReject = null\n\n    let doSwap = function() {\n      maybeCall(swapOptions.beforeSwapCallback)\n\n      target = resolveTarget(target)\n      const rootNode = swapOptions.contextElement ? getRootNode(swapOptions.contextElement, false) : getDocument()\n\n      // preserve focus and selection\n      const activeElt = document.activeElement\n      let selectionInfo = {}\n      selectionInfo = {\n        elt: activeElt,\n        // @ts-ignore\n        start: activeElt ? activeElt.selectionStart : null,\n        // @ts-ignore\n        end: activeElt ? activeElt.selectionEnd : null\n      }\n      const settleInfo = makeSettleInfo(target)\n\n      // For text content swaps, don't parse the response as HTML, just insert it\n      if (swapSpec.swapStyle === 'textContent') {\n        target.textContent = content\n      // Otherwise, make the fragment and process it\n      } else {\n        let fragment = makeFragment(content)\n\n        settleInfo.title = swapOptions.title || fragment.title\n        if (swapOptions.historyRequest) {\n          // @ts-ignore fragment can be a parentNode Element\n          fragment = fragment.querySelector('[hx-history-elt],[data-hx-history-elt]') || fragment\n        }\n\n        // select-oob swaps\n        if (swapOptions.selectOOB) {\n          const oobSelectValues = swapOptions.selectOOB.split(',')\n          for (let i = 0; i < oobSelectValues.length; i++) {\n            const oobSelectValue = oobSelectValues[i].split(':', 2)\n            let id = oobSelectValue[0].trim()\n            if (id.indexOf('#') === 0) {\n              id = id.substring(1)\n            }\n            const oobValue = oobSelectValue[1] || 'true'\n            const oobElement = fragment.querySelector('#' + id)\n            if (oobElement) {\n              oobSwap(oobValue, oobElement, settleInfo, rootNode)\n            }\n          }\n        }\n        // oob swaps\n        findAndSwapOobElements(fragment, settleInfo, rootNode)\n        forEach(findAll(fragment, 'template'), /** @param {HTMLTemplateElement} template */function(template) {\n          if (template.content && findAndSwapOobElements(template.content, settleInfo, rootNode)) {\n            // Avoid polluting the DOM with empty templates that were only used to encapsulate oob swap\n            template.remove()\n          }\n        })\n\n        // normal swap\n        if (swapOptions.select) {\n          const newFragment = getDocument().createDocumentFragment()\n          forEach(fragment.querySelectorAll(swapOptions.select), function(node) {\n            newFragment.appendChild(node)\n          })\n          fragment = newFragment\n        }\n        handlePreservedElements(fragment)\n        swapWithStyle(swapSpec.swapStyle, swapOptions.contextElement, target, fragment, settleInfo)\n        restorePreservedElements()\n      }\n\n      // apply saved focus and selection information to swapped content\n      if (selectionInfo.elt &&\n        !bodyContains(selectionInfo.elt) &&\n        getRawAttribute(selectionInfo.elt, 'id')) {\n        const newActiveElt = document.getElementById(getRawAttribute(selectionInfo.elt, 'id'))\n        const focusOptions = { preventScroll: swapSpec.focusScroll !== undefined ? !swapSpec.focusScroll : !htmx.config.defaultFocusScroll }\n        if (newActiveElt) {\n          // @ts-ignore\n          if (selectionInfo.start && newActiveElt.setSelectionRange) {\n            try {\n              // @ts-ignore\n              newActiveElt.setSelectionRange(selectionInfo.start, selectionInfo.end)\n            } catch (e) {\n              // the setSelectionRange method is present on fields that don't support it, so just let this fail\n            }\n          }\n          newActiveElt.focus(focusOptions)\n        }\n      }\n\n      target.classList.remove(htmx.config.swappingClass)\n      forEach(settleInfo.elts, function(elt) {\n        if (elt.classList) {\n          elt.classList.add(htmx.config.settlingClass)\n        }\n        triggerEvent(elt, 'htmx:afterSwap', swapOptions.eventInfo)\n      })\n      maybeCall(swapOptions.afterSwapCallback)\n\n      // merge in new title after swap but before settle\n      if (!swapSpec.ignoreTitle) {\n        handleTitle(settleInfo.title)\n      }\n\n      // settle\n      const doSettle = function() {\n        forEach(settleInfo.tasks, function(task) {\n          task.call()\n        })\n        forEach(settleInfo.elts, function(elt) {\n          if (elt.classList) {\n            elt.classList.remove(htmx.config.settlingClass)\n          }\n          triggerEvent(elt, 'htmx:afterSettle', swapOptions.eventInfo)\n        })\n\n        if (swapOptions.anchor) {\n          const anchorTarget = asElement(resolveTarget('#' + swapOptions.anchor))\n          if (anchorTarget) {\n            anchorTarget.scrollIntoView({ block: 'start', behavior: 'auto' })\n          }\n        }\n\n        updateScrollState(settleInfo.elts, swapSpec)\n        maybeCall(swapOptions.afterSettleCallback)\n        maybeCall(settleResolve)\n      }\n\n      if (swapSpec.settleDelay > 0) {\n        getWindow().setTimeout(doSettle, swapSpec.settleDelay)\n      } else {\n        doSettle()\n      }\n    }\n    let shouldTransition = htmx.config.globalViewTransitions\n    if (swapSpec.hasOwnProperty('transition')) {\n      shouldTransition = swapSpec.transition\n    }\n\n    const elt = swapOptions.contextElement || getDocument()\n\n    if (shouldTransition &&\n            triggerEvent(elt, 'htmx:beforeTransition', swapOptions.eventInfo) &&\n            typeof Promise !== 'undefined' &&\n            // @ts-ignore experimental feature atm\n            document.startViewTransition) {\n      const settlePromise = new Promise(function(_resolve, _reject) {\n        settleResolve = _resolve\n        settleReject = _reject\n      })\n      // wrap the original doSwap() in a call to startViewTransition()\n      const innerDoSwap = doSwap\n      doSwap = function() {\n        // @ts-ignore experimental feature atm\n        document.startViewTransition(function() {\n          innerDoSwap()\n          return settlePromise\n        })\n      }\n    }\n\n    try {\n      if (swapSpec?.swapDelay && swapSpec.swapDelay > 0) {\n        getWindow().setTimeout(doSwap, swapSpec.swapDelay)\n      } else {\n        doSwap()\n      }\n    } catch (e) {\n      triggerErrorEvent(elt, 'htmx:swapError', swapOptions.eventInfo)\n      maybeCall(settleReject)\n      throw e\n    }\n  }\n\n  /**\n   * @param {XMLHttpRequest} xhr\n   * @param {string} header\n   * @param {EventTarget} elt\n   */\n  function handleTriggerHeader(xhr, header, elt) {\n    const triggerBody = xhr.getResponseHeader(header)\n    if (triggerBody.indexOf('{') === 0) {\n      const triggers = parseJSON(triggerBody)\n      for (const eventName in triggers) {\n        if (triggers.hasOwnProperty(eventName)) {\n          let detail = triggers[eventName]\n          if (isRawObject(detail)) {\n            // @ts-ignore\n            elt = detail.target !== undefined ? detail.target : elt\n          } else {\n            detail = { value: detail }\n          }\n          triggerEvent(elt, eventName, detail)\n        }\n      }\n    } else {\n      const eventNames = triggerBody.split(',')\n      for (let i = 0; i < eventNames.length; i++) {\n        triggerEvent(elt, eventNames[i].trim(), [])\n      }\n    }\n  }\n\n  const WHITESPACE = /\\s/\n  const WHITESPACE_OR_COMMA = /[\\s,]/\n  const SYMBOL_START = /[_$a-zA-Z]/\n  const SYMBOL_CONT = /[_$a-zA-Z0-9]/\n  const STRINGISH_START = ['\"', \"'\", '/']\n  const NOT_WHITESPACE = /[^\\s]/\n  const COMBINED_SELECTOR_START = /[{(]/\n  const COMBINED_SELECTOR_END = /[})]/\n\n  /**\n   * @param {string} str\n   * @returns {string[]}\n   */\n  function tokenizeString(str) {\n    /** @type string[] */\n    const tokens = []\n    let position = 0\n    while (position < str.length) {\n      if (SYMBOL_START.exec(str.charAt(position))) {\n        var startPosition = position\n        while (SYMBOL_CONT.exec(str.charAt(position + 1))) {\n          position++\n        }\n        tokens.push(str.substring(startPosition, position + 1))\n      } else if (STRINGISH_START.indexOf(str.charAt(position)) !== -1) {\n        const startChar = str.charAt(position)\n        var startPosition = position\n        position++\n        while (position < str.length && str.charAt(position) !== startChar) {\n          if (str.charAt(position) === '\\\\') {\n            position++\n          }\n          position++\n        }\n        tokens.push(str.substring(startPosition, position + 1))\n      } else {\n        const symbol = str.charAt(position)\n        tokens.push(symbol)\n      }\n      position++\n    }\n    return tokens\n  }\n\n  /**\n   * @param {string} token\n   * @param {string|null} last\n   * @param {string} paramName\n   * @returns {boolean}\n   */\n  function isPossibleRelativeReference(token, last, paramName) {\n    return SYMBOL_START.exec(token.charAt(0)) &&\n      token !== 'true' &&\n      token !== 'false' &&\n      token !== 'this' &&\n      token !== paramName &&\n      last !== '.'\n  }\n\n  /**\n   * @param {EventTarget|string} elt\n   * @param {string[]} tokens\n   * @param {string} paramName\n   * @returns {ConditionalFunction|null}\n   */\n  function maybeGenerateConditional(elt, tokens, paramName) {\n    if (tokens[0] === '[') {\n      tokens.shift()\n      let bracketCount = 1\n      let conditionalSource = ' return (function(' + paramName + '){ return ('\n      let last = null\n      while (tokens.length > 0) {\n        const token = tokens[0]\n        // @ts-ignore For some reason tsc doesn't understand the shift call, and thinks we're comparing the same value here, i.e. '[' vs ']'\n        if (token === ']') {\n          bracketCount--\n          if (bracketCount === 0) {\n            if (last === null) {\n              conditionalSource = conditionalSource + 'true'\n            }\n            tokens.shift()\n            conditionalSource += ')})'\n            try {\n              const conditionFunction = maybeEval(elt, function() {\n                return Function(conditionalSource)()\n              },\n              function() { return true })\n              conditionFunction.source = conditionalSource\n              return conditionFunction\n            } catch (e) {\n              triggerErrorEvent(getDocument().body, 'htmx:syntax:error', { error: e, source: conditionalSource })\n              return null\n            }\n          }\n        } else if (token === '[') {\n          bracketCount++\n        }\n        if (isPossibleRelativeReference(token, last, paramName)) {\n          conditionalSource += '((' + paramName + '.' + token + ') ? (' + paramName + '.' + token + ') : (window.' + token + '))'\n        } else {\n          conditionalSource = conditionalSource + token\n        }\n        last = tokens.shift()\n      }\n    }\n  }\n\n  /**\n   * @param {string[]} tokens\n   * @param {RegExp} match\n   * @returns {string}\n   */\n  function consumeUntil(tokens, match) {\n    let result = ''\n    while (tokens.length > 0 && !match.test(tokens[0])) {\n      result += tokens.shift()\n    }\n    return result\n  }\n\n  /**\n   * @param {string[]} tokens\n   * @returns {string}\n   */\n  function consumeCSSSelector(tokens) {\n    let result\n    if (tokens.length > 0 && COMBINED_SELECTOR_START.test(tokens[0])) {\n      tokens.shift()\n      result = consumeUntil(tokens, COMBINED_SELECTOR_END).trim()\n      tokens.shift()\n    } else {\n      result = consumeUntil(tokens, WHITESPACE_OR_COMMA)\n    }\n    return result\n  }\n\n  const INPUT_SELECTOR = 'input, textarea, select'\n\n  /**\n   * @param {Element} elt\n   * @param {string} explicitTrigger\n   * @param {Object} cache for trigger specs\n   * @returns {HtmxTriggerSpecification[]}\n   */\n  function parseAndCacheTrigger(elt, explicitTrigger, cache) {\n    /** @type HtmxTriggerSpecification[] */\n    const triggerSpecs = []\n    const tokens = tokenizeString(explicitTrigger)\n    do {\n      consumeUntil(tokens, NOT_WHITESPACE)\n      const initialLength = tokens.length\n      const trigger = consumeUntil(tokens, /[,\\[\\s]/)\n      if (trigger !== '') {\n        if (trigger === 'every') {\n          /** @type HtmxTriggerSpecification */\n          const every = { trigger: 'every' }\n          consumeUntil(tokens, NOT_WHITESPACE)\n          every.pollInterval = parseInterval(consumeUntil(tokens, /[,\\[\\s]/))\n          consumeUntil(tokens, NOT_WHITESPACE)\n          var eventFilter = maybeGenerateConditional(elt, tokens, 'event')\n          if (eventFilter) {\n            every.eventFilter = eventFilter\n          }\n          triggerSpecs.push(every)\n        } else {\n          /** @type HtmxTriggerSpecification */\n          const triggerSpec = { trigger }\n          var eventFilter = maybeGenerateConditional(elt, tokens, 'event')\n          if (eventFilter) {\n            triggerSpec.eventFilter = eventFilter\n          }\n          consumeUntil(tokens, NOT_WHITESPACE)\n          while (tokens.length > 0 && tokens[0] !== ',') {\n            const token = tokens.shift()\n            if (token === 'changed') {\n              triggerSpec.changed = true\n            } else if (token === 'once') {\n              triggerSpec.once = true\n            } else if (token === 'consume') {\n              triggerSpec.consume = true\n            } else if (token === 'delay' && tokens[0] === ':') {\n              tokens.shift()\n              triggerSpec.delay = parseInterval(consumeUntil(tokens, WHITESPACE_OR_COMMA))\n            } else if (token === 'from' && tokens[0] === ':') {\n              tokens.shift()\n              if (COMBINED_SELECTOR_START.test(tokens[0])) {\n                var from_arg = consumeCSSSelector(tokens)\n              } else {\n                var from_arg = consumeUntil(tokens, WHITESPACE_OR_COMMA)\n                if (from_arg === 'closest' || from_arg === 'find' || from_arg === 'next' || from_arg === 'previous') {\n                  tokens.shift()\n                  const selector = consumeCSSSelector(tokens)\n                  // `next` and `previous` allow a selector-less syntax\n                  if (selector.length > 0) {\n                    from_arg += ' ' + selector\n                  }\n                }\n              }\n              triggerSpec.from = from_arg\n            } else if (token === 'target' && tokens[0] === ':') {\n              tokens.shift()\n              triggerSpec.target = consumeCSSSelector(tokens)\n            } else if (token === 'throttle' && tokens[0] === ':') {\n              tokens.shift()\n              triggerSpec.throttle = parseInterval(consumeUntil(tokens, WHITESPACE_OR_COMMA))\n            } else if (token === 'queue' && tokens[0] === ':') {\n              tokens.shift()\n              triggerSpec.queue = consumeUntil(tokens, WHITESPACE_OR_COMMA)\n            } else if (token === 'root' && tokens[0] === ':') {\n              tokens.shift()\n              triggerSpec[token] = consumeCSSSelector(tokens)\n            } else if (token === 'threshold' && tokens[0] === ':') {\n              tokens.shift()\n              triggerSpec[token] = consumeUntil(tokens, WHITESPACE_OR_COMMA)\n            } else {\n              triggerErrorEvent(elt, 'htmx:syntax:error', { token: tokens.shift() })\n            }\n            consumeUntil(tokens, NOT_WHITESPACE)\n          }\n          triggerSpecs.push(triggerSpec)\n        }\n      }\n      if (tokens.length === initialLength) {\n        triggerErrorEvent(elt, 'htmx:syntax:error', { token: tokens.shift() })\n      }\n      consumeUntil(tokens, NOT_WHITESPACE)\n    } while (tokens[0] === ',' && tokens.shift())\n    if (cache) {\n      cache[explicitTrigger] = triggerSpecs\n    }\n    return triggerSpecs\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {HtmxTriggerSpecification[]}\n   */\n  function getTriggerSpecs(elt) {\n    const explicitTrigger = getAttributeValue(elt, 'hx-trigger')\n    let triggerSpecs = []\n    if (explicitTrigger) {\n      const cache = htmx.config.triggerSpecsCache\n      triggerSpecs = (cache && cache[explicitTrigger]) || parseAndCacheTrigger(elt, explicitTrigger, cache)\n    }\n\n    if (triggerSpecs.length > 0) {\n      return triggerSpecs\n    } else if (matches(elt, 'form')) {\n      return [{ trigger: 'submit' }]\n    } else if (matches(elt, 'input[type=\"button\"], input[type=\"submit\"]')) {\n      return [{ trigger: 'click' }]\n    } else if (matches(elt, INPUT_SELECTOR)) {\n      return [{ trigger: 'change' }]\n    } else {\n      return [{ trigger: 'click' }]\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   */\n  function cancelPolling(elt) {\n    getInternalData(elt).cancelled = true\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {TriggerHandler} handler\n   * @param {HtmxTriggerSpecification} spec\n   */\n  function processPolling(elt, handler, spec) {\n    const nodeData = getInternalData(elt)\n    nodeData.timeout = getWindow().setTimeout(function() {\n      if (bodyContains(elt) && nodeData.cancelled !== true) {\n        if (!maybeFilterEvent(spec, elt, makeEvent('hx:poll:trigger', {\n          triggerSpec: spec,\n          target: elt\n        }))) {\n          handler(elt)\n        }\n        processPolling(elt, handler, spec)\n      }\n    }, spec.pollInterval)\n  }\n\n  /**\n   * @param {HTMLAnchorElement} elt\n   * @returns {boolean}\n   */\n  function isLocalLink(elt) {\n    return location.hostname === elt.hostname &&\n      getRawAttribute(elt, 'href') &&\n      getRawAttribute(elt, 'href').indexOf('#') !== 0\n  }\n\n  /**\n   * @param {Element} elt\n   */\n  function eltIsDisabled(elt) {\n    return closest(elt, htmx.config.disableSelector)\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {HtmxNodeInternalData} nodeData\n   * @param {HtmxTriggerSpecification[]} triggerSpecs\n   */\n  function boostElement(elt, nodeData, triggerSpecs) {\n    if ((elt instanceof HTMLAnchorElement && isLocalLink(elt) && (elt.target === '' || elt.target === '_self')) || (elt.tagName === 'FORM' && String(getRawAttribute(elt, 'method')).toLowerCase() !== 'dialog')) {\n      nodeData.boosted = true\n      let verb, path\n      if (elt.tagName === 'A') {\n        verb = (/** @type HttpVerb */('get'))\n        path = getRawAttribute(elt, 'href')\n      } else {\n        const rawAttribute = getRawAttribute(elt, 'method')\n        verb = (/** @type HttpVerb */(rawAttribute ? rawAttribute.toLowerCase() : 'get'))\n        path = getRawAttribute(elt, 'action')\n        if (path == null || path === '') {\n          // if there is no action attribute on the form set path to current href before the\n          // following logic to properly clear parameters on a GET (not on a POST!)\n          path = location.href\n        }\n        if (verb === 'get' && path.includes('?')) {\n          path = path.replace(/\\?[^#]+/, '')\n        }\n      }\n      triggerSpecs.forEach(function(triggerSpec) {\n        addEventListener(elt, function(node, evt) {\n          const elt = asElement(node)\n          if (eltIsDisabled(elt)) {\n            cleanUpElement(elt)\n            return\n          }\n          issueAjaxRequest(verb, path, elt, evt)\n        }, nodeData, triggerSpec, true)\n      })\n    }\n  }\n\n  /**\n   * @param {Event} evt\n   * @param {Element} elt\n   * @returns {boolean}\n   */\n  function shouldCancel(evt, elt) {\n    if (evt.type === 'submit' || evt.type === 'click') {\n      // use elt from event that was submitted/clicked where possible to determining if default form/link behavior should be canceled\n      elt = asElement(evt.target) || elt\n      if (elt.tagName === 'FORM') {\n        return true\n      }\n      // @ts-ignore Do not cancel on buttons that 1) don't have a related form or 2) have a type attribute of 'reset'/'button'.\n      // The properties will resolve to undefined for elements that don't define 'type' or 'form', which is fine\n      if (elt.form && elt.type === 'submit') {\n        return true\n      }\n      elt = elt.closest('a')\n      // @ts-ignore check for a link wrapping the event elt or if elt is a link. elt will be link so href check is fine\n      if (elt && elt.href &&\n        (elt.getAttribute('href') === '#' || elt.getAttribute('href').indexOf('#') !== 0)) {\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * @param {Node} elt\n   * @param {Event|MouseEvent|KeyboardEvent|TouchEvent} evt\n   * @returns {boolean}\n   */\n  function ignoreBoostedAnchorCtrlClick(elt, evt) {\n    return getInternalData(elt).boosted && elt instanceof HTMLAnchorElement && evt.type === 'click' &&\n      // @ts-ignore this will resolve to undefined for events that don't define those properties, which is fine\n      (evt.ctrlKey || evt.metaKey)\n  }\n\n  /**\n   * @param {HtmxTriggerSpecification} triggerSpec\n   * @param {Node} elt\n   * @param {Event} evt\n   * @returns {boolean}\n   */\n  function maybeFilterEvent(triggerSpec, elt, evt) {\n    const eventFilter = triggerSpec.eventFilter\n    if (eventFilter) {\n      try {\n        return eventFilter.call(elt, evt) !== true\n      } catch (e) {\n        const source = eventFilter.source\n        triggerErrorEvent(getDocument().body, 'htmx:eventFilter:error', { error: e, source })\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {TriggerHandler} handler\n   * @param {HtmxNodeInternalData} nodeData\n   * @param {HtmxTriggerSpecification} triggerSpec\n   * @param {boolean} [explicitCancel]\n   */\n  function addEventListener(elt, handler, nodeData, triggerSpec, explicitCancel) {\n    const elementData = getInternalData(elt)\n    /** @type {(Node|Window)[]} */\n    let eltsToListenOn\n    if (triggerSpec.from) {\n      eltsToListenOn = querySelectorAllExt(elt, triggerSpec.from)\n    } else {\n      eltsToListenOn = [elt]\n    }\n    // store the initial values of the elements, so we can tell if they change\n    if (triggerSpec.changed) {\n      if (!('lastValue' in elementData)) {\n        elementData.lastValue = new WeakMap()\n      }\n      eltsToListenOn.forEach(function(eltToListenOn) {\n        if (!elementData.lastValue.has(triggerSpec)) {\n          elementData.lastValue.set(triggerSpec, new WeakMap())\n        }\n        // @ts-ignore value will be undefined for non-input elements, which is fine\n        elementData.lastValue.get(triggerSpec).set(eltToListenOn, eltToListenOn.value)\n      })\n    }\n    forEach(eltsToListenOn, function(eltToListenOn) {\n      /** @type EventListener */\n      const eventListener = function(evt) {\n        if (!bodyContains(elt)) {\n          eltToListenOn.removeEventListener(triggerSpec.trigger, eventListener)\n          return\n        }\n        if (ignoreBoostedAnchorCtrlClick(elt, evt)) {\n          return\n        }\n        if (explicitCancel || shouldCancel(evt, elt)) {\n          evt.preventDefault()\n        }\n        if (maybeFilterEvent(triggerSpec, elt, evt)) {\n          return\n        }\n        const eventData = getInternalData(evt)\n        eventData.triggerSpec = triggerSpec\n        if (eventData.handledFor == null) {\n          eventData.handledFor = []\n        }\n        if (eventData.handledFor.indexOf(elt) < 0) {\n          eventData.handledFor.push(elt)\n          if (triggerSpec.consume) {\n            evt.stopPropagation()\n          }\n          if (triggerSpec.target && evt.target) {\n            if (!matches(asElement(evt.target), triggerSpec.target)) {\n              return\n            }\n          }\n          if (triggerSpec.once) {\n            if (elementData.triggeredOnce) {\n              return\n            } else {\n              elementData.triggeredOnce = true\n            }\n          }\n          if (triggerSpec.changed) {\n            const node = evt.target\n            // @ts-ignore value will be undefined for non-input elements, which is fine\n            const value = node.value\n            const lastValue = elementData.lastValue.get(triggerSpec)\n            if (lastValue.has(node) && lastValue.get(node) === value) {\n              return\n            }\n            lastValue.set(node, value)\n          }\n          if (elementData.delayed) {\n            clearTimeout(elementData.delayed)\n          }\n          if (elementData.throttle) {\n            return\n          }\n\n          if (triggerSpec.throttle > 0) {\n            if (!elementData.throttle) {\n              triggerEvent(elt, 'htmx:trigger')\n              handler(elt, evt)\n              elementData.throttle = getWindow().setTimeout(function() {\n                elementData.throttle = null\n              }, triggerSpec.throttle)\n            }\n          } else if (triggerSpec.delay > 0) {\n            elementData.delayed = getWindow().setTimeout(function() {\n              triggerEvent(elt, 'htmx:trigger')\n              handler(elt, evt)\n            }, triggerSpec.delay)\n          } else {\n            triggerEvent(elt, 'htmx:trigger')\n            handler(elt, evt)\n          }\n        }\n      }\n      if (nodeData.listenerInfos == null) {\n        nodeData.listenerInfos = []\n      }\n      nodeData.listenerInfos.push({\n        trigger: triggerSpec.trigger,\n        listener: eventListener,\n        on: eltToListenOn\n      })\n      eltToListenOn.addEventListener(triggerSpec.trigger, eventListener)\n    })\n  }\n\n  let windowIsScrolling = false // used by initScrollHandler\n  let scrollHandler = null\n  function initScrollHandler() {\n    if (!scrollHandler) {\n      scrollHandler = function() {\n        windowIsScrolling = true\n      }\n      window.addEventListener('scroll', scrollHandler)\n      window.addEventListener('resize', scrollHandler)\n      setInterval(function() {\n        if (windowIsScrolling) {\n          windowIsScrolling = false\n          forEach(getDocument().querySelectorAll(\"[hx-trigger*='revealed'],[data-hx-trigger*='revealed']\"), function(elt) {\n            maybeReveal(elt)\n          })\n        }\n      }, 200)\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   */\n  function maybeReveal(elt) {\n    if (!hasAttribute(elt, 'data-hx-revealed') && isScrolledIntoView(elt)) {\n      elt.setAttribute('data-hx-revealed', 'true')\n      const nodeData = getInternalData(elt)\n      if (nodeData.initHash) {\n        triggerEvent(elt, 'revealed')\n      } else {\n        // if the node isn't initialized, wait for it before triggering the request\n        elt.addEventListener('htmx:afterProcessNode', function() { triggerEvent(elt, 'revealed') }, { once: true })\n      }\n    }\n  }\n\n  //= ===================================================================\n\n  /**\n   * @param {Element} elt\n   * @param {TriggerHandler} handler\n   * @param {HtmxNodeInternalData} nodeData\n   * @param {number} delay\n   */\n  function loadImmediately(elt, handler, nodeData, delay) {\n    const load = function() {\n      if (!nodeData.loaded) {\n        nodeData.loaded = true\n        triggerEvent(elt, 'htmx:trigger')\n        handler(elt)\n      }\n    }\n    if (delay > 0) {\n      getWindow().setTimeout(load, delay)\n    } else {\n      load()\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {HtmxNodeInternalData} nodeData\n   * @param {HtmxTriggerSpecification[]} triggerSpecs\n   * @returns {boolean}\n   */\n  function processVerbs(elt, nodeData, triggerSpecs) {\n    let explicitAction = false\n    forEach(VERBS, function(verb) {\n      if (hasAttribute(elt, 'hx-' + verb)) {\n        const path = getAttributeValue(elt, 'hx-' + verb)\n        explicitAction = true\n        nodeData.path = path\n        nodeData.verb = verb\n        triggerSpecs.forEach(function(triggerSpec) {\n          addTriggerHandler(elt, triggerSpec, nodeData, function(node, evt) {\n            const elt = asElement(node)\n            if (eltIsDisabled(elt)) {\n              cleanUpElement(elt)\n              return\n            }\n            issueAjaxRequest(verb, path, elt, evt)\n          })\n        })\n      }\n    })\n    return explicitAction\n  }\n\n  /**\n   * @callback TriggerHandler\n   * @param {Element} elt\n   * @param {Event} [evt]\n   */\n\n  /**\n   * @param {Element} elt\n   * @param {HtmxTriggerSpecification} triggerSpec\n   * @param {HtmxNodeInternalData} nodeData\n   * @param {TriggerHandler} handler\n   */\n  function addTriggerHandler(elt, triggerSpec, nodeData, handler) {\n    if (triggerSpec.trigger === 'revealed') {\n      initScrollHandler()\n      addEventListener(elt, handler, nodeData, triggerSpec)\n      maybeReveal(asElement(elt))\n    } else if (triggerSpec.trigger === 'intersect') {\n      const observerOptions = {}\n      if (triggerSpec.root) {\n        observerOptions.root = querySelectorExt(elt, triggerSpec.root)\n      }\n      if (triggerSpec.threshold) {\n        observerOptions.threshold = parseFloat(triggerSpec.threshold)\n      }\n      const observer = new IntersectionObserver(function(entries) {\n        for (let i = 0; i < entries.length; i++) {\n          const entry = entries[i]\n          if (entry.isIntersecting) {\n            triggerEvent(elt, 'intersect')\n            break\n          }\n        }\n      }, observerOptions)\n      observer.observe(asElement(elt))\n      addEventListener(asElement(elt), handler, nodeData, triggerSpec)\n    } else if (!nodeData.firstInitCompleted && triggerSpec.trigger === 'load') {\n      if (!maybeFilterEvent(triggerSpec, elt, makeEvent('load', { elt }))) {\n        loadImmediately(asElement(elt), handler, nodeData, triggerSpec.delay)\n      }\n    } else if (triggerSpec.pollInterval > 0) {\n      nodeData.polling = true\n      processPolling(asElement(elt), handler, triggerSpec)\n    } else {\n      addEventListener(elt, handler, nodeData, triggerSpec)\n    }\n  }\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function shouldProcessHxOn(node) {\n    const elt = asElement(node)\n    if (!elt) {\n      return false\n    }\n    const attributes = elt.attributes\n    for (let j = 0; j < attributes.length; j++) {\n      const attrName = attributes[j].name\n      if (startsWith(attrName, 'hx-on:') || startsWith(attrName, 'data-hx-on:') ||\n        startsWith(attrName, 'hx-on-') || startsWith(attrName, 'data-hx-on-')) {\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * @param {Node} elt\n   * @returns {Element[]}\n   */\n  const HX_ON_QUERY = new XPathEvaluator()\n    .createExpression('.//*[@*[ starts-with(name(), \"hx-on:\") or starts-with(name(), \"data-hx-on:\") or' +\n      ' starts-with(name(), \"hx-on-\") or starts-with(name(), \"data-hx-on-\") ]]')\n\n  function processHXOnRoot(elt, elements) {\n    if (shouldProcessHxOn(elt)) {\n      elements.push(asElement(elt))\n    }\n    const iter = HX_ON_QUERY.evaluate(elt)\n    let node = null\n    while (node = iter.iterateNext()) elements.push(asElement(node))\n  }\n\n  function findHxOnWildcardElements(elt) {\n    /** @type {Element[]} */\n    const elements = []\n    if (elt instanceof DocumentFragment) {\n      for (const child of elt.childNodes) {\n        processHXOnRoot(child, elements)\n      }\n    } else {\n      processHXOnRoot(elt, elements)\n    }\n    return elements\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {NodeListOf<Element>|[]}\n   */\n  function findElementsToProcess(elt) {\n    if (elt.querySelectorAll) {\n      const boostedSelector = ', [hx-boost] a, [data-hx-boost] a, a[hx-boost], a[data-hx-boost]'\n\n      const extensionSelectors = []\n      for (const e in extensions) {\n        const extension = extensions[e]\n        if (extension.getSelectors) {\n          var selectors = extension.getSelectors()\n          if (selectors) {\n            extensionSelectors.push(selectors)\n          }\n        }\n      }\n\n      const results = elt.querySelectorAll(VERB_SELECTOR + boostedSelector + \", form, [type='submit'],\" +\n        ' [hx-ext], [data-hx-ext], [hx-trigger], [data-hx-trigger]' + extensionSelectors.flat().map(s => ', ' + s).join(''))\n\n      return results\n    } else {\n      return []\n    }\n  }\n\n  /**\n   * Handle submit buttons/inputs that have the form attribute set\n   * see https://developer.mozilla.org/docs/Web/HTML/Element/button\n   * @param {Event} evt\n   */\n  function maybeSetLastButtonClicked(evt) {\n    const elt = getTargetButton(evt.target)\n    const internalData = getRelatedFormData(evt)\n    if (internalData) {\n      internalData.lastButtonClicked = elt\n    }\n  }\n\n  /**\n   * @param {Event} evt\n   */\n  function maybeUnsetLastButtonClicked(evt) {\n    const internalData = getRelatedFormData(evt)\n    if (internalData) {\n      internalData.lastButtonClicked = null\n    }\n  }\n\n  /**\n   * @param {EventTarget} target\n   * @returns {HTMLButtonElement|HTMLInputElement|null}\n   */\n  function getTargetButton(target) {\n    return /** @type {HTMLButtonElement|HTMLInputElement|null} */ (closest(asElement(target), \"button, input[type='submit']\"))\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {HTMLFormElement|null}\n   */\n  function getRelatedForm(elt) {\n    // @ts-ignore Get the related form if available, else find the closest parent form\n    return elt.form || closest(elt, 'form')\n  }\n\n  /**\n   * @param {Event} evt\n   * @returns {HtmxNodeInternalData|undefined}\n   */\n  function getRelatedFormData(evt) {\n    const elt = getTargetButton(evt.target)\n    if (!elt) {\n      return\n    }\n    const form = getRelatedForm(elt)\n    return getInternalData(form)\n  }\n\n  /**\n   * @param {EventTarget} elt\n   */\n  function initButtonTracking(elt) {\n    // need to handle both click and focus in:\n    //   focusin - in case someone tabs in to a button and hits the space bar\n    //   click - on OSX buttons do not focus on click see https://bugs.webkit.org/show_bug.cgi?id=13724\n    elt.addEventListener('click', maybeSetLastButtonClicked)\n    elt.addEventListener('focusin', maybeSetLastButtonClicked)\n    elt.addEventListener('focusout', maybeUnsetLastButtonClicked)\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {string} eventName\n   * @param {string} code\n   */\n  function addHxOnEventHandler(elt, eventName, code) {\n    const nodeData = getInternalData(elt)\n    if (!Array.isArray(nodeData.onHandlers)) {\n      nodeData.onHandlers = []\n    }\n    let func\n    /** @type EventListener */\n    const listener = function(e) {\n      maybeEval(elt, function() {\n        if (eltIsDisabled(elt)) {\n          return\n        }\n        if (!func) {\n          func = new Function('event', code)\n        }\n        func.call(elt, e)\n      })\n    }\n    elt.addEventListener(eventName, listener)\n    nodeData.onHandlers.push({ event: eventName, listener })\n  }\n\n  /**\n   * @param {Element} elt\n   */\n  function processHxOnWildcard(elt) {\n    // wipe any previous on handlers so that this function takes precedence\n    deInitOnHandlers(elt)\n\n    for (let i = 0; i < elt.attributes.length; i++) {\n      const name = elt.attributes[i].name\n      const value = elt.attributes[i].value\n      if (startsWith(name, 'hx-on') || startsWith(name, 'data-hx-on')) {\n        const afterOnPosition = name.indexOf('-on') + 3\n        const nextChar = name.slice(afterOnPosition, afterOnPosition + 1)\n        if (nextChar === '-' || nextChar === ':') {\n          let eventName = name.slice(afterOnPosition + 1)\n          // if the eventName starts with a colon or dash, prepend \"htmx\" for shorthand support\n          if (startsWith(eventName, ':')) {\n            eventName = 'htmx' + eventName\n          } else if (startsWith(eventName, '-')) {\n            eventName = 'htmx:' + eventName.slice(1)\n          } else if (startsWith(eventName, 'htmx-')) {\n            eventName = 'htmx:' + eventName.slice(5)\n          }\n\n          addHxOnEventHandler(elt, eventName, value)\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Element|HTMLInputElement} elt\n   */\n  function initNode(elt) {\n    triggerEvent(elt, 'htmx:beforeProcessNode')\n\n    const nodeData = getInternalData(elt)\n    const triggerSpecs = getTriggerSpecs(elt)\n    const hasExplicitHttpAction = processVerbs(elt, nodeData, triggerSpecs)\n\n    if (!hasExplicitHttpAction) {\n      if (getClosestAttributeValue(elt, 'hx-boost') === 'true') {\n        boostElement(elt, nodeData, triggerSpecs)\n      } else if (hasAttribute(elt, 'hx-trigger')) {\n        triggerSpecs.forEach(function(triggerSpec) {\n          // For \"naked\" triggers, don't do anything at all\n          addTriggerHandler(elt, triggerSpec, nodeData, function() {\n          })\n        })\n      }\n    }\n\n    // Handle submit buttons/inputs that have the form attribute set\n    // see https://developer.mozilla.org/docs/Web/HTML/Element/button\n    if (elt.tagName === 'FORM' || (getRawAttribute(elt, 'type') === 'submit' && hasAttribute(elt, 'form'))) {\n      initButtonTracking(elt)\n    }\n\n    nodeData.firstInitCompleted = true\n    triggerEvent(elt, 'htmx:afterProcessNode')\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {boolean}\n   */\n  function maybeDeInitAndHash(elt) {\n    // Ensure only valid Elements and not shadow DOM roots are inited\n    if (!(elt instanceof Element)) {\n      return false\n    }\n\n    const nodeData = getInternalData(elt)\n    const hash = attributeHash(elt)\n    if (nodeData.initHash !== hash) {\n      deInitNode(elt)\n      nodeData.initHash = hash\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Processes new content, enabling htmx behavior. This can be useful if you have content that is added to the DOM outside of the normal htmx request cycle but still want htmx attributes to work.\n   *\n   * @see https://htmx.org/api/#process\n   *\n   * @param {Element|string} elt element to process\n   */\n  function processNode(elt) {\n    elt = resolveTarget(elt)\n    if (eltIsDisabled(elt)) {\n      cleanUpElement(elt)\n      return\n    }\n\n    const elementsToInit = []\n    if (maybeDeInitAndHash(elt)) {\n      elementsToInit.push(elt)\n    }\n    forEach(findElementsToProcess(elt), function(child) {\n      if (eltIsDisabled(child)) {\n        cleanUpElement(child)\n        return\n      }\n      if (maybeDeInitAndHash(child)) {\n        elementsToInit.push(child)\n      }\n    })\n\n    forEach(findHxOnWildcardElements(elt), processHxOnWildcard)\n    forEach(elementsToInit, initNode)\n  }\n\n  //= ===================================================================\n  // Event/Log Support\n  //= ===================================================================\n\n  /**\n   * @param {string} str\n   * @returns {string}\n   */\n  function kebabEventName(str) {\n    return str.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase()\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {any} detail\n   * @returns {CustomEvent}\n   */\n  function makeEvent(eventName, detail) {\n    // TODO: `composed: true` here is a hack to make global event handlers work with events in shadow DOM\n    // This breaks expected encapsulation but needs to be here until decided otherwise by core devs\n    return new CustomEvent(eventName, { bubbles: true, cancelable: true, composed: true, detail })\n  }\n\n  /**\n   * @param {EventTarget|string} elt\n   * @param {string} eventName\n   * @param {any=} detail\n   */\n  function triggerErrorEvent(elt, eventName, detail) {\n    triggerEvent(elt, eventName, mergeObjects({ error: eventName }, detail))\n  }\n\n  /**\n   * @param {string} eventName\n   * @returns {boolean}\n   */\n  function ignoreEventForLogging(eventName) {\n    return eventName === 'htmx:afterProcessNode'\n  }\n\n  /**\n   * `withExtensions` locates all active extensions for a provided element, then\n   * executes the provided function using each of the active extensions. You can filter\n   * the element's extensions by giving it a list of extensions to ignore. It should\n   * be called internally at every extendable execution point in htmx.\n   *\n   * @param {Element} elt\n   * @param {(extension:HtmxExtension) => void} toDo\n   * @param {string[]=} extensionsToIgnore\n   * @returns void\n   */\n  function withExtensions(elt, toDo, extensionsToIgnore) {\n    forEach(getExtensions(elt, [], extensionsToIgnore), function(extension) {\n      try {\n        toDo(extension)\n      } catch (e) {\n        logError(e)\n      }\n    })\n  }\n\n  function logError(msg) {\n    console.error(msg)\n  }\n\n  /**\n   * Triggers a given event on an element\n   *\n   * @see https://htmx.org/api/#trigger\n   *\n   * @param {EventTarget|string} elt the element to trigger the event on\n   * @param {string} eventName the name of the event to trigger\n   * @param {any=} detail details for the event\n   * @returns {boolean}\n   */\n  function triggerEvent(elt, eventName, detail) {\n    elt = resolveTarget(elt)\n    if (detail == null) {\n      detail = {}\n    }\n    detail.elt = elt\n    const event = makeEvent(eventName, detail)\n    if (htmx.logger && !ignoreEventForLogging(eventName)) {\n      htmx.logger(elt, eventName, detail)\n    }\n    if (detail.error) {\n      logError(detail.error)\n      triggerEvent(elt, 'htmx:error', { errorInfo: detail })\n    }\n    let eventResult = elt.dispatchEvent(event)\n    const kebabName = kebabEventName(eventName)\n    if (eventResult && kebabName !== eventName) {\n      const kebabedEvent = makeEvent(kebabName, event.detail)\n      eventResult = eventResult && elt.dispatchEvent(kebabedEvent)\n    }\n    withExtensions(asElement(elt), function(extension) {\n      eventResult = eventResult && (extension.onEvent(eventName, event) !== false && !event.defaultPrevented)\n    })\n    return eventResult\n  }\n\n  //= ===================================================================\n  // History Support\n  //= ===================================================================\n  let currentPathForHistory = location.pathname + location.search\n\n  /**\n   * @param {string} path\n   */\n  function setCurrentPathForHistory(path) {\n    currentPathForHistory = path\n    if (canAccessLocalStorage()) {\n      sessionStorage.setItem('htmx-current-path-for-history', path)\n    }\n  }\n\n  /**\n   * @returns {Element}\n   */\n  function getHistoryElement() {\n    const historyElt = getDocument().querySelector('[hx-history-elt],[data-hx-history-elt]')\n    return historyElt || getDocument().body\n  }\n\n  /**\n   * @param {string} url\n   * @param {Element} rootElt\n   */\n  function saveToHistoryCache(url, rootElt) {\n    if (!canAccessLocalStorage()) {\n      return\n    }\n\n    // get state to save\n    const innerHTML = cleanInnerHtmlForHistory(rootElt)\n    const title = getDocument().title\n    const scroll = window.scrollY\n\n    if (htmx.config.historyCacheSize <= 0) {\n      // make sure that an eventually already existing cache is purged\n      sessionStorage.removeItem('htmx-history-cache')\n      return\n    }\n\n    url = normalizePath(url)\n\n    const historyCache = parseJSON(sessionStorage.getItem('htmx-history-cache')) || []\n    for (let i = 0; i < historyCache.length; i++) {\n      if (historyCache[i].url === url) {\n        historyCache.splice(i, 1)\n        break\n      }\n    }\n\n    /** @type HtmxHistoryItem */\n    const newHistoryItem = { url, content: innerHTML, title, scroll }\n\n    triggerEvent(getDocument().body, 'htmx:historyItemCreated', { item: newHistoryItem, cache: historyCache })\n\n    historyCache.push(newHistoryItem)\n    while (historyCache.length > htmx.config.historyCacheSize) {\n      historyCache.shift()\n    }\n\n    // keep trying to save the cache until it succeeds or is empty\n    while (historyCache.length > 0) {\n      try {\n        sessionStorage.setItem('htmx-history-cache', JSON.stringify(historyCache))\n        break\n      } catch (e) {\n        triggerErrorEvent(getDocument().body, 'htmx:historyCacheError', { cause: e, cache: historyCache })\n        historyCache.shift() // shrink the cache and retry\n      }\n    }\n  }\n\n  /**\n   * @typedef {Object} HtmxHistoryItem\n   * @property {string} url\n   * @property {string} content\n   * @property {string} title\n   * @property {number} scroll\n   */\n\n  /**\n   * @param {string} url\n   * @returns {HtmxHistoryItem|null}\n   */\n  function getCachedHistory(url) {\n    if (!canAccessLocalStorage()) {\n      return null\n    }\n\n    url = normalizePath(url)\n\n    const historyCache = parseJSON(sessionStorage.getItem('htmx-history-cache')) || []\n    for (let i = 0; i < historyCache.length; i++) {\n      if (historyCache[i].url === url) {\n        return historyCache[i]\n      }\n    }\n    return null\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {string}\n   */\n  function cleanInnerHtmlForHistory(elt) {\n    const className = htmx.config.requestClass\n    const clone = /** @type Element */ (elt.cloneNode(true))\n    forEach(findAll(clone, '.' + className), function(child) {\n      removeClassFromElement(child, className)\n    })\n    // remove the disabled attribute for any element disabled due to an htmx request\n    forEach(findAll(clone, '[data-disabled-by-htmx]'), function(child) {\n      child.removeAttribute('disabled')\n    })\n    return clone.innerHTML\n  }\n\n  function saveCurrentPageToHistory() {\n    const elt = getHistoryElement()\n    let path = currentPathForHistory\n    if (canAccessLocalStorage()) {\n      path = sessionStorage.getItem('htmx-current-path-for-history')\n    }\n    path = path || location.pathname + location.search\n\n    // Allow history snapshot feature to be disabled where hx-history=\"false\"\n    // is present *anywhere* in the current document we're about to save,\n    // so we can prevent privileged data entering the cache.\n    // The page will still be reachable as a history entry, but htmx will fetch it\n    // live from the server onpopstate rather than look in the sessionStorage cache\n    const disableHistoryCache = getDocument().querySelector('[hx-history=\"false\" i],[data-hx-history=\"false\" i]')\n    if (!disableHistoryCache) {\n      triggerEvent(getDocument().body, 'htmx:beforeHistorySave', { path, historyElt: elt })\n      saveToHistoryCache(path, elt)\n    }\n\n    if (htmx.config.historyEnabled) history.replaceState({ htmx: true }, getDocument().title, location.href)\n  }\n\n  /**\n   * @param {string} path\n   */\n  function pushUrlIntoHistory(path) {\n  // remove the cache buster parameter, if any\n    if (htmx.config.getCacheBusterParam) {\n      path = path.replace(/org\\.htmx\\.cache-buster=[^&]*&?/, '')\n      if (endsWith(path, '&') || endsWith(path, '?')) {\n        path = path.slice(0, -1)\n      }\n    }\n    if (htmx.config.historyEnabled) {\n      history.pushState({ htmx: true }, '', path)\n    }\n    setCurrentPathForHistory(path)\n  }\n\n  /**\n   * @param {string} path\n   */\n  function replaceUrlInHistory(path) {\n    if (htmx.config.historyEnabled) history.replaceState({ htmx: true }, '', path)\n    setCurrentPathForHistory(path)\n  }\n\n  /**\n   * @param {HtmxSettleTask[]} tasks\n   */\n  function settleImmediately(tasks) {\n    forEach(tasks, function(task) {\n      task.call(undefined)\n    })\n  }\n\n  /**\n   * @param {string} path\n   */\n  function loadHistoryFromServer(path) {\n    const request = new XMLHttpRequest()\n    const swapSpec = { swapStyle: 'innerHTML', swapDelay: 0, settleDelay: 0 }\n    const details = { path, xhr: request, historyElt: getHistoryElement(), swapSpec }\n    request.open('GET', path, true)\n    if (htmx.config.historyRestoreAsHxRequest) {\n      request.setRequestHeader('HX-Request', 'true')\n    }\n    request.setRequestHeader('HX-History-Restore-Request', 'true')\n    request.setRequestHeader('HX-Current-URL', location.href)\n    request.onload = function() {\n      if (this.status >= 200 && this.status < 400) {\n        details.response = this.response\n        triggerEvent(getDocument().body, 'htmx:historyCacheMissLoad', details)\n        swap(details.historyElt, details.response, swapSpec, {\n          contextElement: details.historyElt,\n          historyRequest: true\n        })\n        setCurrentPathForHistory(details.path)\n        triggerEvent(getDocument().body, 'htmx:historyRestore', { path, cacheMiss: true, serverResponse: details.response })\n      } else {\n        triggerErrorEvent(getDocument().body, 'htmx:historyCacheMissLoadError', details)\n      }\n    }\n    if (triggerEvent(getDocument().body, 'htmx:historyCacheMiss', details)) {\n      request.send() // only send request if event not prevented\n    }\n  }\n\n  /**\n   * @param {string} [path]\n   */\n  function restoreHistory(path) {\n    saveCurrentPageToHistory()\n    path = path || location.pathname + location.search\n    const cached = getCachedHistory(path)\n    if (cached) {\n      const swapSpec = { swapStyle: 'innerHTML', swapDelay: 0, settleDelay: 0, scroll: cached.scroll }\n      const details = { path, item: cached, historyElt: getHistoryElement(), swapSpec }\n      if (triggerEvent(getDocument().body, 'htmx:historyCacheHit', details)) {\n        swap(details.historyElt, cached.content, swapSpec, {\n          contextElement: details.historyElt,\n          title: cached.title\n        })\n        setCurrentPathForHistory(details.path)\n        triggerEvent(getDocument().body, 'htmx:historyRestore', details)\n      }\n    } else {\n      if (htmx.config.refreshOnHistoryMiss) {\n        // @ts-ignore: optional parameter in reload() function throws error\n        // noinspection JSUnresolvedReference\n        htmx.location.reload(true)\n      } else {\n        loadHistoryFromServer(path)\n      }\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {Element[]}\n   */\n  function addRequestIndicatorClasses(elt) {\n    let indicators = /** @type Element[] */ (findAttributeTargets(elt, 'hx-indicator'))\n    if (indicators == null) {\n      indicators = [elt]\n    }\n    forEach(indicators, function(ic) {\n      const internalData = getInternalData(ic)\n      internalData.requestCount = (internalData.requestCount || 0) + 1\n      ic.classList.add.call(ic.classList, htmx.config.requestClass)\n    })\n    return indicators\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {Element[]}\n   */\n  function disableElements(elt) {\n    let disabledElts = /** @type Element[] */ (findAttributeTargets(elt, 'hx-disabled-elt'))\n    if (disabledElts == null) {\n      disabledElts = []\n    }\n    forEach(disabledElts, function(disabledElement) {\n      const internalData = getInternalData(disabledElement)\n      internalData.requestCount = (internalData.requestCount || 0) + 1\n      disabledElement.setAttribute('disabled', '')\n      disabledElement.setAttribute('data-disabled-by-htmx', '')\n    })\n    return disabledElts\n  }\n\n  /**\n   * @param {Element[]} indicators\n   * @param {Element[]} disabled\n   */\n  function removeRequestIndicators(indicators, disabled) {\n    forEach(indicators.concat(disabled), function(ele) {\n      const internalData = getInternalData(ele)\n      internalData.requestCount = (internalData.requestCount || 1) - 1\n    })\n    forEach(indicators, function(ic) {\n      const internalData = getInternalData(ic)\n      if (internalData.requestCount === 0) {\n        ic.classList.remove.call(ic.classList, htmx.config.requestClass)\n      }\n    })\n    forEach(disabled, function(disabledElement) {\n      const internalData = getInternalData(disabledElement)\n      if (internalData.requestCount === 0) {\n        disabledElement.removeAttribute('disabled')\n        disabledElement.removeAttribute('data-disabled-by-htmx')\n      }\n    })\n  }\n\n  //= ===================================================================\n  // Input Value Processing\n  //= ===================================================================\n\n  /**\n   * @param {Element[]} processed\n   * @param {Element} elt\n   * @returns {boolean}\n   */\n  function haveSeenNode(processed, elt) {\n    for (let i = 0; i < processed.length; i++) {\n      const node = processed[i]\n      if (node.isSameNode(elt)) {\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * @param {Element} element\n   * @return {boolean}\n   */\n  function shouldInclude(element) {\n    // Cast to trick tsc, undefined values will work fine here\n    const elt = /** @type {HTMLInputElement} */ (element)\n    if (elt.name === '' || elt.name == null || elt.disabled || closest(elt, 'fieldset[disabled]')) {\n      return false\n    }\n    // ignore \"submitter\" types (see jQuery src/serialize.js)\n    if (elt.type === 'button' || elt.type === 'submit' || elt.tagName === 'image' || elt.tagName === 'reset' || elt.tagName === 'file') {\n      return false\n    }\n    if (elt.type === 'checkbox' || elt.type === 'radio') {\n      return elt.checked\n    }\n    return true\n  }\n\n  /**\n   * @param {string} name\n   * @param {string|Array|FormDataEntryValue} value\n   * @param {FormData} formData */\n  function addValueToFormData(name, value, formData) {\n    if (name != null && value != null) {\n      if (Array.isArray(value)) {\n        value.forEach(function(v) { formData.append(name, v) })\n      } else {\n        formData.append(name, value)\n      }\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @param {string|Array} value\n   * @param {FormData} formData */\n  function removeValueFromFormData(name, value, formData) {\n    if (name != null && value != null) {\n      let values = formData.getAll(name)\n      if (Array.isArray(value)) {\n        values = values.filter(v => value.indexOf(v) < 0)\n      } else {\n        values = values.filter(v => v !== value)\n      }\n      formData.delete(name)\n      forEach(values, v => formData.append(name, v))\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   * @returns {string|Array}\n   */\n  function getValueFromInput(elt) {\n    if (elt instanceof HTMLSelectElement && elt.multiple) {\n      return toArray(elt.querySelectorAll('option:checked')).map(function(e) { return (/** @type HTMLOptionElement */(e)).value })\n    }\n    // include file inputs\n    if (elt instanceof HTMLInputElement && elt.files) {\n      return toArray(elt.files)\n    }\n    // @ts-ignore value will be undefined for non-input elements, which is fine\n    return elt.value\n  }\n\n  /**\n   * @param {Element[]} processed\n   * @param {FormData} formData\n   * @param {HtmxElementValidationError[]} errors\n   * @param {Element|HTMLInputElement|HTMLSelectElement|HTMLFormElement} elt\n   * @param {boolean} validate\n   */\n  function processInputValue(processed, formData, errors, elt, validate) {\n    if (elt == null || haveSeenNode(processed, elt)) {\n      return\n    } else {\n      processed.push(elt)\n    }\n    if (shouldInclude(elt)) {\n      const name = getRawAttribute(elt, 'name')\n      addValueToFormData(name, getValueFromInput(elt), formData)\n      if (validate) {\n        validateElement(elt, errors)\n      }\n    }\n    if (elt instanceof HTMLFormElement) {\n      forEach(elt.elements, function(input) {\n        if (processed.indexOf(input) >= 0) {\n          // The input has already been processed and added to the values, but the FormData that will be\n          //  constructed right after on the form, will include it once again. So remove that input's value\n          //  now to avoid duplicates\n          removeValueFromFormData(input.name, getValueFromInput(input), formData)\n        } else {\n          processed.push(input)\n        }\n        if (validate) {\n          validateElement(input, errors)\n        }\n      })\n      new FormData(elt).forEach(function(value, name) {\n        if (value instanceof File && value.name === '') {\n          return // ignore no-name files\n        }\n        addValueToFormData(name, value, formData)\n      })\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {HtmxElementValidationError[]} errors\n   */\n  function validateElement(elt, errors) {\n    const element = /** @type {HTMLElement & ElementInternals} */ (elt)\n    if (element.willValidate) {\n      triggerEvent(element, 'htmx:validation:validate')\n      if (!element.checkValidity()) {\n        errors.push({ elt: element, message: element.validationMessage, validity: element.validity })\n        triggerEvent(element, 'htmx:validation:failed', { message: element.validationMessage, validity: element.validity })\n      }\n    }\n  }\n\n  /**\n   * Override values in the one FormData with those from another.\n   * @param {FormData} receiver the formdata that will be mutated\n   * @param {FormData} donor the formdata that will provide the overriding values\n   * @returns {FormData} the {@linkcode receiver}\n   */\n  function overrideFormData(receiver, donor) {\n    for (const key of donor.keys()) {\n      receiver.delete(key)\n    }\n    donor.forEach(function(value, key) {\n      receiver.append(key, value)\n    })\n    return receiver\n  }\n\n  /**\n * @param {Element|HTMLFormElement} elt\n * @param {HttpVerb} verb\n * @returns {{errors: HtmxElementValidationError[], formData: FormData, values: Object}}\n */\n  function getInputValues(elt, verb) {\n    /** @type Element[] */\n    const processed = []\n    const formData = new FormData()\n    const priorityFormData = new FormData()\n    /** @type HtmxElementValidationError[] */\n    const errors = []\n    const internalData = getInternalData(elt)\n    if (internalData.lastButtonClicked && !bodyContains(internalData.lastButtonClicked)) {\n      internalData.lastButtonClicked = null\n    }\n\n    // only validate when form is directly submitted and novalidate or formnovalidate are not set\n    // or if the element has an explicit hx-validate=\"true\" on it\n    let validate = (elt instanceof HTMLFormElement && elt.noValidate !== true) || getAttributeValue(elt, 'hx-validate') === 'true'\n    if (internalData.lastButtonClicked) {\n      validate = validate && internalData.lastButtonClicked.formNoValidate !== true\n    }\n\n    // for a non-GET include the related form, which may or may not be a parent element of elt\n    if (verb !== 'get') {\n      processInputValue(processed, priorityFormData, errors, getRelatedForm(elt), validate)\n    }\n\n    // include the element itself\n    processInputValue(processed, formData, errors, elt, validate)\n\n    // if a button or submit was clicked last, include its value\n    if (internalData.lastButtonClicked || elt.tagName === 'BUTTON' ||\n    (elt.tagName === 'INPUT' && getRawAttribute(elt, 'type') === 'submit')) {\n      const button = internalData.lastButtonClicked || (/** @type HTMLInputElement|HTMLButtonElement */(elt))\n      const name = getRawAttribute(button, 'name')\n      addValueToFormData(name, button.value, priorityFormData)\n    }\n\n    // include any explicit includes\n    const includes = findAttributeTargets(elt, 'hx-include')\n    forEach(includes, function(node) {\n      processInputValue(processed, formData, errors, asElement(node), validate)\n      // if a non-form is included, include any input values within it\n      if (!matches(node, 'form')) {\n        forEach(asParentNode(node).querySelectorAll(INPUT_SELECTOR), function(descendant) {\n          processInputValue(processed, formData, errors, descendant, validate)\n        })\n      }\n    })\n\n    // values from a <form> take precedence, overriding the regular values\n    overrideFormData(formData, priorityFormData)\n\n    return { errors, formData, values: formDataProxy(formData) }\n  }\n\n  /**\n   * @param {string} returnStr\n   * @param {string} name\n   * @param {any} realValue\n   * @returns {string}\n   */\n  function appendParam(returnStr, name, realValue) {\n    if (returnStr !== '') {\n      returnStr += '&'\n    }\n    if (String(realValue) === '[object Object]') {\n      realValue = JSON.stringify(realValue)\n    }\n    const s = encodeURIComponent(realValue)\n    returnStr += encodeURIComponent(name) + '=' + s\n    return returnStr\n  }\n\n  /**\n   * @param {FormData|Object} values\n   * @returns string\n   */\n  function urlEncode(values) {\n    values = formDataFromObject(values)\n    let returnStr = ''\n    values.forEach(function(value, key) {\n      returnStr = appendParam(returnStr, key, value)\n    })\n    return returnStr\n  }\n\n  //= ===================================================================\n  // Ajax\n  //= ===================================================================\n\n  /**\n * @param {Element} elt\n * @param {Element} target\n * @param {string} prompt\n * @returns {HtmxHeaderSpecification}\n */\n  function getHeaders(elt, target, prompt) {\n    /** @type HtmxHeaderSpecification */\n    const headers = {\n      'HX-Request': 'true',\n      'HX-Trigger': getRawAttribute(elt, 'id'),\n      'HX-Trigger-Name': getRawAttribute(elt, 'name'),\n      'HX-Target': getAttributeValue(target, 'id'),\n      'HX-Current-URL': location.href\n    }\n    getValuesForElement(elt, 'hx-headers', false, headers)\n    if (prompt !== undefined) {\n      headers['HX-Prompt'] = prompt\n    }\n    if (getInternalData(elt).boosted) {\n      headers['HX-Boosted'] = 'true'\n    }\n    return headers\n  }\n\n  /**\n * filterValues takes an object containing form input values\n * and returns a new object that only contains keys that are\n * specified by the closest \"hx-params\" attribute\n * @param {FormData} inputValues\n * @param {Element} elt\n * @returns {FormData}\n */\n  function filterValues(inputValues, elt) {\n    const paramsValue = getClosestAttributeValue(elt, 'hx-params')\n    if (paramsValue) {\n      if (paramsValue === 'none') {\n        return new FormData()\n      } else if (paramsValue === '*') {\n        return inputValues\n      } else if (paramsValue.indexOf('not ') === 0) {\n        forEach(paramsValue.slice(4).split(','), function(name) {\n          name = name.trim()\n          inputValues.delete(name)\n        })\n        return inputValues\n      } else {\n        const newValues = new FormData()\n        forEach(paramsValue.split(','), function(name) {\n          name = name.trim()\n          if (inputValues.has(name)) {\n            inputValues.getAll(name).forEach(function(value) { newValues.append(name, value) })\n          }\n        })\n        return newValues\n      }\n    } else {\n      return inputValues\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   * @return {boolean}\n   */\n  function isAnchorLink(elt) {\n    return !!getRawAttribute(elt, 'href') && getRawAttribute(elt, 'href').indexOf('#') >= 0\n  }\n\n  /**\n * @param {Element} elt\n * @param {HtmxSwapStyle} [swapInfoOverride]\n * @returns {HtmxSwapSpecification}\n */\n  function getSwapSpecification(elt, swapInfoOverride) {\n    const swapInfo = swapInfoOverride || getClosestAttributeValue(elt, 'hx-swap')\n    /** @type HtmxSwapSpecification */\n    const swapSpec = {\n      swapStyle: getInternalData(elt).boosted ? 'innerHTML' : htmx.config.defaultSwapStyle,\n      swapDelay: htmx.config.defaultSwapDelay,\n      settleDelay: htmx.config.defaultSettleDelay\n    }\n    if (htmx.config.scrollIntoViewOnBoost && getInternalData(elt).boosted && !isAnchorLink(elt)) {\n      swapSpec.show = 'top'\n    }\n    if (swapInfo) {\n      const split = splitOnWhitespace(swapInfo)\n      if (split.length > 0) {\n        for (let i = 0; i < split.length; i++) {\n          const value = split[i]\n          if (value.indexOf('swap:') === 0) {\n            swapSpec.swapDelay = parseInterval(value.slice(5))\n          } else if (value.indexOf('settle:') === 0) {\n            swapSpec.settleDelay = parseInterval(value.slice(7))\n          } else if (value.indexOf('transition:') === 0) {\n            swapSpec.transition = value.slice(11) === 'true'\n          } else if (value.indexOf('ignoreTitle:') === 0) {\n            swapSpec.ignoreTitle = value.slice(12) === 'true'\n          } else if (value.indexOf('scroll:') === 0) {\n            const scrollSpec = value.slice(7)\n            var splitSpec = scrollSpec.split(':')\n            const scrollVal = splitSpec.pop()\n            var selectorVal = splitSpec.length > 0 ? splitSpec.join(':') : null\n            // @ts-ignore\n            swapSpec.scroll = scrollVal\n            swapSpec.scrollTarget = selectorVal\n          } else if (value.indexOf('show:') === 0) {\n            const showSpec = value.slice(5)\n            var splitSpec = showSpec.split(':')\n            const showVal = splitSpec.pop()\n            var selectorVal = splitSpec.length > 0 ? splitSpec.join(':') : null\n            swapSpec.show = showVal\n            swapSpec.showTarget = selectorVal\n          } else if (value.indexOf('focus-scroll:') === 0) {\n            const focusScrollVal = value.slice('focus-scroll:'.length)\n            swapSpec.focusScroll = focusScrollVal == 'true'\n          } else if (i == 0) {\n            swapSpec.swapStyle = value\n          } else {\n            logError('Unknown modifier in hx-swap: ' + value)\n          }\n        }\n      }\n    }\n    return swapSpec\n  }\n\n  /**\n   * @param {Element} elt\n   * @return {boolean}\n   */\n  function usesFormData(elt) {\n    return getClosestAttributeValue(elt, 'hx-encoding') === 'multipart/form-data' ||\n    (matches(elt, 'form') && getRawAttribute(elt, 'enctype') === 'multipart/form-data')\n  }\n\n  /**\n   * @param {XMLHttpRequest} xhr\n   * @param {Element} elt\n   * @param {FormData} filteredParameters\n   * @returns {*|string|null}\n   */\n  function encodeParamsForBody(xhr, elt, filteredParameters) {\n    let encodedParameters = null\n    withExtensions(elt, function(extension) {\n      if (encodedParameters == null) {\n        encodedParameters = extension.encodeParameters(xhr, filteredParameters, elt)\n      }\n    })\n    if (encodedParameters != null) {\n      return encodedParameters\n    } else {\n      if (usesFormData(elt)) {\n        // Force conversion to an actual FormData object in case filteredParameters is a formDataProxy\n        // See https://github.com/bigskysoftware/htmx/issues/2317\n        return overrideFormData(new FormData(), formDataFromObject(filteredParameters))\n      } else {\n        return urlEncode(filteredParameters)\n      }\n    }\n  }\n\n  /**\n *\n * @param {Element} target\n * @returns {HtmxSettleInfo}\n */\n  function makeSettleInfo(target) {\n    return { tasks: [], elts: [target] }\n  }\n\n  /**\n   * @param {Element[]} content\n   * @param {HtmxSwapSpecification} swapSpec\n   */\n  function updateScrollState(content, swapSpec) {\n    const first = content[0]\n    const last = content[content.length - 1]\n    if (swapSpec.scroll) {\n      var target = null\n      if (swapSpec.scrollTarget) {\n        target = asElement(querySelectorExt(first, swapSpec.scrollTarget))\n      }\n      if (swapSpec.scroll === 'top' && (first || target)) {\n        target = target || first\n        target.scrollTop = 0\n      }\n      if (swapSpec.scroll === 'bottom' && (last || target)) {\n        target = target || last\n        target.scrollTop = target.scrollHeight\n      }\n      if (typeof swapSpec.scroll === 'number') {\n        getWindow().setTimeout(function() {\n          window.scrollTo(0, /** @type number */ (swapSpec.scroll))\n        }, 0) // next 'tick', so browser has time to render layout\n      }\n    }\n    if (swapSpec.show) {\n      var target = null\n      if (swapSpec.showTarget) {\n        let targetStr = swapSpec.showTarget\n        if (swapSpec.showTarget === 'window') {\n          targetStr = 'body'\n        }\n        target = asElement(querySelectorExt(first, targetStr))\n      }\n      if (swapSpec.show === 'top' && (first || target)) {\n        target = target || first\n        // @ts-ignore For some reason tsc doesn't recognize \"instant\" as a valid option for now\n        target.scrollIntoView({ block: 'start', behavior: htmx.config.scrollBehavior })\n      }\n      if (swapSpec.show === 'bottom' && (last || target)) {\n        target = target || last\n        // @ts-ignore For some reason tsc doesn't recognize \"instant\" as a valid option for now\n        target.scrollIntoView({ block: 'end', behavior: htmx.config.scrollBehavior })\n      }\n    }\n  }\n\n  /**\n * @param {Element} elt\n * @param {string} attr\n * @param {boolean=} evalAsDefault\n * @param {Object=} values\n * @param {Event=} event\n * @returns {Object}\n */\n  function getValuesForElement(elt, attr, evalAsDefault, values, event) {\n    if (values == null) {\n      values = {}\n    }\n    if (elt == null) {\n      return values\n    }\n    const attributeValue = getAttributeValue(elt, attr)\n    if (attributeValue) {\n      let str = attributeValue.trim()\n      let evaluateValue = evalAsDefault\n      if (str === 'unset') {\n        return null\n      }\n      if (str.indexOf('javascript:') === 0) {\n        str = str.slice(11)\n        evaluateValue = true\n      } else if (str.indexOf('js:') === 0) {\n        str = str.slice(3)\n        evaluateValue = true\n      }\n      if (str.indexOf('{') !== 0) {\n        str = '{' + str + '}'\n      }\n      let varsValues\n      if (evaluateValue) {\n        varsValues = maybeEval(elt, function() {\n          if (event) {\n            return Function('event', 'return (' + str + ')').call(elt, event)\n          } else { // allow window.event to be accessible\n            return Function('return (' + str + ')').call(elt)\n          }\n        }, {})\n      } else {\n        varsValues = parseJSON(str)\n      }\n      for (const key in varsValues) {\n        if (varsValues.hasOwnProperty(key)) {\n          if (values[key] == null) {\n            values[key] = varsValues[key]\n          }\n        }\n      }\n    }\n    return getValuesForElement(asElement(parentElt(elt)), attr, evalAsDefault, values, event)\n  }\n\n  /**\n   * @param {EventTarget|string} elt\n   * @param {() => any} toEval\n   * @param {any=} defaultVal\n   * @returns {any}\n   */\n  function maybeEval(elt, toEval, defaultVal) {\n    if (htmx.config.allowEval) {\n      return toEval()\n    } else {\n      triggerErrorEvent(elt, 'htmx:evalDisallowedError')\n      return defaultVal\n    }\n  }\n\n  /**\n * @param {Element} elt\n * @param {Event=} event\n * @param {*?=} expressionVars\n * @returns\n */\n  function getHXVarsForElement(elt, event, expressionVars) {\n    return getValuesForElement(elt, 'hx-vars', true, expressionVars, event)\n  }\n\n  /**\n * @param {Element} elt\n * @param {Event=} event\n * @param {*?=} expressionVars\n * @returns\n */\n  function getHXValsForElement(elt, event, expressionVars) {\n    return getValuesForElement(elt, 'hx-vals', false, expressionVars, event)\n  }\n\n  /**\n * @param {Element} elt\n * @param {Event=} event\n * @returns {FormData}\n */\n  function getExpressionVars(elt, event) {\n    return mergeObjects(getHXVarsForElement(elt, event), getHXValsForElement(elt, event))\n  }\n\n  /**\n   * @param {XMLHttpRequest} xhr\n   * @param {string} header\n   * @param {string|null} headerValue\n   */\n  function safelySetHeaderValue(xhr, header, headerValue) {\n    if (headerValue !== null) {\n      try {\n        xhr.setRequestHeader(header, headerValue)\n      } catch (e) {\n      // On an exception, try to set the header URI encoded instead\n        xhr.setRequestHeader(header, encodeURIComponent(headerValue))\n        xhr.setRequestHeader(header + '-URI-AutoEncoded', 'true')\n      }\n    }\n  }\n\n  /**\n   * @param {XMLHttpRequest} xhr\n   * @return {string}\n   */\n  function getPathFromResponse(xhr) {\n    if (xhr.responseURL) {\n      try {\n        const url = new URL(xhr.responseURL)\n        return url.pathname + url.search\n      } catch (e) {\n        triggerErrorEvent(getDocument().body, 'htmx:badResponseUrl', { url: xhr.responseURL })\n      }\n    }\n  }\n\n  /**\n   * @param {XMLHttpRequest} xhr\n   * @param {RegExp} regexp\n   * @return {boolean}\n   */\n  function hasHeader(xhr, regexp) {\n    return regexp.test(xhr.getAllResponseHeaders())\n  }\n\n  /**\n   * Issues an htmx-style AJAX request\n   *\n   * @see https://htmx.org/api/#ajax\n   *\n   * @param {HttpVerb} verb\n   * @param {string} path the URL path to make the AJAX\n   * @param {Element|string|HtmxAjaxHelperContext} context the element to target (defaults to the **body**) | a selector for the target | a context object that contains any of the following\n   * @return {Promise<void>} Promise that resolves immediately if no request is sent, or when the request is complete\n   */\n  function ajaxHelper(verb, path, context) {\n    verb = (/** @type HttpVerb */(verb.toLowerCase()))\n    if (context) {\n      if (context instanceof Element || typeof context === 'string') {\n        return issueAjaxRequest(verb, path, null, null, {\n          targetOverride: resolveTarget(context) || DUMMY_ELT,\n          returnPromise: true\n        })\n      } else {\n        let resolvedTarget = resolveTarget(context.target)\n        // If target is supplied but can't resolve OR source is supplied but both target and source can't be resolved\n        // then use DUMMY_ELT to abort the request with htmx:targetError to avoid it replacing body by mistake\n        if ((context.target && !resolvedTarget) || (context.source && !resolvedTarget && !resolveTarget(context.source))) {\n          resolvedTarget = DUMMY_ELT\n        }\n        return issueAjaxRequest(verb, path, resolveTarget(context.source), context.event,\n          {\n            handler: context.handler,\n            headers: context.headers,\n            values: context.values,\n            targetOverride: resolvedTarget,\n            swapOverride: context.swap,\n            select: context.select,\n            returnPromise: true\n          })\n      }\n    } else {\n      return issueAjaxRequest(verb, path, null, null, {\n        returnPromise: true\n      })\n    }\n  }\n\n  /**\n   * @param {Element} elt\n   * @return {Element[]}\n   */\n  function hierarchyForElt(elt) {\n    const arr = []\n    while (elt) {\n      arr.push(elt)\n      elt = elt.parentElement\n    }\n    return arr\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {string} path\n   * @param {HtmxRequestConfig} requestConfig\n   * @return {boolean}\n   */\n  function verifyPath(elt, path, requestConfig) {\n    const url = new URL(path, location.protocol !== 'about:' ? location.href : window.origin)\n    const origin = location.protocol !== 'about:' ? location.origin : window.origin\n    const sameHost = origin === url.origin\n\n    if (htmx.config.selfRequestsOnly) {\n      if (!sameHost) {\n        return false\n      }\n    }\n    return triggerEvent(elt, 'htmx:validateUrl', mergeObjects({ url, sameHost }, requestConfig))\n  }\n\n  /**\n   * @param {Object|FormData} obj\n   * @return {FormData}\n   */\n  function formDataFromObject(obj) {\n    if (obj instanceof FormData) return obj\n    const formData = new FormData()\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        if (obj[key] && typeof obj[key].forEach === 'function') {\n          obj[key].forEach(function(v) { formData.append(key, v) })\n        } else if (typeof obj[key] === 'object' && !(obj[key] instanceof Blob)) {\n          formData.append(key, JSON.stringify(obj[key]))\n        } else {\n          formData.append(key, obj[key])\n        }\n      }\n    }\n    return formData\n  }\n\n  /**\n   * @param {FormData} formData\n   * @param {string} name\n   * @param {Array} array\n   * @returns {Array}\n   */\n  function formDataArrayProxy(formData, name, array) {\n    // mutating the array should mutate the underlying form data\n    return new Proxy(array, {\n      get: function(target, key) {\n        if (typeof key === 'number') return target[key]\n        if (key === 'length') return target.length\n        if (key === 'push') {\n          return function(value) {\n            target.push(value)\n            formData.append(name, value)\n          }\n        }\n        if (typeof target[key] === 'function') {\n          return function() {\n            target[key].apply(target, arguments)\n            formData.delete(name)\n            target.forEach(function(v) { formData.append(name, v) })\n          }\n        }\n\n        if (target[key] && target[key].length === 1) {\n          return target[key][0]\n        } else {\n          return target[key]\n        }\n      },\n      set: function(target, index, value) {\n        target[index] = value\n        formData.delete(name)\n        target.forEach(function(v) { formData.append(name, v) })\n        return true\n      }\n    })\n  }\n\n  /**\n   * @param {FormData} formData\n   * @returns {Object}\n   */\n  function formDataProxy(formData) {\n    return new Proxy(formData, {\n      get: function(target, name) {\n        if (typeof name === 'symbol') {\n          // Forward symbol calls to the FormData itself directly\n          const result = Reflect.get(target, name)\n          // Wrap in function with apply to correctly bind the FormData context, as a direct call would result in an illegal invocation error\n          if (typeof result === 'function') {\n            return function() {\n              return result.apply(formData, arguments)\n            }\n          } else {\n            return result\n          }\n        }\n        if (name === 'toJSON') {\n          // Support JSON.stringify call on proxy\n          return () => Object.fromEntries(formData)\n        }\n        if (name in target) {\n          // Wrap in function with apply to correctly bind the FormData context, as a direct call would result in an illegal invocation error\n          if (typeof target[name] === 'function') {\n            return function() {\n              return formData[name].apply(formData, arguments)\n            }\n          }\n        }\n        const array = formData.getAll(name)\n        // Those 2 undefined & single value returns are for retro-compatibility as we weren't using FormData before\n        if (array.length === 0) {\n          return undefined\n        } else if (array.length === 1) {\n          return array[0]\n        } else {\n          return formDataArrayProxy(target, name, array)\n        }\n      },\n      set: function(target, name, value) {\n        if (typeof name !== 'string') {\n          return false\n        }\n        target.delete(name)\n        if (value && typeof value.forEach === 'function') {\n          value.forEach(function(v) { target.append(name, v) })\n        } else if (typeof value === 'object' && !(value instanceof Blob)) {\n          target.append(name, JSON.stringify(value))\n        } else {\n          target.append(name, value)\n        }\n        return true\n      },\n      deleteProperty: function(target, name) {\n        if (typeof name === 'string') {\n          target.delete(name)\n        }\n        return true\n      },\n      // Support Object.assign call from proxy\n      ownKeys: function(target) {\n        return Reflect.ownKeys(Object.fromEntries(target))\n      },\n      getOwnPropertyDescriptor: function(target, prop) {\n        return Reflect.getOwnPropertyDescriptor(Object.fromEntries(target), prop)\n      }\n    })\n  }\n\n  /**\n   * @param {HttpVerb} verb\n   * @param {string} path\n   * @param {Element} elt\n   * @param {Event} event\n   * @param {HtmxAjaxEtc} [etc]\n   * @param {boolean} [confirmed]\n   * @return {Promise<void>}\n   */\n  function issueAjaxRequest(verb, path, elt, event, etc, confirmed) {\n    let resolve = null\n    let reject = null\n    etc = etc != null ? etc : {}\n    if (etc.returnPromise && typeof Promise !== 'undefined') {\n      var promise = new Promise(function(_resolve, _reject) {\n        resolve = _resolve\n        reject = _reject\n      })\n    }\n    if (elt == null) {\n      elt = getDocument().body\n    }\n    const responseHandler = etc.handler || handleAjaxResponse\n    const select = etc.select || null\n\n    if (!bodyContains(elt)) {\n    // do not issue requests for elements removed from the DOM\n      maybeCall(resolve)\n      return promise\n    }\n    const target = etc.targetOverride || asElement(getTarget(elt))\n    if (target == null || target == DUMMY_ELT) {\n      triggerErrorEvent(elt, 'htmx:targetError', { target: getClosestAttributeValue(elt, 'hx-target') })\n      maybeCall(reject)\n      return promise\n    }\n\n    let eltData = getInternalData(elt)\n    const submitter = eltData.lastButtonClicked\n\n    if (submitter) {\n      const buttonPath = getRawAttribute(submitter, 'formaction')\n      if (buttonPath != null) {\n        path = buttonPath\n      }\n\n      const buttonVerb = getRawAttribute(submitter, 'formmethod')\n      if (buttonVerb != null) {\n        if (VERBS.includes(buttonVerb.toLowerCase())) {\n          verb = (/** @type HttpVerb */(buttonVerb))\n        } else {\n          maybeCall(resolve)\n          return promise\n        }\n      }\n    }\n\n    const confirmQuestion = getClosestAttributeValue(elt, 'hx-confirm')\n    // allow event-based confirmation w/ a callback\n    if (confirmed === undefined) {\n      const issueRequest = function(skipConfirmation) {\n        return issueAjaxRequest(verb, path, elt, event, etc, !!skipConfirmation)\n      }\n      const confirmDetails = { target, elt, path, verb, triggeringEvent: event, etc, issueRequest, question: confirmQuestion }\n      if (triggerEvent(elt, 'htmx:confirm', confirmDetails) === false) {\n        maybeCall(resolve)\n        return promise\n      }\n    }\n\n    let syncElt = elt\n    let syncStrategy = getClosestAttributeValue(elt, 'hx-sync')\n    let queueStrategy = null\n    let abortable = false\n    if (syncStrategy) {\n      const syncStrings = syncStrategy.split(':')\n      const selector = syncStrings[0].trim()\n      if (selector === 'this') {\n        syncElt = findThisElement(elt, 'hx-sync')\n      } else {\n        syncElt = asElement(querySelectorExt(elt, selector))\n      }\n      // default to the drop strategy\n      syncStrategy = (syncStrings[1] || 'drop').trim()\n      eltData = getInternalData(syncElt)\n      if (syncStrategy === 'drop' && eltData.xhr && eltData.abortable !== true) {\n        maybeCall(resolve)\n        return promise\n      } else if (syncStrategy === 'abort') {\n        if (eltData.xhr) {\n          maybeCall(resolve)\n          return promise\n        } else {\n          abortable = true\n        }\n      } else if (syncStrategy === 'replace') {\n        triggerEvent(syncElt, 'htmx:abort') // abort the current request and continue\n      } else if (syncStrategy.indexOf('queue') === 0) {\n        const queueStrArray = syncStrategy.split(' ')\n        queueStrategy = (queueStrArray[1] || 'last').trim()\n      }\n    }\n\n    if (eltData.xhr) {\n      if (eltData.abortable) {\n        triggerEvent(syncElt, 'htmx:abort') // abort the current request and continue\n      } else {\n        if (queueStrategy == null) {\n          if (event) {\n            const eventData = getInternalData(event)\n            if (eventData && eventData.triggerSpec && eventData.triggerSpec.queue) {\n              queueStrategy = eventData.triggerSpec.queue\n            }\n          }\n          if (queueStrategy == null) {\n            queueStrategy = 'last'\n          }\n        }\n        if (eltData.queuedRequests == null) {\n          eltData.queuedRequests = []\n        }\n        if (queueStrategy === 'first' && eltData.queuedRequests.length === 0) {\n          eltData.queuedRequests.push(function() {\n            issueAjaxRequest(verb, path, elt, event, etc)\n          })\n        } else if (queueStrategy === 'all') {\n          eltData.queuedRequests.push(function() {\n            issueAjaxRequest(verb, path, elt, event, etc)\n          })\n        } else if (queueStrategy === 'last') {\n          eltData.queuedRequests = [] // dump existing queue\n          eltData.queuedRequests.push(function() {\n            issueAjaxRequest(verb, path, elt, event, etc)\n          })\n        }\n        maybeCall(resolve)\n        return promise\n      }\n    }\n\n    const xhr = new XMLHttpRequest()\n    eltData.xhr = xhr\n    eltData.abortable = abortable\n    const endRequestLock = function() {\n      eltData.xhr = null\n      eltData.abortable = false\n      if (eltData.queuedRequests != null &&\n      eltData.queuedRequests.length > 0) {\n        const queuedRequest = eltData.queuedRequests.shift()\n        queuedRequest()\n      }\n    }\n    const promptQuestion = getClosestAttributeValue(elt, 'hx-prompt')\n    if (promptQuestion) {\n      var promptResponse = prompt(promptQuestion)\n      // prompt returns null if cancelled and empty string if accepted with no entry\n      if (promptResponse === null ||\n      !triggerEvent(elt, 'htmx:prompt', { prompt: promptResponse, target })) {\n        maybeCall(resolve)\n        endRequestLock()\n        return promise\n      }\n    }\n\n    if (confirmQuestion && !confirmed) {\n      if (!confirm(confirmQuestion)) {\n        maybeCall(resolve)\n        endRequestLock()\n        return promise\n      }\n    }\n\n    let headers = getHeaders(elt, target, promptResponse)\n\n    if (verb !== 'get' && !usesFormData(elt)) {\n      headers['Content-Type'] = 'application/x-www-form-urlencoded'\n    }\n\n    if (etc.headers) {\n      headers = mergeObjects(headers, etc.headers)\n    }\n    const results = getInputValues(elt, verb)\n    let errors = results.errors\n    const rawFormData = results.formData\n    if (etc.values) {\n      overrideFormData(rawFormData, formDataFromObject(etc.values))\n    }\n    const expressionVars = formDataFromObject(getExpressionVars(elt, event))\n    const allFormData = overrideFormData(rawFormData, expressionVars)\n    let filteredFormData = filterValues(allFormData, elt)\n\n    if (htmx.config.getCacheBusterParam && verb === 'get') {\n      filteredFormData.set('org.htmx.cache-buster', getRawAttribute(target, 'id') || 'true')\n    }\n\n    // behavior of anchors w/ empty href is to use the current URL\n    if (path == null || path === '') {\n      path = location.href\n    }\n\n    /**\n     * @type {Object}\n     * @property {boolean} [credentials]\n     * @property {number} [timeout]\n     * @property {boolean} [noHeaders]\n     */\n    const requestAttrValues = getValuesForElement(elt, 'hx-request')\n\n    const eltIsBoosted = getInternalData(elt).boosted\n\n    let useUrlParams = htmx.config.methodsThatUseUrlParams.indexOf(verb) >= 0\n\n    /** @type HtmxRequestConfig */\n    const requestConfig = {\n      boosted: eltIsBoosted,\n      useUrlParams,\n      formData: filteredFormData,\n      parameters: formDataProxy(filteredFormData),\n      unfilteredFormData: allFormData,\n      unfilteredParameters: formDataProxy(allFormData),\n      headers,\n      elt,\n      target,\n      verb,\n      errors,\n      withCredentials: etc.credentials || requestAttrValues.credentials || htmx.config.withCredentials,\n      timeout: etc.timeout || requestAttrValues.timeout || htmx.config.timeout,\n      path,\n      triggeringEvent: event\n    }\n\n    if (!triggerEvent(elt, 'htmx:configRequest', requestConfig)) {\n      maybeCall(resolve)\n      endRequestLock()\n      return promise\n    }\n\n    // copy out in case the object was overwritten\n    path = requestConfig.path\n    verb = requestConfig.verb\n    headers = requestConfig.headers\n    filteredFormData = formDataFromObject(requestConfig.parameters)\n    errors = requestConfig.errors\n    useUrlParams = requestConfig.useUrlParams\n\n    if (errors && errors.length > 0) {\n      triggerEvent(elt, 'htmx:validation:halted', requestConfig)\n      maybeCall(resolve)\n      endRequestLock()\n      return promise\n    }\n\n    const splitPath = path.split('#')\n    const pathNoAnchor = splitPath[0]\n    const anchor = splitPath[1]\n\n    let finalPath = path\n    if (useUrlParams) {\n      finalPath = pathNoAnchor\n      const hasValues = !filteredFormData.keys().next().done\n      if (hasValues) {\n        if (finalPath.indexOf('?') < 0) {\n          finalPath += '?'\n        } else {\n          finalPath += '&'\n        }\n        finalPath += urlEncode(filteredFormData)\n        if (anchor) {\n          finalPath += '#' + anchor\n        }\n      }\n    }\n\n    if (!verifyPath(elt, finalPath, requestConfig)) {\n      triggerErrorEvent(elt, 'htmx:invalidPath', requestConfig)\n      maybeCall(reject)\n      endRequestLock()\n      return promise\n    }\n\n    xhr.open(verb.toUpperCase(), finalPath, true)\n    xhr.overrideMimeType('text/html')\n    xhr.withCredentials = requestConfig.withCredentials\n    xhr.timeout = requestConfig.timeout\n\n    // request headers\n    if (requestAttrValues.noHeaders) {\n    // ignore all headers\n    } else {\n      for (const header in headers) {\n        if (headers.hasOwnProperty(header)) {\n          const headerValue = headers[header]\n          safelySetHeaderValue(xhr, header, headerValue)\n        }\n      }\n    }\n\n    /** @type {HtmxResponseInfo} */\n    const responseInfo = {\n      xhr,\n      target,\n      requestConfig,\n      etc,\n      boosted: eltIsBoosted,\n      select,\n      pathInfo: {\n        requestPath: path,\n        finalRequestPath: finalPath,\n        responsePath: null,\n        anchor\n      }\n    }\n\n    xhr.onload = function() {\n      try {\n        const hierarchy = hierarchyForElt(elt)\n        responseInfo.pathInfo.responsePath = getPathFromResponse(xhr)\n        responseHandler(elt, responseInfo)\n        if (responseInfo.keepIndicators !== true) {\n          removeRequestIndicators(indicators, disableElts)\n        }\n        triggerEvent(elt, 'htmx:afterRequest', responseInfo)\n        triggerEvent(elt, 'htmx:afterOnLoad', responseInfo)\n        // if the body no longer contains the element, trigger the event on the closest parent\n        // remaining in the DOM\n        if (!bodyContains(elt)) {\n          let secondaryTriggerElt = null\n          while (hierarchy.length > 0 && secondaryTriggerElt == null) {\n            const parentEltInHierarchy = hierarchy.shift()\n            if (bodyContains(parentEltInHierarchy)) {\n              secondaryTriggerElt = parentEltInHierarchy\n            }\n          }\n          if (secondaryTriggerElt) {\n            triggerEvent(secondaryTriggerElt, 'htmx:afterRequest', responseInfo)\n            triggerEvent(secondaryTriggerElt, 'htmx:afterOnLoad', responseInfo)\n          }\n        }\n        maybeCall(resolve)\n      } catch (e) {\n        triggerErrorEvent(elt, 'htmx:onLoadError', mergeObjects({ error: e }, responseInfo))\n        throw e\n      } finally {\n        endRequestLock()\n      }\n    }\n    xhr.onerror = function() {\n      removeRequestIndicators(indicators, disableElts)\n      triggerErrorEvent(elt, 'htmx:afterRequest', responseInfo)\n      triggerErrorEvent(elt, 'htmx:sendError', responseInfo)\n      maybeCall(reject)\n      endRequestLock()\n    }\n    xhr.onabort = function() {\n      removeRequestIndicators(indicators, disableElts)\n      triggerErrorEvent(elt, 'htmx:afterRequest', responseInfo)\n      triggerErrorEvent(elt, 'htmx:sendAbort', responseInfo)\n      maybeCall(reject)\n      endRequestLock()\n    }\n    xhr.ontimeout = function() {\n      removeRequestIndicators(indicators, disableElts)\n      triggerErrorEvent(elt, 'htmx:afterRequest', responseInfo)\n      triggerErrorEvent(elt, 'htmx:timeout', responseInfo)\n      maybeCall(reject)\n      endRequestLock()\n    }\n    if (!triggerEvent(elt, 'htmx:beforeRequest', responseInfo)) {\n      maybeCall(resolve)\n      endRequestLock()\n      return promise\n    }\n    var indicators = addRequestIndicatorClasses(elt)\n    var disableElts = disableElements(elt)\n\n    forEach(['loadstart', 'loadend', 'progress', 'abort'], function(eventName) {\n      forEach([xhr, xhr.upload], function(target) {\n        target.addEventListener(eventName, function(event) {\n          triggerEvent(elt, 'htmx:xhr:' + eventName, {\n            lengthComputable: event.lengthComputable,\n            loaded: event.loaded,\n            total: event.total\n          })\n        })\n      })\n    })\n    triggerEvent(elt, 'htmx:beforeSend', responseInfo)\n    const params = useUrlParams ? null : encodeParamsForBody(xhr, elt, filteredFormData)\n    xhr.send(params)\n    return promise\n  }\n\n  /**\n   * @typedef {Object} HtmxHistoryUpdate\n   * @property {string|null} [type]\n   * @property {string|null} [path]\n   */\n\n  /**\n   * @param {Element} elt\n   * @param {HtmxResponseInfo} responseInfo\n   * @return {HtmxHistoryUpdate}\n   */\n  function determineHistoryUpdates(elt, responseInfo) {\n    const xhr = responseInfo.xhr\n\n    //= ==========================================\n    // First consult response headers\n    //= ==========================================\n    let pathFromHeaders = null\n    let typeFromHeaders = null\n    if (hasHeader(xhr, /HX-Push:/i)) {\n      pathFromHeaders = xhr.getResponseHeader('HX-Push')\n      typeFromHeaders = 'push'\n    } else if (hasHeader(xhr, /HX-Push-Url:/i)) {\n      pathFromHeaders = xhr.getResponseHeader('HX-Push-Url')\n      typeFromHeaders = 'push'\n    } else if (hasHeader(xhr, /HX-Replace-Url:/i)) {\n      pathFromHeaders = xhr.getResponseHeader('HX-Replace-Url')\n      typeFromHeaders = 'replace'\n    }\n\n    // if there was a response header, that has priority\n    if (pathFromHeaders) {\n      if (pathFromHeaders === 'false') {\n        return {}\n      } else {\n        return {\n          type: typeFromHeaders,\n          path: pathFromHeaders\n        }\n      }\n    }\n\n    //= ==========================================\n    // Next resolve via DOM values\n    //= ==========================================\n    const requestPath = responseInfo.pathInfo.finalRequestPath\n    const responsePath = responseInfo.pathInfo.responsePath\n\n    const pushUrl = getClosestAttributeValue(elt, 'hx-push-url')\n    const replaceUrl = getClosestAttributeValue(elt, 'hx-replace-url')\n    const elementIsBoosted = getInternalData(elt).boosted\n\n    let saveType = null\n    let path = null\n\n    if (pushUrl) {\n      saveType = 'push'\n      path = pushUrl\n    } else if (replaceUrl) {\n      saveType = 'replace'\n      path = replaceUrl\n    } else if (elementIsBoosted) {\n      saveType = 'push'\n      path = responsePath || requestPath // if there is no response path, go with the original request path\n    }\n\n    if (path) {\n    // false indicates no push, return empty object\n      if (path === 'false') {\n        return {}\n      }\n\n      // true indicates we want to follow wherever the server ended up sending us\n      if (path === 'true') {\n        path = responsePath || requestPath // if there is no response path, go with the original request path\n      }\n\n      // restore any anchor associated with the request\n      if (responseInfo.pathInfo.anchor && path.indexOf('#') === -1) {\n        path = path + '#' + responseInfo.pathInfo.anchor\n      }\n\n      return {\n        type: saveType,\n        path\n      }\n    } else {\n      return {}\n    }\n  }\n\n  /**\n   * @param {HtmxResponseHandlingConfig} responseHandlingConfig\n   * @param {number} status\n   * @return {boolean}\n   */\n  function codeMatches(responseHandlingConfig, status) {\n    var regExp = new RegExp(responseHandlingConfig.code)\n    return regExp.test(status.toString(10))\n  }\n\n  /**\n   * @param {XMLHttpRequest} xhr\n   * @return {HtmxResponseHandlingConfig}\n   */\n  function resolveResponseHandling(xhr) {\n    for (var i = 0; i < htmx.config.responseHandling.length; i++) {\n      /** @type HtmxResponseHandlingConfig */\n      var responseHandlingElement = htmx.config.responseHandling[i]\n      if (codeMatches(responseHandlingElement, xhr.status)) {\n        return responseHandlingElement\n      }\n    }\n    // no matches, return no swap\n    return {\n      swap: false\n    }\n  }\n\n  /**\n   * @param {string} title\n   */\n  function handleTitle(title) {\n    if (title) {\n      const titleElt = find('title')\n      if (titleElt) {\n        titleElt.textContent = title\n      } else {\n        window.document.title = title\n      }\n    }\n  }\n\n  /**\n   * Resove the Retarget selector and throw if not found\n   * @param {Element} elt\n   * @param {String} target\n   * @returns {Element}\n   */\n  function resolveRetarget(elt, target) {\n    if (target === 'this') {\n      return elt\n    }\n    const resolvedTarget = asElement(querySelectorExt(elt, target))\n    if (resolvedTarget == null) {\n      triggerErrorEvent(elt, 'htmx:targetError', { target })\n      throw new Error(`Invalid re-target ${target}`)\n    }\n    return resolvedTarget\n  }\n\n  /**\n   * @param {Element} elt\n   * @param {HtmxResponseInfo} responseInfo\n   */\n  function handleAjaxResponse(elt, responseInfo) {\n    const xhr = responseInfo.xhr\n    let target = responseInfo.target\n    const etc = responseInfo.etc\n    const responseInfoSelect = responseInfo.select\n\n    if (!triggerEvent(elt, 'htmx:beforeOnLoad', responseInfo)) return\n\n    if (hasHeader(xhr, /HX-Trigger:/i)) {\n      handleTriggerHeader(xhr, 'HX-Trigger', elt)\n    }\n\n    if (hasHeader(xhr, /HX-Location:/i)) {\n      saveCurrentPageToHistory()\n      let redirectPath = xhr.getResponseHeader('HX-Location')\n      /** @type {HtmxAjaxHelperContext&{path:string}} */\n      var redirectSwapSpec\n      if (redirectPath.indexOf('{') === 0) {\n        redirectSwapSpec = parseJSON(redirectPath)\n        // what's the best way to throw an error if the user didn't include this\n        redirectPath = redirectSwapSpec.path\n        delete redirectSwapSpec.path\n      }\n      ajaxHelper('get', redirectPath, redirectSwapSpec).then(function() {\n        pushUrlIntoHistory(redirectPath)\n      })\n      return\n    }\n\n    const shouldRefresh = hasHeader(xhr, /HX-Refresh:/i) && xhr.getResponseHeader('HX-Refresh') === 'true'\n\n    if (hasHeader(xhr, /HX-Redirect:/i)) {\n      responseInfo.keepIndicators = true\n      htmx.location.href = xhr.getResponseHeader('HX-Redirect')\n      shouldRefresh && htmx.location.reload()\n      return\n    }\n\n    if (shouldRefresh) {\n      responseInfo.keepIndicators = true\n      htmx.location.reload()\n      return\n    }\n\n    const historyUpdate = determineHistoryUpdates(elt, responseInfo)\n\n    const responseHandling = resolveResponseHandling(xhr)\n    const shouldSwap = responseHandling.swap\n    let isError = !!responseHandling.error\n    let ignoreTitle = htmx.config.ignoreTitle || responseHandling.ignoreTitle\n    let selectOverride = responseHandling.select\n    if (responseHandling.target) {\n      responseInfo.target = resolveRetarget(elt, responseHandling.target)\n    }\n    var swapOverride = etc.swapOverride\n    if (swapOverride == null && responseHandling.swapOverride) {\n      swapOverride = responseHandling.swapOverride\n    }\n\n    // response headers override response handling config\n    if (hasHeader(xhr, /HX-Retarget:/i)) {\n      responseInfo.target = resolveRetarget(elt, xhr.getResponseHeader('HX-Retarget'))\n    }\n\n    if (hasHeader(xhr, /HX-Reswap:/i)) {\n      swapOverride = xhr.getResponseHeader('HX-Reswap')\n    }\n\n    var serverResponse = xhr.response\n    /** @type HtmxBeforeSwapDetails */\n    var beforeSwapDetails = mergeObjects({\n      shouldSwap,\n      serverResponse,\n      isError,\n      ignoreTitle,\n      selectOverride,\n      swapOverride\n    }, responseInfo)\n\n    if (responseHandling.event && !triggerEvent(target, responseHandling.event, beforeSwapDetails)) return\n\n    if (!triggerEvent(target, 'htmx:beforeSwap', beforeSwapDetails)) return\n\n    target = beforeSwapDetails.target // allow re-targeting\n    serverResponse = beforeSwapDetails.serverResponse // allow updating content\n    isError = beforeSwapDetails.isError // allow updating error\n    ignoreTitle = beforeSwapDetails.ignoreTitle // allow updating ignoring title\n    selectOverride = beforeSwapDetails.selectOverride // allow updating select override\n    swapOverride = beforeSwapDetails.swapOverride // allow updating swap override\n\n    responseInfo.target = target // Make updated target available to response events\n    responseInfo.failed = isError // Make failed property available to response events\n    responseInfo.successful = !isError // Make successful property available to response events\n\n    if (beforeSwapDetails.shouldSwap) {\n      if (xhr.status === 286) {\n        cancelPolling(elt)\n      }\n\n      withExtensions(elt, function(extension) {\n        serverResponse = extension.transformResponse(serverResponse, xhr, elt)\n      })\n\n      // Save current page if there will be a history update\n      if (historyUpdate.type) {\n        saveCurrentPageToHistory()\n      }\n\n      var swapSpec = getSwapSpecification(elt, swapOverride)\n\n      if (!swapSpec.hasOwnProperty('ignoreTitle')) {\n        swapSpec.ignoreTitle = ignoreTitle\n      }\n\n      target.classList.add(htmx.config.swappingClass)\n\n      if (responseInfoSelect) {\n        selectOverride = responseInfoSelect\n      }\n\n      if (hasHeader(xhr, /HX-Reselect:/i)) {\n        selectOverride = xhr.getResponseHeader('HX-Reselect')\n      }\n\n      const selectOOB = getClosestAttributeValue(elt, 'hx-select-oob')\n      const select = getClosestAttributeValue(elt, 'hx-select')\n\n      swap(target, serverResponse, swapSpec, {\n        select: selectOverride === 'unset' ? null : selectOverride || select,\n        selectOOB,\n        eventInfo: responseInfo,\n        anchor: responseInfo.pathInfo.anchor,\n        contextElement: elt,\n        afterSwapCallback: function() {\n          if (hasHeader(xhr, /HX-Trigger-After-Swap:/i)) {\n            let finalElt = elt\n            if (!bodyContains(elt)) {\n              finalElt = getDocument().body\n            }\n            handleTriggerHeader(xhr, 'HX-Trigger-After-Swap', finalElt)\n          }\n        },\n        afterSettleCallback: function() {\n          if (hasHeader(xhr, /HX-Trigger-After-Settle:/i)) {\n            let finalElt = elt\n            if (!bodyContains(elt)) {\n              finalElt = getDocument().body\n            }\n            handleTriggerHeader(xhr, 'HX-Trigger-After-Settle', finalElt)\n          }\n        },\n        beforeSwapCallback: function() {\n          // if we need to save history, do so, before swapping so that relative resources have the correct base URL\n          if (historyUpdate.type) {\n            triggerEvent(getDocument().body, 'htmx:beforeHistoryUpdate', mergeObjects({ history: historyUpdate }, responseInfo))\n            if (historyUpdate.type === 'push') {\n              pushUrlIntoHistory(historyUpdate.path)\n              triggerEvent(getDocument().body, 'htmx:pushedIntoHistory', { path: historyUpdate.path })\n            } else {\n              replaceUrlInHistory(historyUpdate.path)\n              triggerEvent(getDocument().body, 'htmx:replacedInHistory', { path: historyUpdate.path })\n            }\n          }\n        }\n      })\n    }\n    if (isError) {\n      triggerErrorEvent(elt, 'htmx:responseError', mergeObjects({ error: 'Response Status Error Code ' + xhr.status + ' from ' + responseInfo.pathInfo.requestPath }, responseInfo))\n    }\n  }\n\n  //= ===================================================================\n  // Extensions API\n  //= ===================================================================\n\n  /** @type {Object<string, HtmxExtension>} */\n  const extensions = {}\n\n  /**\n   * extensionBase defines the default functions for all extensions.\n   * @returns {HtmxExtension}\n   */\n  function extensionBase() {\n    return {\n      init: function(api) { return null },\n      getSelectors: function() { return null },\n      onEvent: function(name, evt) { return true },\n      transformResponse: function(text, xhr, elt) { return text },\n      isInlineSwap: function(swapStyle) { return false },\n      handleSwap: function(swapStyle, target, fragment, settleInfo) { return false },\n      encodeParameters: function(xhr, parameters, elt) { return null }\n    }\n  }\n\n  /**\n   * defineExtension initializes the extension and adds it to the htmx registry\n   *\n   * @see https://htmx.org/api/#defineExtension\n   *\n   * @param {string} name the extension name\n   * @param {Partial<HtmxExtension>} extension the extension definition\n   */\n  function defineExtension(name, extension) {\n    if (extension.init) {\n      extension.init(internalAPI)\n    }\n    extensions[name] = mergeObjects(extensionBase(), extension)\n  }\n\n  /**\n   * removeExtension removes an extension from the htmx registry\n   *\n   * @see https://htmx.org/api/#removeExtension\n   *\n   * @param {string} name\n   */\n  function removeExtension(name) {\n    delete extensions[name]\n  }\n\n  /**\n   * getExtensions searches up the DOM tree to return all extensions that can be applied to a given element\n   *\n   * @param {Element} elt\n   * @param {HtmxExtension[]=} extensionsToReturn\n   * @param {string[]=} extensionsToIgnore\n   * @returns {HtmxExtension[]}\n   */\n  function getExtensions(elt, extensionsToReturn, extensionsToIgnore) {\n    if (extensionsToReturn == undefined) {\n      extensionsToReturn = []\n    }\n    if (elt == undefined) {\n      return extensionsToReturn\n    }\n    if (extensionsToIgnore == undefined) {\n      extensionsToIgnore = []\n    }\n    const extensionsForElement = getAttributeValue(elt, 'hx-ext')\n    if (extensionsForElement) {\n      forEach(extensionsForElement.split(','), function(extensionName) {\n        extensionName = extensionName.replace(/ /g, '')\n        if (extensionName.slice(0, 7) == 'ignore:') {\n          extensionsToIgnore.push(extensionName.slice(7))\n          return\n        }\n        if (extensionsToIgnore.indexOf(extensionName) < 0) {\n          const extension = extensions[extensionName]\n          if (extension && extensionsToReturn.indexOf(extension) < 0) {\n            extensionsToReturn.push(extension)\n          }\n        }\n      })\n    }\n    return getExtensions(asElement(parentElt(elt)), extensionsToReturn, extensionsToIgnore)\n  }\n\n  //= ===================================================================\n  // Initialization\n  //= ===================================================================\n  var isReady = false\n  getDocument().addEventListener('DOMContentLoaded', function() {\n    isReady = true\n  })\n\n  /**\n   * Execute a function now if DOMContentLoaded has fired, otherwise listen for it.\n   *\n   * This function uses isReady because there is no reliable way to ask the browser whether\n   * the DOMContentLoaded event has already been fired; there's a gap between DOMContentLoaded\n   * firing and readystate=complete.\n   */\n  function ready(fn) {\n    // Checking readyState here is a failsafe in case the htmx script tag entered the DOM by\n    // some means other than the initial page load.\n    if (isReady || getDocument().readyState === 'complete') {\n      fn()\n    } else {\n      getDocument().addEventListener('DOMContentLoaded', fn)\n    }\n  }\n\n  function insertIndicatorStyles() {\n    if (htmx.config.includeIndicatorStyles !== false) {\n      const nonceAttribute = htmx.config.inlineStyleNonce ? ` nonce=\"${htmx.config.inlineStyleNonce}\"` : ''\n      getDocument().head.insertAdjacentHTML('beforeend',\n        '<style' + nonceAttribute + '>\\\n      .' + htmx.config.indicatorClass + '{opacity:0}\\\n      .' + htmx.config.requestClass + ' .' + htmx.config.indicatorClass + '{opacity:1; transition: opacity 200ms ease-in;}\\\n      .' + htmx.config.requestClass + '.' + htmx.config.indicatorClass + '{opacity:1; transition: opacity 200ms ease-in;}\\\n      </style>')\n    }\n  }\n\n  function getMetaConfig() {\n    /** @type HTMLMetaElement */\n    const element = getDocument().querySelector('meta[name=\"htmx-config\"]')\n    if (element) {\n      return parseJSON(element.content)\n    } else {\n      return null\n    }\n  }\n\n  function mergeMetaConfig() {\n    const metaConfig = getMetaConfig()\n    if (metaConfig) {\n      htmx.config = mergeObjects(htmx.config, metaConfig)\n    }\n  }\n\n  // initialize the document\n  ready(function() {\n    mergeMetaConfig()\n    insertIndicatorStyles()\n    let body = getDocument().body\n    processNode(body)\n    const restoredElts = getDocument().querySelectorAll(\n      \"[hx-trigger='restored'],[data-hx-trigger='restored']\"\n    )\n    body.addEventListener('htmx:abort', function(evt) {\n      const target = evt.target\n      const internalData = getInternalData(target)\n      if (internalData && internalData.xhr) {\n        internalData.xhr.abort()\n      }\n    })\n    /** @type {(ev: PopStateEvent) => any} */\n    const originalPopstate = window.onpopstate ? window.onpopstate.bind(window) : null\n    /** @type {(ev: PopStateEvent) => any} */\n    window.onpopstate = function(event) {\n      if (event.state && event.state.htmx) {\n        restoreHistory()\n        forEach(restoredElts, function(elt) {\n          triggerEvent(elt, 'htmx:restored', {\n            document: getDocument(),\n            triggerEvent\n          })\n        })\n      } else {\n        if (originalPopstate) {\n          originalPopstate(event)\n        }\n      }\n    }\n    getWindow().setTimeout(function() {\n      triggerEvent(body, 'htmx:load', {}) // give ready handlers a chance to load up before firing this event\n      body = null // kill reference for gc\n    }, 0)\n  })\n\n  return htmx\n})()\n\n/** @typedef {'get'|'head'|'post'|'put'|'delete'|'connect'|'options'|'trace'|'patch'} HttpVerb */\n\n/**\n * @typedef {Object} SwapOptions\n * @property {string} [select]\n * @property {string} [selectOOB]\n * @property {*} [eventInfo]\n * @property {string} [anchor]\n * @property {Element} [contextElement]\n * @property {swapCallback} [afterSwapCallback]\n * @property {swapCallback} [afterSettleCallback]\n * @property {swapCallback} [beforeSwapCallback]\n * @property {string} [title]\n * @property {boolean} [historyRequest]\n */\n\n/**\n * @callback swapCallback\n */\n\n/**\n * @typedef {'innerHTML' | 'outerHTML' | 'beforebegin' | 'afterbegin' | 'beforeend' | 'afterend' | 'delete' | 'none' | string} HtmxSwapStyle\n */\n\n/**\n * @typedef HtmxSwapSpecification\n * @property {HtmxSwapStyle} swapStyle\n * @property {number} swapDelay\n * @property {number} settleDelay\n * @property {boolean} [transition]\n * @property {boolean} [ignoreTitle]\n * @property {string} [head]\n * @property {'top' | 'bottom' | number } [scroll]\n * @property {string} [scrollTarget]\n * @property {string} [show]\n * @property {string} [showTarget]\n * @property {boolean} [focusScroll]\n */\n\n/**\n * @typedef {((this:Node, evt:Event) => boolean) & {source: string}} ConditionalFunction\n */\n\n/**\n * @typedef {Object} HtmxTriggerSpecification\n * @property {string} trigger\n * @property {number} [pollInterval]\n * @property {ConditionalFunction} [eventFilter]\n * @property {boolean} [changed]\n * @property {boolean} [once]\n * @property {boolean} [consume]\n * @property {number} [delay]\n * @property {string} [from]\n * @property {string} [target]\n * @property {number} [throttle]\n * @property {string} [queue]\n * @property {string} [root]\n * @property {string} [threshold]\n */\n\n/**\n * @typedef {{elt: Element, message: string, validity: ValidityState}} HtmxElementValidationError\n */\n\n/**\n * @typedef {Record<string, string>} HtmxHeaderSpecification\n * @property {'true'} HX-Request\n * @property {string|null} HX-Trigger\n * @property {string|null} HX-Trigger-Name\n * @property {string|null} HX-Target\n * @property {string} HX-Current-URL\n * @property {string} [HX-Prompt]\n * @property {'true'} [HX-Boosted]\n * @property {string} [Content-Type]\n * @property {'true'} [HX-History-Restore-Request]\n */\n\n/**\n * @typedef HtmxAjaxHelperContext\n * @property {Element|string} [source]\n * @property {Event} [event]\n * @property {HtmxAjaxHandler} [handler]\n * @property {Element|string} [target]\n * @property {HtmxSwapStyle} [swap]\n * @property {Object|FormData} [values]\n * @property {Record<string,string>} [headers]\n * @property {string} [select]\n */\n\n/**\n * @typedef {Object} HtmxRequestConfig\n * @property {boolean} boosted\n * @property {boolean} useUrlParams\n * @property {FormData} formData\n * @property {Object} parameters formData proxy\n * @property {FormData} unfilteredFormData\n * @property {Object} unfilteredParameters unfilteredFormData proxy\n * @property {HtmxHeaderSpecification} headers\n * @property {Element} elt\n * @property {Element} target\n * @property {HttpVerb} verb\n * @property {HtmxElementValidationError[]} errors\n * @property {boolean} withCredentials\n * @property {number} timeout\n * @property {string} path\n * @property {Event} triggeringEvent\n */\n\n/**\n * @typedef {Object} HtmxResponseInfo\n * @property {XMLHttpRequest} xhr\n * @property {Element} target\n * @property {HtmxRequestConfig} requestConfig\n * @property {HtmxAjaxEtc} etc\n * @property {boolean} boosted\n * @property {string} select\n * @property {{requestPath: string, finalRequestPath: string, responsePath: string|null, anchor: string}} pathInfo\n * @property {boolean} [failed]\n * @property {boolean} [successful]\n * @property {boolean} [keepIndicators]\n */\n\n/**\n * @typedef {Object} HtmxAjaxEtc\n * @property {boolean} [returnPromise]\n * @property {HtmxAjaxHandler} [handler]\n * @property {string} [select]\n * @property {Element} [targetOverride]\n * @property {HtmxSwapStyle} [swapOverride]\n * @property {Record<string,string>} [headers]\n * @property {Object|FormData} [values]\n * @property {boolean} [credentials]\n * @property {number} [timeout]\n */\n\n/**\n * @typedef {Object} HtmxResponseHandlingConfig\n * @property {string} [code]\n * @property {boolean} swap\n * @property {boolean} [error]\n * @property {boolean} [ignoreTitle]\n * @property {string} [select]\n * @property {string} [target]\n * @property {string} [swapOverride]\n * @property {string} [event]\n */\n\n/**\n * @typedef {HtmxResponseInfo & {shouldSwap: boolean, serverResponse: any, isError: boolean, ignoreTitle: boolean, selectOverride:string, swapOverride:string}} HtmxBeforeSwapDetails\n */\n\n/**\n * @callback HtmxAjaxHandler\n * @param {Element} elt\n * @param {HtmxResponseInfo} responseInfo\n */\n\n/**\n * @typedef {(() => void)} HtmxSettleTask\n */\n\n/**\n * @typedef {Object} HtmxSettleInfo\n * @property {HtmxSettleTask[]} tasks\n * @property {Element[]} elts\n * @property {string} [title]\n */\n\n/**\n * @see https://github.com/bigskysoftware/htmx-extensions/blob/main/README.md\n * @typedef {Object} HtmxExtension\n * @property {(api: any) => void} init\n * @property {(name: string, event: CustomEvent) => boolean} onEvent\n * @property {(text: string, xhr: XMLHttpRequest, elt: Element) => string} transformResponse\n * @property {(swapStyle: HtmxSwapStyle) => boolean} isInlineSwap\n * @property {(swapStyle: HtmxSwapStyle, target: Node, fragment: Node, settleInfo: HtmxSettleInfo) => boolean|Node[]} handleSwap\n * @property {(xhr: XMLHttpRequest, parameters: FormData, elt: Node) => *|string|null} encodeParameters\n * @property {() => string[]|null} getSelectors\n */\nexport default htmx\n","import * as bootstrap from 'bootstrap';\nimport '@popperjs/core';\nimport htmx from 'htmx.org';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './autocomplete.js';\n\n// Make libraries available globally\nwindow.bootstrap = bootstrap;\nwindow.htmx = htmx;\n\n// Initialize Bootstrap components\ndocument.addEventListener('DOMContentLoaded', function() {\n    // Initialize all tooltips\n    const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle=\"tooltip\"]');\n    const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));\n    \n    // Initialize all popovers\n    const popoverTriggerList = document.querySelectorAll('[data-bs-toggle=\"popover\"]');\n    const popoverList = [...popoverTriggerList].map(popoverTriggerEl => new bootstrap.Popover(popoverTriggerEl));\n});","/*!\n  * Bootstrap v5.3.7 (https://getbootstrap.com/)\n  * Copyright 2011-2025 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\nimport * as Popper from '@popperjs/core';\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/data.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n/**\n * Constants\n */\n\nconst elementMap = new Map();\nconst Data = {\n  set(element, key, instance) {\n    if (!elementMap.has(element)) {\n      elementMap.set(element, new Map());\n    }\n    const instanceMap = elementMap.get(element);\n\n    // make it clear we only want one instance per element\n    // can be removed later when multiple key/instances are fine to be used\n    if (!instanceMap.has(key) && instanceMap.size !== 0) {\n      // eslint-disable-next-line no-console\n      console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(instanceMap.keys())[0]}.`);\n      return;\n    }\n    instanceMap.set(key, instance);\n  },\n  get(element, key) {\n    if (elementMap.has(element)) {\n      return elementMap.get(element).get(key) || null;\n    }\n    return null;\n  },\n  remove(element, key) {\n    if (!elementMap.has(element)) {\n      return;\n    }\n    const instanceMap = elementMap.get(element);\n    instanceMap.delete(key);\n\n    // free up element references if there are no instances left for an element\n    if (instanceMap.size === 0) {\n      elementMap.delete(element);\n    }\n  }\n};\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/index.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst MAX_UID = 1000000;\nconst MILLISECONDS_MULTIPLIER = 1000;\nconst TRANSITION_END = 'transitionend';\n\n/**\n * Properly escape IDs selectors to handle weird IDs\n * @param {string} selector\n * @returns {string}\n */\nconst parseSelector = selector => {\n  if (selector && window.CSS && window.CSS.escape) {\n    // document.querySelector needs escaping to handle IDs (html5+) containing for instance /\n    selector = selector.replace(/#([^\\s\"#']+)/g, (match, id) => `#${CSS.escape(id)}`);\n  }\n  return selector;\n};\n\n// Shout-out Angus Croll (https://goo.gl/pxwQGp)\nconst toType = object => {\n  if (object === null || object === undefined) {\n    return `${object}`;\n  }\n  return Object.prototype.toString.call(object).match(/\\s([a-z]+)/i)[1].toLowerCase();\n};\n\n/**\n * Public Util API\n */\n\nconst getUID = prefix => {\n  do {\n    prefix += Math.floor(Math.random() * MAX_UID);\n  } while (document.getElementById(prefix));\n  return prefix;\n};\nconst getTransitionDurationFromElement = element => {\n  if (!element) {\n    return 0;\n  }\n\n  // Get transition-duration of the element\n  let {\n    transitionDuration,\n    transitionDelay\n  } = window.getComputedStyle(element);\n  const floatTransitionDuration = Number.parseFloat(transitionDuration);\n  const floatTransitionDelay = Number.parseFloat(transitionDelay);\n\n  // Return 0 if element or transition duration is not found\n  if (!floatTransitionDuration && !floatTransitionDelay) {\n    return 0;\n  }\n\n  // If multiple durations are defined, take the first\n  transitionDuration = transitionDuration.split(',')[0];\n  transitionDelay = transitionDelay.split(',')[0];\n  return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER;\n};\nconst triggerTransitionEnd = element => {\n  element.dispatchEvent(new Event(TRANSITION_END));\n};\nconst isElement = object => {\n  if (!object || typeof object !== 'object') {\n    return false;\n  }\n  if (typeof object.jquery !== 'undefined') {\n    object = object[0];\n  }\n  return typeof object.nodeType !== 'undefined';\n};\nconst getElement = object => {\n  // it's a jQuery object or a node element\n  if (isElement(object)) {\n    return object.jquery ? object[0] : object;\n  }\n  if (typeof object === 'string' && object.length > 0) {\n    return document.querySelector(parseSelector(object));\n  }\n  return null;\n};\nconst isVisible = element => {\n  if (!isElement(element) || element.getClientRects().length === 0) {\n    return false;\n  }\n  const elementIsVisible = getComputedStyle(element).getPropertyValue('visibility') === 'visible';\n  // Handle `details` element as its content may falsie appear visible when it is closed\n  const closedDetails = element.closest('details:not([open])');\n  if (!closedDetails) {\n    return elementIsVisible;\n  }\n  if (closedDetails !== element) {\n    const summary = element.closest('summary');\n    if (summary && summary.parentNode !== closedDetails) {\n      return false;\n    }\n    if (summary === null) {\n      return false;\n    }\n  }\n  return elementIsVisible;\n};\nconst isDisabled = element => {\n  if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n    return true;\n  }\n  if (element.classList.contains('disabled')) {\n    return true;\n  }\n  if (typeof element.disabled !== 'undefined') {\n    return element.disabled;\n  }\n  return element.hasAttribute('disabled') && element.getAttribute('disabled') !== 'false';\n};\nconst findShadowRoot = element => {\n  if (!document.documentElement.attachShadow) {\n    return null;\n  }\n\n  // Can find the shadow root otherwise it'll return the document\n  if (typeof element.getRootNode === 'function') {\n    const root = element.getRootNode();\n    return root instanceof ShadowRoot ? root : null;\n  }\n  if (element instanceof ShadowRoot) {\n    return element;\n  }\n\n  // when we don't find a shadow root\n  if (!element.parentNode) {\n    return null;\n  }\n  return findShadowRoot(element.parentNode);\n};\nconst noop = () => {};\n\n/**\n * Trick to restart an element's animation\n *\n * @param {HTMLElement} element\n * @return void\n *\n * @see https://www.harrytheo.com/blog/2021/02/restart-a-css-animation-with-javascript/#restarting-a-css-animation\n */\nconst reflow = element => {\n  element.offsetHeight; // eslint-disable-line no-unused-expressions\n};\nconst getjQuery = () => {\n  if (window.jQuery && !document.body.hasAttribute('data-bs-no-jquery')) {\n    return window.jQuery;\n  }\n  return null;\n};\nconst DOMContentLoadedCallbacks = [];\nconst onDOMContentLoaded = callback => {\n  if (document.readyState === 'loading') {\n    // add listener on the first call when the document is in loading state\n    if (!DOMContentLoadedCallbacks.length) {\n      document.addEventListener('DOMContentLoaded', () => {\n        for (const callback of DOMContentLoadedCallbacks) {\n          callback();\n        }\n      });\n    }\n    DOMContentLoadedCallbacks.push(callback);\n  } else {\n    callback();\n  }\n};\nconst isRTL = () => document.documentElement.dir === 'rtl';\nconst defineJQueryPlugin = plugin => {\n  onDOMContentLoaded(() => {\n    const $ = getjQuery();\n    /* istanbul ignore if */\n    if ($) {\n      const name = plugin.NAME;\n      const JQUERY_NO_CONFLICT = $.fn[name];\n      $.fn[name] = plugin.jQueryInterface;\n      $.fn[name].Constructor = plugin;\n      $.fn[name].noConflict = () => {\n        $.fn[name] = JQUERY_NO_CONFLICT;\n        return plugin.jQueryInterface;\n      };\n    }\n  });\n};\nconst execute = (possibleCallback, args = [], defaultValue = possibleCallback) => {\n  return typeof possibleCallback === 'function' ? possibleCallback.call(...args) : defaultValue;\n};\nconst executeAfterTransition = (callback, transitionElement, waitForTransition = true) => {\n  if (!waitForTransition) {\n    execute(callback);\n    return;\n  }\n  const durationPadding = 5;\n  const emulatedDuration = getTransitionDurationFromElement(transitionElement) + durationPadding;\n  let called = false;\n  const handler = ({\n    target\n  }) => {\n    if (target !== transitionElement) {\n      return;\n    }\n    called = true;\n    transitionElement.removeEventListener(TRANSITION_END, handler);\n    execute(callback);\n  };\n  transitionElement.addEventListener(TRANSITION_END, handler);\n  setTimeout(() => {\n    if (!called) {\n      triggerTransitionEnd(transitionElement);\n    }\n  }, emulatedDuration);\n};\n\n/**\n * Return the previous/next element of a list.\n *\n * @param {array} list    The list of elements\n * @param activeElement   The active element\n * @param shouldGetNext   Choose to get next or previous element\n * @param isCycleAllowed\n * @return {Element|elem} The proper element\n */\nconst getNextActiveElement = (list, activeElement, shouldGetNext, isCycleAllowed) => {\n  const listLength = list.length;\n  let index = list.indexOf(activeElement);\n\n  // if the element does not exist in the list return an element\n  // depending on the direction and if cycle is allowed\n  if (index === -1) {\n    return !shouldGetNext && isCycleAllowed ? list[listLength - 1] : list[0];\n  }\n  index += shouldGetNext ? 1 : -1;\n  if (isCycleAllowed) {\n    index = (index + listLength) % listLength;\n  }\n  return list[Math.max(0, Math.min(index, listLength - 1))];\n};\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/event-handler.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst namespaceRegex = /[^.]*(?=\\..*)\\.|.*/;\nconst stripNameRegex = /\\..*/;\nconst stripUidRegex = /::\\d+$/;\nconst eventRegistry = {}; // Events storage\nlet uidEvent = 1;\nconst customEvents = {\n  mouseenter: 'mouseover',\n  mouseleave: 'mouseout'\n};\nconst nativeEvents = new Set(['click', 'dblclick', 'mouseup', 'mousedown', 'contextmenu', 'mousewheel', 'DOMMouseScroll', 'mouseover', 'mouseout', 'mousemove', 'selectstart', 'selectend', 'keydown', 'keypress', 'keyup', 'orientationchange', 'touchstart', 'touchmove', 'touchend', 'touchcancel', 'pointerdown', 'pointermove', 'pointerup', 'pointerleave', 'pointercancel', 'gesturestart', 'gesturechange', 'gestureend', 'focus', 'blur', 'change', 'reset', 'select', 'submit', 'focusin', 'focusout', 'load', 'unload', 'beforeunload', 'resize', 'move', 'DOMContentLoaded', 'readystatechange', 'error', 'abort', 'scroll']);\n\n/**\n * Private methods\n */\n\nfunction makeEventUid(element, uid) {\n  return uid && `${uid}::${uidEvent++}` || element.uidEvent || uidEvent++;\n}\nfunction getElementEvents(element) {\n  const uid = makeEventUid(element);\n  element.uidEvent = uid;\n  eventRegistry[uid] = eventRegistry[uid] || {};\n  return eventRegistry[uid];\n}\nfunction bootstrapHandler(element, fn) {\n  return function handler(event) {\n    hydrateObj(event, {\n      delegateTarget: element\n    });\n    if (handler.oneOff) {\n      EventHandler.off(element, event.type, fn);\n    }\n    return fn.apply(element, [event]);\n  };\n}\nfunction bootstrapDelegationHandler(element, selector, fn) {\n  return function handler(event) {\n    const domElements = element.querySelectorAll(selector);\n    for (let {\n      target\n    } = event; target && target !== this; target = target.parentNode) {\n      for (const domElement of domElements) {\n        if (domElement !== target) {\n          continue;\n        }\n        hydrateObj(event, {\n          delegateTarget: target\n        });\n        if (handler.oneOff) {\n          EventHandler.off(element, event.type, selector, fn);\n        }\n        return fn.apply(target, [event]);\n      }\n    }\n  };\n}\nfunction findHandler(events, callable, delegationSelector = null) {\n  return Object.values(events).find(event => event.callable === callable && event.delegationSelector === delegationSelector);\n}\nfunction normalizeParameters(originalTypeEvent, handler, delegationFunction) {\n  const isDelegated = typeof handler === 'string';\n  // TODO: tooltip passes `false` instead of selector, so we need to check\n  const callable = isDelegated ? delegationFunction : handler || delegationFunction;\n  let typeEvent = getTypeEvent(originalTypeEvent);\n  if (!nativeEvents.has(typeEvent)) {\n    typeEvent = originalTypeEvent;\n  }\n  return [isDelegated, callable, typeEvent];\n}\nfunction addHandler(element, originalTypeEvent, handler, delegationFunction, oneOff) {\n  if (typeof originalTypeEvent !== 'string' || !element) {\n    return;\n  }\n  let [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction);\n\n  // in case of mouseenter or mouseleave wrap the handler within a function that checks for its DOM position\n  // this prevents the handler from being dispatched the same way as mouseover or mouseout does\n  if (originalTypeEvent in customEvents) {\n    const wrapFunction = fn => {\n      return function (event) {\n        if (!event.relatedTarget || event.relatedTarget !== event.delegateTarget && !event.delegateTarget.contains(event.relatedTarget)) {\n          return fn.call(this, event);\n        }\n      };\n    };\n    callable = wrapFunction(callable);\n  }\n  const events = getElementEvents(element);\n  const handlers = events[typeEvent] || (events[typeEvent] = {});\n  const previousFunction = findHandler(handlers, callable, isDelegated ? handler : null);\n  if (previousFunction) {\n    previousFunction.oneOff = previousFunction.oneOff && oneOff;\n    return;\n  }\n  const uid = makeEventUid(callable, originalTypeEvent.replace(namespaceRegex, ''));\n  const fn = isDelegated ? bootstrapDelegationHandler(element, handler, callable) : bootstrapHandler(element, callable);\n  fn.delegationSelector = isDelegated ? handler : null;\n  fn.callable = callable;\n  fn.oneOff = oneOff;\n  fn.uidEvent = uid;\n  handlers[uid] = fn;\n  element.addEventListener(typeEvent, fn, isDelegated);\n}\nfunction removeHandler(element, events, typeEvent, handler, delegationSelector) {\n  const fn = findHandler(events[typeEvent], handler, delegationSelector);\n  if (!fn) {\n    return;\n  }\n  element.removeEventListener(typeEvent, fn, Boolean(delegationSelector));\n  delete events[typeEvent][fn.uidEvent];\n}\nfunction removeNamespacedHandlers(element, events, typeEvent, namespace) {\n  const storeElementEvent = events[typeEvent] || {};\n  for (const [handlerKey, event] of Object.entries(storeElementEvent)) {\n    if (handlerKey.includes(namespace)) {\n      removeHandler(element, events, typeEvent, event.callable, event.delegationSelector);\n    }\n  }\n}\nfunction getTypeEvent(event) {\n  // allow to get the native events from namespaced events ('click.bs.button' --> 'click')\n  event = event.replace(stripNameRegex, '');\n  return customEvents[event] || event;\n}\nconst EventHandler = {\n  on(element, event, handler, delegationFunction) {\n    addHandler(element, event, handler, delegationFunction, false);\n  },\n  one(element, event, handler, delegationFunction) {\n    addHandler(element, event, handler, delegationFunction, true);\n  },\n  off(element, originalTypeEvent, handler, delegationFunction) {\n    if (typeof originalTypeEvent !== 'string' || !element) {\n      return;\n    }\n    const [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction);\n    const inNamespace = typeEvent !== originalTypeEvent;\n    const events = getElementEvents(element);\n    const storeElementEvent = events[typeEvent] || {};\n    const isNamespace = originalTypeEvent.startsWith('.');\n    if (typeof callable !== 'undefined') {\n      // Simplest case: handler is passed, remove that listener ONLY.\n      if (!Object.keys(storeElementEvent).length) {\n        return;\n      }\n      removeHandler(element, events, typeEvent, callable, isDelegated ? handler : null);\n      return;\n    }\n    if (isNamespace) {\n      for (const elementEvent of Object.keys(events)) {\n        removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1));\n      }\n    }\n    for (const [keyHandlers, event] of Object.entries(storeElementEvent)) {\n      const handlerKey = keyHandlers.replace(stripUidRegex, '');\n      if (!inNamespace || originalTypeEvent.includes(handlerKey)) {\n        removeHandler(element, events, typeEvent, event.callable, event.delegationSelector);\n      }\n    }\n  },\n  trigger(element, event, args) {\n    if (typeof event !== 'string' || !element) {\n      return null;\n    }\n    const $ = getjQuery();\n    const typeEvent = getTypeEvent(event);\n    const inNamespace = event !== typeEvent;\n    let jQueryEvent = null;\n    let bubbles = true;\n    let nativeDispatch = true;\n    let defaultPrevented = false;\n    if (inNamespace && $) {\n      jQueryEvent = $.Event(event, args);\n      $(element).trigger(jQueryEvent);\n      bubbles = !jQueryEvent.isPropagationStopped();\n      nativeDispatch = !jQueryEvent.isImmediatePropagationStopped();\n      defaultPrevented = jQueryEvent.isDefaultPrevented();\n    }\n    const evt = hydrateObj(new Event(event, {\n      bubbles,\n      cancelable: true\n    }), args);\n    if (defaultPrevented) {\n      evt.preventDefault();\n    }\n    if (nativeDispatch) {\n      element.dispatchEvent(evt);\n    }\n    if (evt.defaultPrevented && jQueryEvent) {\n      jQueryEvent.preventDefault();\n    }\n    return evt;\n  }\n};\nfunction hydrateObj(obj, meta = {}) {\n  for (const [key, value] of Object.entries(meta)) {\n    try {\n      obj[key] = value;\n    } catch (_unused) {\n      Object.defineProperty(obj, key, {\n        configurable: true,\n        get() {\n          return value;\n        }\n      });\n    }\n  }\n  return obj;\n}\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/manipulator.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nfunction normalizeData(value) {\n  if (value === 'true') {\n    return true;\n  }\n  if (value === 'false') {\n    return false;\n  }\n  if (value === Number(value).toString()) {\n    return Number(value);\n  }\n  if (value === '' || value === 'null') {\n    return null;\n  }\n  if (typeof value !== 'string') {\n    return value;\n  }\n  try {\n    return JSON.parse(decodeURIComponent(value));\n  } catch (_unused) {\n    return value;\n  }\n}\nfunction normalizeDataKey(key) {\n  return key.replace(/[A-Z]/g, chr => `-${chr.toLowerCase()}`);\n}\nconst Manipulator = {\n  setDataAttribute(element, key, value) {\n    element.setAttribute(`data-bs-${normalizeDataKey(key)}`, value);\n  },\n  removeDataAttribute(element, key) {\n    element.removeAttribute(`data-bs-${normalizeDataKey(key)}`);\n  },\n  getDataAttributes(element) {\n    if (!element) {\n      return {};\n    }\n    const attributes = {};\n    const bsKeys = Object.keys(element.dataset).filter(key => key.startsWith('bs') && !key.startsWith('bsConfig'));\n    for (const key of bsKeys) {\n      let pureKey = key.replace(/^bs/, '');\n      pureKey = pureKey.charAt(0).toLowerCase() + pureKey.slice(1);\n      attributes[pureKey] = normalizeData(element.dataset[key]);\n    }\n    return attributes;\n  },\n  getDataAttribute(element, key) {\n    return normalizeData(element.getAttribute(`data-bs-${normalizeDataKey(key)}`));\n  }\n};\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/config.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Class definition\n */\n\nclass Config {\n  // Getters\n  static get Default() {\n    return {};\n  }\n  static get DefaultType() {\n    return {};\n  }\n  static get NAME() {\n    throw new Error('You have to implement the static method \"NAME\", for each component!');\n  }\n  _getConfig(config) {\n    config = this._mergeConfigObj(config);\n    config = this._configAfterMerge(config);\n    this._typeCheckConfig(config);\n    return config;\n  }\n  _configAfterMerge(config) {\n    return config;\n  }\n  _mergeConfigObj(config, element) {\n    const jsonConfig = isElement(element) ? Manipulator.getDataAttribute(element, 'config') : {}; // try to parse\n\n    return {\n      ...this.constructor.Default,\n      ...(typeof jsonConfig === 'object' ? jsonConfig : {}),\n      ...(isElement(element) ? Manipulator.getDataAttributes(element) : {}),\n      ...(typeof config === 'object' ? config : {})\n    };\n  }\n  _typeCheckConfig(config, configTypes = this.constructor.DefaultType) {\n    for (const [property, expectedTypes] of Object.entries(configTypes)) {\n      const value = config[property];\n      const valueType = isElement(value) ? 'element' : toType(value);\n      if (!new RegExp(expectedTypes).test(valueType)) {\n        throw new TypeError(`${this.constructor.NAME.toUpperCase()}: Option \"${property}\" provided type \"${valueType}\" but expected type \"${expectedTypes}\".`);\n      }\n    }\n  }\n}\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap base-component.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst VERSION = '5.3.7';\n\n/**\n * Class definition\n */\n\nclass BaseComponent extends Config {\n  constructor(element, config) {\n    super();\n    element = getElement(element);\n    if (!element) {\n      return;\n    }\n    this._element = element;\n    this._config = this._getConfig(config);\n    Data.set(this._element, this.constructor.DATA_KEY, this);\n  }\n\n  // Public\n  dispose() {\n    Data.remove(this._element, this.constructor.DATA_KEY);\n    EventHandler.off(this._element, this.constructor.EVENT_KEY);\n    for (const propertyName of Object.getOwnPropertyNames(this)) {\n      this[propertyName] = null;\n    }\n  }\n\n  // Private\n  _queueCallback(callback, element, isAnimated = true) {\n    executeAfterTransition(callback, element, isAnimated);\n  }\n  _getConfig(config) {\n    config = this._mergeConfigObj(config, this._element);\n    config = this._configAfterMerge(config);\n    this._typeCheckConfig(config);\n    return config;\n  }\n\n  // Static\n  static getInstance(element) {\n    return Data.get(getElement(element), this.DATA_KEY);\n  }\n  static getOrCreateInstance(element, config = {}) {\n    return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null);\n  }\n  static get VERSION() {\n    return VERSION;\n  }\n  static get DATA_KEY() {\n    return `bs.${this.NAME}`;\n  }\n  static get EVENT_KEY() {\n    return `.${this.DATA_KEY}`;\n  }\n  static eventName(name) {\n    return `${name}${this.EVENT_KEY}`;\n  }\n}\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/selector-engine.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst getSelector = element => {\n  let selector = element.getAttribute('data-bs-target');\n  if (!selector || selector === '#') {\n    let hrefAttribute = element.getAttribute('href');\n\n    // The only valid content that could double as a selector are IDs or classes,\n    // so everything starting with `#` or `.`. If a \"real\" URL is used as the selector,\n    // `document.querySelector` will rightfully complain it is invalid.\n    // See https://github.com/twbs/bootstrap/issues/32273\n    if (!hrefAttribute || !hrefAttribute.includes('#') && !hrefAttribute.startsWith('.')) {\n      return null;\n    }\n\n    // Just in case some CMS puts out a full URL with the anchor appended\n    if (hrefAttribute.includes('#') && !hrefAttribute.startsWith('#')) {\n      hrefAttribute = `#${hrefAttribute.split('#')[1]}`;\n    }\n    selector = hrefAttribute && hrefAttribute !== '#' ? hrefAttribute.trim() : null;\n  }\n  return selector ? selector.split(',').map(sel => parseSelector(sel)).join(',') : null;\n};\nconst SelectorEngine = {\n  find(selector, element = document.documentElement) {\n    return [].concat(...Element.prototype.querySelectorAll.call(element, selector));\n  },\n  findOne(selector, element = document.documentElement) {\n    return Element.prototype.querySelector.call(element, selector);\n  },\n  children(element, selector) {\n    return [].concat(...element.children).filter(child => child.matches(selector));\n  },\n  parents(element, selector) {\n    const parents = [];\n    let ancestor = element.parentNode.closest(selector);\n    while (ancestor) {\n      parents.push(ancestor);\n      ancestor = ancestor.parentNode.closest(selector);\n    }\n    return parents;\n  },\n  prev(element, selector) {\n    let previous = element.previousElementSibling;\n    while (previous) {\n      if (previous.matches(selector)) {\n        return [previous];\n      }\n      previous = previous.previousElementSibling;\n    }\n    return [];\n  },\n  // TODO: this is now unused; remove later along with prev()\n  next(element, selector) {\n    let next = element.nextElementSibling;\n    while (next) {\n      if (next.matches(selector)) {\n        return [next];\n      }\n      next = next.nextElementSibling;\n    }\n    return [];\n  },\n  focusableChildren(element) {\n    const focusables = ['a', 'button', 'input', 'textarea', 'select', 'details', '[tabindex]', '[contenteditable=\"true\"]'].map(selector => `${selector}:not([tabindex^=\"-\"])`).join(',');\n    return this.find(focusables, element).filter(el => !isDisabled(el) && isVisible(el));\n  },\n  getSelectorFromElement(element) {\n    const selector = getSelector(element);\n    if (selector) {\n      return SelectorEngine.findOne(selector) ? selector : null;\n    }\n    return null;\n  },\n  getElementFromSelector(element) {\n    const selector = getSelector(element);\n    return selector ? SelectorEngine.findOne(selector) : null;\n  },\n  getMultipleElementsFromSelector(element) {\n    const selector = getSelector(element);\n    return selector ? SelectorEngine.find(selector) : [];\n  }\n};\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/component-functions.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst enableDismissTrigger = (component, method = 'hide') => {\n  const clickEvent = `click.dismiss${component.EVENT_KEY}`;\n  const name = component.NAME;\n  EventHandler.on(document, clickEvent, `[data-bs-dismiss=\"${name}\"]`, function (event) {\n    if (['A', 'AREA'].includes(this.tagName)) {\n      event.preventDefault();\n    }\n    if (isDisabled(this)) {\n      return;\n    }\n    const target = SelectorEngine.getElementFromSelector(this) || this.closest(`.${name}`);\n    const instance = component.getOrCreateInstance(target);\n\n    // Method argument is left, for Alert and only, as it doesn't implement the 'hide' method\n    instance[method]();\n  });\n};\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap alert.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$f = 'alert';\nconst DATA_KEY$a = 'bs.alert';\nconst EVENT_KEY$b = `.${DATA_KEY$a}`;\nconst EVENT_CLOSE = `close${EVENT_KEY$b}`;\nconst EVENT_CLOSED = `closed${EVENT_KEY$b}`;\nconst CLASS_NAME_FADE$5 = 'fade';\nconst CLASS_NAME_SHOW$8 = 'show';\n\n/**\n * Class definition\n */\n\nclass Alert extends BaseComponent {\n  // Getters\n  static get NAME() {\n    return NAME$f;\n  }\n\n  // Public\n  close() {\n    const closeEvent = EventHandler.trigger(this._element, EVENT_CLOSE);\n    if (closeEvent.defaultPrevented) {\n      return;\n    }\n    this._element.classList.remove(CLASS_NAME_SHOW$8);\n    const isAnimated = this._element.classList.contains(CLASS_NAME_FADE$5);\n    this._queueCallback(() => this._destroyElement(), this._element, isAnimated);\n  }\n\n  // Private\n  _destroyElement() {\n    this._element.remove();\n    EventHandler.trigger(this._element, EVENT_CLOSED);\n    this.dispose();\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Alert.getOrCreateInstance(this);\n      if (typeof config !== 'string') {\n        return;\n      }\n      if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n        throw new TypeError(`No method named \"${config}\"`);\n      }\n      data[config](this);\n    });\n  }\n}\n\n/**\n * Data API implementation\n */\n\nenableDismissTrigger(Alert, 'close');\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Alert);\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap button.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$e = 'button';\nconst DATA_KEY$9 = 'bs.button';\nconst EVENT_KEY$a = `.${DATA_KEY$9}`;\nconst DATA_API_KEY$6 = '.data-api';\nconst CLASS_NAME_ACTIVE$3 = 'active';\nconst SELECTOR_DATA_TOGGLE$5 = '[data-bs-toggle=\"button\"]';\nconst EVENT_CLICK_DATA_API$6 = `click${EVENT_KEY$a}${DATA_API_KEY$6}`;\n\n/**\n * Class definition\n */\n\nclass Button extends BaseComponent {\n  // Getters\n  static get NAME() {\n    return NAME$e;\n  }\n\n  // Public\n  toggle() {\n    // Toggle class and sync the `aria-pressed` attribute with the return value of the `.toggle()` method\n    this._element.setAttribute('aria-pressed', this._element.classList.toggle(CLASS_NAME_ACTIVE$3));\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Button.getOrCreateInstance(this);\n      if (config === 'toggle') {\n        data[config]();\n      }\n    });\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API$6, SELECTOR_DATA_TOGGLE$5, event => {\n  event.preventDefault();\n  const button = event.target.closest(SELECTOR_DATA_TOGGLE$5);\n  const data = Button.getOrCreateInstance(button);\n  data.toggle();\n});\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Button);\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/swipe.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$d = 'swipe';\nconst EVENT_KEY$9 = '.bs.swipe';\nconst EVENT_TOUCHSTART = `touchstart${EVENT_KEY$9}`;\nconst EVENT_TOUCHMOVE = `touchmove${EVENT_KEY$9}`;\nconst EVENT_TOUCHEND = `touchend${EVENT_KEY$9}`;\nconst EVENT_POINTERDOWN = `pointerdown${EVENT_KEY$9}`;\nconst EVENT_POINTERUP = `pointerup${EVENT_KEY$9}`;\nconst POINTER_TYPE_TOUCH = 'touch';\nconst POINTER_TYPE_PEN = 'pen';\nconst CLASS_NAME_POINTER_EVENT = 'pointer-event';\nconst SWIPE_THRESHOLD = 40;\nconst Default$c = {\n  endCallback: null,\n  leftCallback: null,\n  rightCallback: null\n};\nconst DefaultType$c = {\n  endCallback: '(function|null)',\n  leftCallback: '(function|null)',\n  rightCallback: '(function|null)'\n};\n\n/**\n * Class definition\n */\n\nclass Swipe extends Config {\n  constructor(element, config) {\n    super();\n    this._element = element;\n    if (!element || !Swipe.isSupported()) {\n      return;\n    }\n    this._config = this._getConfig(config);\n    this._deltaX = 0;\n    this._supportPointerEvents = Boolean(window.PointerEvent);\n    this._initEvents();\n  }\n\n  // Getters\n  static get Default() {\n    return Default$c;\n  }\n  static get DefaultType() {\n    return DefaultType$c;\n  }\n  static get NAME() {\n    return NAME$d;\n  }\n\n  // Public\n  dispose() {\n    EventHandler.off(this._element, EVENT_KEY$9);\n  }\n\n  // Private\n  _start(event) {\n    if (!this._supportPointerEvents) {\n      this._deltaX = event.touches[0].clientX;\n      return;\n    }\n    if (this._eventIsPointerPenTouch(event)) {\n      this._deltaX = event.clientX;\n    }\n  }\n  _end(event) {\n    if (this._eventIsPointerPenTouch(event)) {\n      this._deltaX = event.clientX - this._deltaX;\n    }\n    this._handleSwipe();\n    execute(this._config.endCallback);\n  }\n  _move(event) {\n    this._deltaX = event.touches && event.touches.length > 1 ? 0 : event.touches[0].clientX - this._deltaX;\n  }\n  _handleSwipe() {\n    const absDeltaX = Math.abs(this._deltaX);\n    if (absDeltaX <= SWIPE_THRESHOLD) {\n      return;\n    }\n    const direction = absDeltaX / this._deltaX;\n    this._deltaX = 0;\n    if (!direction) {\n      return;\n    }\n    execute(direction > 0 ? this._config.rightCallback : this._config.leftCallback);\n  }\n  _initEvents() {\n    if (this._supportPointerEvents) {\n      EventHandler.on(this._element, EVENT_POINTERDOWN, event => this._start(event));\n      EventHandler.on(this._element, EVENT_POINTERUP, event => this._end(event));\n      this._element.classList.add(CLASS_NAME_POINTER_EVENT);\n    } else {\n      EventHandler.on(this._element, EVENT_TOUCHSTART, event => this._start(event));\n      EventHandler.on(this._element, EVENT_TOUCHMOVE, event => this._move(event));\n      EventHandler.on(this._element, EVENT_TOUCHEND, event => this._end(event));\n    }\n  }\n  _eventIsPointerPenTouch(event) {\n    return this._supportPointerEvents && (event.pointerType === POINTER_TYPE_PEN || event.pointerType === POINTER_TYPE_TOUCH);\n  }\n\n  // Static\n  static isSupported() {\n    return 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0;\n  }\n}\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap carousel.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$c = 'carousel';\nconst DATA_KEY$8 = 'bs.carousel';\nconst EVENT_KEY$8 = `.${DATA_KEY$8}`;\nconst DATA_API_KEY$5 = '.data-api';\nconst ARROW_LEFT_KEY$1 = 'ArrowLeft';\nconst ARROW_RIGHT_KEY$1 = 'ArrowRight';\nconst TOUCHEVENT_COMPAT_WAIT = 500; // Time for mouse compat events to fire after touch\n\nconst ORDER_NEXT = 'next';\nconst ORDER_PREV = 'prev';\nconst DIRECTION_LEFT = 'left';\nconst DIRECTION_RIGHT = 'right';\nconst EVENT_SLIDE = `slide${EVENT_KEY$8}`;\nconst EVENT_SLID = `slid${EVENT_KEY$8}`;\nconst EVENT_KEYDOWN$1 = `keydown${EVENT_KEY$8}`;\nconst EVENT_MOUSEENTER$1 = `mouseenter${EVENT_KEY$8}`;\nconst EVENT_MOUSELEAVE$1 = `mouseleave${EVENT_KEY$8}`;\nconst EVENT_DRAG_START = `dragstart${EVENT_KEY$8}`;\nconst EVENT_LOAD_DATA_API$3 = `load${EVENT_KEY$8}${DATA_API_KEY$5}`;\nconst EVENT_CLICK_DATA_API$5 = `click${EVENT_KEY$8}${DATA_API_KEY$5}`;\nconst CLASS_NAME_CAROUSEL = 'carousel';\nconst CLASS_NAME_ACTIVE$2 = 'active';\nconst CLASS_NAME_SLIDE = 'slide';\nconst CLASS_NAME_END = 'carousel-item-end';\nconst CLASS_NAME_START = 'carousel-item-start';\nconst CLASS_NAME_NEXT = 'carousel-item-next';\nconst CLASS_NAME_PREV = 'carousel-item-prev';\nconst SELECTOR_ACTIVE = '.active';\nconst SELECTOR_ITEM = '.carousel-item';\nconst SELECTOR_ACTIVE_ITEM = SELECTOR_ACTIVE + SELECTOR_ITEM;\nconst SELECTOR_ITEM_IMG = '.carousel-item img';\nconst SELECTOR_INDICATORS = '.carousel-indicators';\nconst SELECTOR_DATA_SLIDE = '[data-bs-slide], [data-bs-slide-to]';\nconst SELECTOR_DATA_RIDE = '[data-bs-ride=\"carousel\"]';\nconst KEY_TO_DIRECTION = {\n  [ARROW_LEFT_KEY$1]: DIRECTION_RIGHT,\n  [ARROW_RIGHT_KEY$1]: DIRECTION_LEFT\n};\nconst Default$b = {\n  interval: 5000,\n  keyboard: true,\n  pause: 'hover',\n  ride: false,\n  touch: true,\n  wrap: true\n};\nconst DefaultType$b = {\n  interval: '(number|boolean)',\n  // TODO:v6 remove boolean support\n  keyboard: 'boolean',\n  pause: '(string|boolean)',\n  ride: '(boolean|string)',\n  touch: 'boolean',\n  wrap: 'boolean'\n};\n\n/**\n * Class definition\n */\n\nclass Carousel extends BaseComponent {\n  constructor(element, config) {\n    super(element, config);\n    this._interval = null;\n    this._activeElement = null;\n    this._isSliding = false;\n    this.touchTimeout = null;\n    this._swipeHelper = null;\n    this._indicatorsElement = SelectorEngine.findOne(SELECTOR_INDICATORS, this._element);\n    this._addEventListeners();\n    if (this._config.ride === CLASS_NAME_CAROUSEL) {\n      this.cycle();\n    }\n  }\n\n  // Getters\n  static get Default() {\n    return Default$b;\n  }\n  static get DefaultType() {\n    return DefaultType$b;\n  }\n  static get NAME() {\n    return NAME$c;\n  }\n\n  // Public\n  next() {\n    this._slide(ORDER_NEXT);\n  }\n  nextWhenVisible() {\n    // FIXME TODO use `document.visibilityState`\n    // Don't call next when the page isn't visible\n    // or the carousel or its parent isn't visible\n    if (!document.hidden && isVisible(this._element)) {\n      this.next();\n    }\n  }\n  prev() {\n    this._slide(ORDER_PREV);\n  }\n  pause() {\n    if (this._isSliding) {\n      triggerTransitionEnd(this._element);\n    }\n    this._clearInterval();\n  }\n  cycle() {\n    this._clearInterval();\n    this._updateInterval();\n    this._interval = setInterval(() => this.nextWhenVisible(), this._config.interval);\n  }\n  _maybeEnableCycle() {\n    if (!this._config.ride) {\n      return;\n    }\n    if (this._isSliding) {\n      EventHandler.one(this._element, EVENT_SLID, () => this.cycle());\n      return;\n    }\n    this.cycle();\n  }\n  to(index) {\n    const items = this._getItems();\n    if (index > items.length - 1 || index < 0) {\n      return;\n    }\n    if (this._isSliding) {\n      EventHandler.one(this._element, EVENT_SLID, () => this.to(index));\n      return;\n    }\n    const activeIndex = this._getItemIndex(this._getActive());\n    if (activeIndex === index) {\n      return;\n    }\n    const order = index > activeIndex ? ORDER_NEXT : ORDER_PREV;\n    this._slide(order, items[index]);\n  }\n  dispose() {\n    if (this._swipeHelper) {\n      this._swipeHelper.dispose();\n    }\n    super.dispose();\n  }\n\n  // Private\n  _configAfterMerge(config) {\n    config.defaultInterval = config.interval;\n    return config;\n  }\n  _addEventListeners() {\n    if (this._config.keyboard) {\n      EventHandler.on(this._element, EVENT_KEYDOWN$1, event => this._keydown(event));\n    }\n    if (this._config.pause === 'hover') {\n      EventHandler.on(this._element, EVENT_MOUSEENTER$1, () => this.pause());\n      EventHandler.on(this._element, EVENT_MOUSELEAVE$1, () => this._maybeEnableCycle());\n    }\n    if (this._config.touch && Swipe.isSupported()) {\n      this._addTouchEventListeners();\n    }\n  }\n  _addTouchEventListeners() {\n    for (const img of SelectorEngine.find(SELECTOR_ITEM_IMG, this._element)) {\n      EventHandler.on(img, EVENT_DRAG_START, event => event.preventDefault());\n    }\n    const endCallBack = () => {\n      if (this._config.pause !== 'hover') {\n        return;\n      }\n\n      // If it's a touch-enabled device, mouseenter/leave are fired as\n      // part of the mouse compatibility events on first tap - the carousel\n      // would stop cycling until user tapped out of it;\n      // here, we listen for touchend, explicitly pause the carousel\n      // (as if it's the second time we tap on it, mouseenter compat event\n      // is NOT fired) and after a timeout (to allow for mouse compatibility\n      // events to fire) we explicitly restart cycling\n\n      this.pause();\n      if (this.touchTimeout) {\n        clearTimeout(this.touchTimeout);\n      }\n      this.touchTimeout = setTimeout(() => this._maybeEnableCycle(), TOUCHEVENT_COMPAT_WAIT + this._config.interval);\n    };\n    const swipeConfig = {\n      leftCallback: () => this._slide(this._directionToOrder(DIRECTION_LEFT)),\n      rightCallback: () => this._slide(this._directionToOrder(DIRECTION_RIGHT)),\n      endCallback: endCallBack\n    };\n    this._swipeHelper = new Swipe(this._element, swipeConfig);\n  }\n  _keydown(event) {\n    if (/input|textarea/i.test(event.target.tagName)) {\n      return;\n    }\n    const direction = KEY_TO_DIRECTION[event.key];\n    if (direction) {\n      event.preventDefault();\n      this._slide(this._directionToOrder(direction));\n    }\n  }\n  _getItemIndex(element) {\n    return this._getItems().indexOf(element);\n  }\n  _setActiveIndicatorElement(index) {\n    if (!this._indicatorsElement) {\n      return;\n    }\n    const activeIndicator = SelectorEngine.findOne(SELECTOR_ACTIVE, this._indicatorsElement);\n    activeIndicator.classList.remove(CLASS_NAME_ACTIVE$2);\n    activeIndicator.removeAttribute('aria-current');\n    const newActiveIndicator = SelectorEngine.findOne(`[data-bs-slide-to=\"${index}\"]`, this._indicatorsElement);\n    if (newActiveIndicator) {\n      newActiveIndicator.classList.add(CLASS_NAME_ACTIVE$2);\n      newActiveIndicator.setAttribute('aria-current', 'true');\n    }\n  }\n  _updateInterval() {\n    const element = this._activeElement || this._getActive();\n    if (!element) {\n      return;\n    }\n    const elementInterval = Number.parseInt(element.getAttribute('data-bs-interval'), 10);\n    this._config.interval = elementInterval || this._config.defaultInterval;\n  }\n  _slide(order, element = null) {\n    if (this._isSliding) {\n      return;\n    }\n    const activeElement = this._getActive();\n    const isNext = order === ORDER_NEXT;\n    const nextElement = element || getNextActiveElement(this._getItems(), activeElement, isNext, this._config.wrap);\n    if (nextElement === activeElement) {\n      return;\n    }\n    const nextElementIndex = this._getItemIndex(nextElement);\n    const triggerEvent = eventName => {\n      return EventHandler.trigger(this._element, eventName, {\n        relatedTarget: nextElement,\n        direction: this._orderToDirection(order),\n        from: this._getItemIndex(activeElement),\n        to: nextElementIndex\n      });\n    };\n    const slideEvent = triggerEvent(EVENT_SLIDE);\n    if (slideEvent.defaultPrevented) {\n      return;\n    }\n    if (!activeElement || !nextElement) {\n      // Some weirdness is happening, so we bail\n      // TODO: change tests that use empty divs to avoid this check\n      return;\n    }\n    const isCycling = Boolean(this._interval);\n    this.pause();\n    this._isSliding = true;\n    this._setActiveIndicatorElement(nextElementIndex);\n    this._activeElement = nextElement;\n    const directionalClassName = isNext ? CLASS_NAME_START : CLASS_NAME_END;\n    const orderClassName = isNext ? CLASS_NAME_NEXT : CLASS_NAME_PREV;\n    nextElement.classList.add(orderClassName);\n    reflow(nextElement);\n    activeElement.classList.add(directionalClassName);\n    nextElement.classList.add(directionalClassName);\n    const completeCallBack = () => {\n      nextElement.classList.remove(directionalClassName, orderClassName);\n      nextElement.classList.add(CLASS_NAME_ACTIVE$2);\n      activeElement.classList.remove(CLASS_NAME_ACTIVE$2, orderClassName, directionalClassName);\n      this._isSliding = false;\n      triggerEvent(EVENT_SLID);\n    };\n    this._queueCallback(completeCallBack, activeElement, this._isAnimated());\n    if (isCycling) {\n      this.cycle();\n    }\n  }\n  _isAnimated() {\n    return this._element.classList.contains(CLASS_NAME_SLIDE);\n  }\n  _getActive() {\n    return SelectorEngine.findOne(SELECTOR_ACTIVE_ITEM, this._element);\n  }\n  _getItems() {\n    return SelectorEngine.find(SELECTOR_ITEM, this._element);\n  }\n  _clearInterval() {\n    if (this._interval) {\n      clearInterval(this._interval);\n      this._interval = null;\n    }\n  }\n  _directionToOrder(direction) {\n    if (isRTL()) {\n      return direction === DIRECTION_LEFT ? ORDER_PREV : ORDER_NEXT;\n    }\n    return direction === DIRECTION_LEFT ? ORDER_NEXT : ORDER_PREV;\n  }\n  _orderToDirection(order) {\n    if (isRTL()) {\n      return order === ORDER_PREV ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return order === ORDER_PREV ? DIRECTION_RIGHT : DIRECTION_LEFT;\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Carousel.getOrCreateInstance(this, config);\n      if (typeof config === 'number') {\n        data.to(config);\n        return;\n      }\n      if (typeof config === 'string') {\n        if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n          throw new TypeError(`No method named \"${config}\"`);\n        }\n        data[config]();\n      }\n    });\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API$5, SELECTOR_DATA_SLIDE, function (event) {\n  const target = SelectorEngine.getElementFromSelector(this);\n  if (!target || !target.classList.contains(CLASS_NAME_CAROUSEL)) {\n    return;\n  }\n  event.preventDefault();\n  const carousel = Carousel.getOrCreateInstance(target);\n  const slideIndex = this.getAttribute('data-bs-slide-to');\n  if (slideIndex) {\n    carousel.to(slideIndex);\n    carousel._maybeEnableCycle();\n    return;\n  }\n  if (Manipulator.getDataAttribute(this, 'slide') === 'next') {\n    carousel.next();\n    carousel._maybeEnableCycle();\n    return;\n  }\n  carousel.prev();\n  carousel._maybeEnableCycle();\n});\nEventHandler.on(window, EVENT_LOAD_DATA_API$3, () => {\n  const carousels = SelectorEngine.find(SELECTOR_DATA_RIDE);\n  for (const carousel of carousels) {\n    Carousel.getOrCreateInstance(carousel);\n  }\n});\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Carousel);\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap collapse.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$b = 'collapse';\nconst DATA_KEY$7 = 'bs.collapse';\nconst EVENT_KEY$7 = `.${DATA_KEY$7}`;\nconst DATA_API_KEY$4 = '.data-api';\nconst EVENT_SHOW$6 = `show${EVENT_KEY$7}`;\nconst EVENT_SHOWN$6 = `shown${EVENT_KEY$7}`;\nconst EVENT_HIDE$6 = `hide${EVENT_KEY$7}`;\nconst EVENT_HIDDEN$6 = `hidden${EVENT_KEY$7}`;\nconst EVENT_CLICK_DATA_API$4 = `click${EVENT_KEY$7}${DATA_API_KEY$4}`;\nconst CLASS_NAME_SHOW$7 = 'show';\nconst CLASS_NAME_COLLAPSE = 'collapse';\nconst CLASS_NAME_COLLAPSING = 'collapsing';\nconst CLASS_NAME_COLLAPSED = 'collapsed';\nconst CLASS_NAME_DEEPER_CHILDREN = `:scope .${CLASS_NAME_COLLAPSE} .${CLASS_NAME_COLLAPSE}`;\nconst CLASS_NAME_HORIZONTAL = 'collapse-horizontal';\nconst WIDTH = 'width';\nconst HEIGHT = 'height';\nconst SELECTOR_ACTIVES = '.collapse.show, .collapse.collapsing';\nconst SELECTOR_DATA_TOGGLE$4 = '[data-bs-toggle=\"collapse\"]';\nconst Default$a = {\n  parent: null,\n  toggle: true\n};\nconst DefaultType$a = {\n  parent: '(null|element)',\n  toggle: 'boolean'\n};\n\n/**\n * Class definition\n */\n\nclass Collapse extends BaseComponent {\n  constructor(element, config) {\n    super(element, config);\n    this._isTransitioning = false;\n    this._triggerArray = [];\n    const toggleList = SelectorEngine.find(SELECTOR_DATA_TOGGLE$4);\n    for (const elem of toggleList) {\n      const selector = SelectorEngine.getSelectorFromElement(elem);\n      const filterElement = SelectorEngine.find(selector).filter(foundElement => foundElement === this._element);\n      if (selector !== null && filterElement.length) {\n        this._triggerArray.push(elem);\n      }\n    }\n    this._initializeChildren();\n    if (!this._config.parent) {\n      this._addAriaAndCollapsedClass(this._triggerArray, this._isShown());\n    }\n    if (this._config.toggle) {\n      this.toggle();\n    }\n  }\n\n  // Getters\n  static get Default() {\n    return Default$a;\n  }\n  static get DefaultType() {\n    return DefaultType$a;\n  }\n  static get NAME() {\n    return NAME$b;\n  }\n\n  // Public\n  toggle() {\n    if (this._isShown()) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  show() {\n    if (this._isTransitioning || this._isShown()) {\n      return;\n    }\n    let activeChildren = [];\n\n    // find active children\n    if (this._config.parent) {\n      activeChildren = this._getFirstLevelChildren(SELECTOR_ACTIVES).filter(element => element !== this._element).map(element => Collapse.getOrCreateInstance(element, {\n        toggle: false\n      }));\n    }\n    if (activeChildren.length && activeChildren[0]._isTransitioning) {\n      return;\n    }\n    const startEvent = EventHandler.trigger(this._element, EVENT_SHOW$6);\n    if (startEvent.defaultPrevented) {\n      return;\n    }\n    for (const activeInstance of activeChildren) {\n      activeInstance.hide();\n    }\n    const dimension = this._getDimension();\n    this._element.classList.remove(CLASS_NAME_COLLAPSE);\n    this._element.classList.add(CLASS_NAME_COLLAPSING);\n    this._element.style[dimension] = 0;\n    this._addAriaAndCollapsedClass(this._triggerArray, true);\n    this._isTransitioning = true;\n    const complete = () => {\n      this._isTransitioning = false;\n      this._element.classList.remove(CLASS_NAME_COLLAPSING);\n      this._element.classList.add(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW$7);\n      this._element.style[dimension] = '';\n      EventHandler.trigger(this._element, EVENT_SHOWN$6);\n    };\n    const capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);\n    const scrollSize = `scroll${capitalizedDimension}`;\n    this._queueCallback(complete, this._element, true);\n    this._element.style[dimension] = `${this._element[scrollSize]}px`;\n  }\n  hide() {\n    if (this._isTransitioning || !this._isShown()) {\n      return;\n    }\n    const startEvent = EventHandler.trigger(this._element, EVENT_HIDE$6);\n    if (startEvent.defaultPrevented) {\n      return;\n    }\n    const dimension = this._getDimension();\n    this._element.style[dimension] = `${this._element.getBoundingClientRect()[dimension]}px`;\n    reflow(this._element);\n    this._element.classList.add(CLASS_NAME_COLLAPSING);\n    this._element.classList.remove(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW$7);\n    for (const trigger of this._triggerArray) {\n      const element = SelectorEngine.getElementFromSelector(trigger);\n      if (element && !this._isShown(element)) {\n        this._addAriaAndCollapsedClass([trigger], false);\n      }\n    }\n    this._isTransitioning = true;\n    const complete = () => {\n      this._isTransitioning = false;\n      this._element.classList.remove(CLASS_NAME_COLLAPSING);\n      this._element.classList.add(CLASS_NAME_COLLAPSE);\n      EventHandler.trigger(this._element, EVENT_HIDDEN$6);\n    };\n    this._element.style[dimension] = '';\n    this._queueCallback(complete, this._element, true);\n  }\n\n  // Private\n  _isShown(element = this._element) {\n    return element.classList.contains(CLASS_NAME_SHOW$7);\n  }\n  _configAfterMerge(config) {\n    config.toggle = Boolean(config.toggle); // Coerce string values\n    config.parent = getElement(config.parent);\n    return config;\n  }\n  _getDimension() {\n    return this._element.classList.contains(CLASS_NAME_HORIZONTAL) ? WIDTH : HEIGHT;\n  }\n  _initializeChildren() {\n    if (!this._config.parent) {\n      return;\n    }\n    const children = this._getFirstLevelChildren(SELECTOR_DATA_TOGGLE$4);\n    for (const element of children) {\n      const selected = SelectorEngine.getElementFromSelector(element);\n      if (selected) {\n        this._addAriaAndCollapsedClass([element], this._isShown(selected));\n      }\n    }\n  }\n  _getFirstLevelChildren(selector) {\n    const children = SelectorEngine.find(CLASS_NAME_DEEPER_CHILDREN, this._config.parent);\n    // remove children if greater depth\n    return SelectorEngine.find(selector, this._config.parent).filter(element => !children.includes(element));\n  }\n  _addAriaAndCollapsedClass(triggerArray, isOpen) {\n    if (!triggerArray.length) {\n      return;\n    }\n    for (const element of triggerArray) {\n      element.classList.toggle(CLASS_NAME_COLLAPSED, !isOpen);\n      element.setAttribute('aria-expanded', isOpen);\n    }\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    const _config = {};\n    if (typeof config === 'string' && /show|hide/.test(config)) {\n      _config.toggle = false;\n    }\n    return this.each(function () {\n      const data = Collapse.getOrCreateInstance(this, _config);\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`);\n        }\n        data[config]();\n      }\n    });\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API$4, SELECTOR_DATA_TOGGLE$4, function (event) {\n  // preventDefault only for <a> elements (which change the URL) not inside the collapsible element\n  if (event.target.tagName === 'A' || event.delegateTarget && event.delegateTarget.tagName === 'A') {\n    event.preventDefault();\n  }\n  for (const element of SelectorEngine.getMultipleElementsFromSelector(this)) {\n    Collapse.getOrCreateInstance(element, {\n      toggle: false\n    }).toggle();\n  }\n});\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Collapse);\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap dropdown.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$a = 'dropdown';\nconst DATA_KEY$6 = 'bs.dropdown';\nconst EVENT_KEY$6 = `.${DATA_KEY$6}`;\nconst DATA_API_KEY$3 = '.data-api';\nconst ESCAPE_KEY$2 = 'Escape';\nconst TAB_KEY$1 = 'Tab';\nconst ARROW_UP_KEY$1 = 'ArrowUp';\nconst ARROW_DOWN_KEY$1 = 'ArrowDown';\nconst RIGHT_MOUSE_BUTTON = 2; // MouseEvent.button value for the secondary button, usually the right button\n\nconst EVENT_HIDE$5 = `hide${EVENT_KEY$6}`;\nconst EVENT_HIDDEN$5 = `hidden${EVENT_KEY$6}`;\nconst EVENT_SHOW$5 = `show${EVENT_KEY$6}`;\nconst EVENT_SHOWN$5 = `shown${EVENT_KEY$6}`;\nconst EVENT_CLICK_DATA_API$3 = `click${EVENT_KEY$6}${DATA_API_KEY$3}`;\nconst EVENT_KEYDOWN_DATA_API = `keydown${EVENT_KEY$6}${DATA_API_KEY$3}`;\nconst EVENT_KEYUP_DATA_API = `keyup${EVENT_KEY$6}${DATA_API_KEY$3}`;\nconst CLASS_NAME_SHOW$6 = 'show';\nconst CLASS_NAME_DROPUP = 'dropup';\nconst CLASS_NAME_DROPEND = 'dropend';\nconst CLASS_NAME_DROPSTART = 'dropstart';\nconst CLASS_NAME_DROPUP_CENTER = 'dropup-center';\nconst CLASS_NAME_DROPDOWN_CENTER = 'dropdown-center';\nconst SELECTOR_DATA_TOGGLE$3 = '[data-bs-toggle=\"dropdown\"]:not(.disabled):not(:disabled)';\nconst SELECTOR_DATA_TOGGLE_SHOWN = `${SELECTOR_DATA_TOGGLE$3}.${CLASS_NAME_SHOW$6}`;\nconst SELECTOR_MENU = '.dropdown-menu';\nconst SELECTOR_NAVBAR = '.navbar';\nconst SELECTOR_NAVBAR_NAV = '.navbar-nav';\nconst SELECTOR_VISIBLE_ITEMS = '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)';\nconst PLACEMENT_TOP = isRTL() ? 'top-end' : 'top-start';\nconst PLACEMENT_TOPEND = isRTL() ? 'top-start' : 'top-end';\nconst PLACEMENT_BOTTOM = isRTL() ? 'bottom-end' : 'bottom-start';\nconst PLACEMENT_BOTTOMEND = isRTL() ? 'bottom-start' : 'bottom-end';\nconst PLACEMENT_RIGHT = isRTL() ? 'left-start' : 'right-start';\nconst PLACEMENT_LEFT = isRTL() ? 'right-start' : 'left-start';\nconst PLACEMENT_TOPCENTER = 'top';\nconst PLACEMENT_BOTTOMCENTER = 'bottom';\nconst Default$9 = {\n  autoClose: true,\n  boundary: 'clippingParents',\n  display: 'dynamic',\n  offset: [0, 2],\n  popperConfig: null,\n  reference: 'toggle'\n};\nconst DefaultType$9 = {\n  autoClose: '(boolean|string)',\n  boundary: '(string|element)',\n  display: 'string',\n  offset: '(array|string|function)',\n  popperConfig: '(null|object|function)',\n  reference: '(string|element|object)'\n};\n\n/**\n * Class definition\n */\n\nclass Dropdown extends BaseComponent {\n  constructor(element, config) {\n    super(element, config);\n    this._popper = null;\n    this._parent = this._element.parentNode; // dropdown wrapper\n    // TODO: v6 revert #37011 & change markup https://getbootstrap.com/docs/5.3/forms/input-group/\n    this._menu = SelectorEngine.next(this._element, SELECTOR_MENU)[0] || SelectorEngine.prev(this._element, SELECTOR_MENU)[0] || SelectorEngine.findOne(SELECTOR_MENU, this._parent);\n    this._inNavbar = this._detectNavbar();\n  }\n\n  // Getters\n  static get Default() {\n    return Default$9;\n  }\n  static get DefaultType() {\n    return DefaultType$9;\n  }\n  static get NAME() {\n    return NAME$a;\n  }\n\n  // Public\n  toggle() {\n    return this._isShown() ? this.hide() : this.show();\n  }\n  show() {\n    if (isDisabled(this._element) || this._isShown()) {\n      return;\n    }\n    const relatedTarget = {\n      relatedTarget: this._element\n    };\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW$5, relatedTarget);\n    if (showEvent.defaultPrevented) {\n      return;\n    }\n    this._createPopper();\n\n    // If this is a touch-enabled device we add extra\n    // empty mouseover listeners to the body's immediate children;\n    // only needed because of broken event delegation on iOS\n    // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n    if ('ontouchstart' in document.documentElement && !this._parent.closest(SELECTOR_NAVBAR_NAV)) {\n      for (const element of [].concat(...document.body.children)) {\n        EventHandler.on(element, 'mouseover', noop);\n      }\n    }\n    this._element.focus();\n    this._element.setAttribute('aria-expanded', true);\n    this._menu.classList.add(CLASS_NAME_SHOW$6);\n    this._element.classList.add(CLASS_NAME_SHOW$6);\n    EventHandler.trigger(this._element, EVENT_SHOWN$5, relatedTarget);\n  }\n  hide() {\n    if (isDisabled(this._element) || !this._isShown()) {\n      return;\n    }\n    const relatedTarget = {\n      relatedTarget: this._element\n    };\n    this._completeHide(relatedTarget);\n  }\n  dispose() {\n    if (this._popper) {\n      this._popper.destroy();\n    }\n    super.dispose();\n  }\n  update() {\n    this._inNavbar = this._detectNavbar();\n    if (this._popper) {\n      this._popper.update();\n    }\n  }\n\n  // Private\n  _completeHide(relatedTarget) {\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE$5, relatedTarget);\n    if (hideEvent.defaultPrevented) {\n      return;\n    }\n\n    // If this is a touch-enabled device we remove the extra\n    // empty mouseover listeners we added for iOS support\n    if ('ontouchstart' in document.documentElement) {\n      for (const element of [].concat(...document.body.children)) {\n        EventHandler.off(element, 'mouseover', noop);\n      }\n    }\n    if (this._popper) {\n      this._popper.destroy();\n    }\n    this._menu.classList.remove(CLASS_NAME_SHOW$6);\n    this._element.classList.remove(CLASS_NAME_SHOW$6);\n    this._element.setAttribute('aria-expanded', 'false');\n    Manipulator.removeDataAttribute(this._menu, 'popper');\n    EventHandler.trigger(this._element, EVENT_HIDDEN$5, relatedTarget);\n\n    // Explicitly return focus to the trigger element\n    this._element.focus();\n  }\n  _getConfig(config) {\n    config = super._getConfig(config);\n    if (typeof config.reference === 'object' && !isElement(config.reference) && typeof config.reference.getBoundingClientRect !== 'function') {\n      // Popper virtual elements require a getBoundingClientRect method\n      throw new TypeError(`${NAME$a.toUpperCase()}: Option \"reference\" provided type \"object\" without a required \"getBoundingClientRect\" method.`);\n    }\n    return config;\n  }\n  _createPopper() {\n    if (typeof Popper === 'undefined') {\n      throw new TypeError('Bootstrap\\'s dropdowns require Popper (https://popper.js.org/docs/v2/)');\n    }\n    let referenceElement = this._element;\n    if (this._config.reference === 'parent') {\n      referenceElement = this._parent;\n    } else if (isElement(this._config.reference)) {\n      referenceElement = getElement(this._config.reference);\n    } else if (typeof this._config.reference === 'object') {\n      referenceElement = this._config.reference;\n    }\n    const popperConfig = this._getPopperConfig();\n    this._popper = Popper.createPopper(referenceElement, this._menu, popperConfig);\n  }\n  _isShown() {\n    return this._menu.classList.contains(CLASS_NAME_SHOW$6);\n  }\n  _getPlacement() {\n    const parentDropdown = this._parent;\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPEND)) {\n      return PLACEMENT_RIGHT;\n    }\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPSTART)) {\n      return PLACEMENT_LEFT;\n    }\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPUP_CENTER)) {\n      return PLACEMENT_TOPCENTER;\n    }\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPDOWN_CENTER)) {\n      return PLACEMENT_BOTTOMCENTER;\n    }\n\n    // We need to trim the value because custom properties can also include spaces\n    const isEnd = getComputedStyle(this._menu).getPropertyValue('--bs-position').trim() === 'end';\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPUP)) {\n      return isEnd ? PLACEMENT_TOPEND : PLACEMENT_TOP;\n    }\n    return isEnd ? PLACEMENT_BOTTOMEND : PLACEMENT_BOTTOM;\n  }\n  _detectNavbar() {\n    return this._element.closest(SELECTOR_NAVBAR) !== null;\n  }\n  _getOffset() {\n    const {\n      offset\n    } = this._config;\n    if (typeof offset === 'string') {\n      return offset.split(',').map(value => Number.parseInt(value, 10));\n    }\n    if (typeof offset === 'function') {\n      return popperData => offset(popperData, this._element);\n    }\n    return offset;\n  }\n  _getPopperConfig() {\n    const defaultBsPopperConfig = {\n      placement: this._getPlacement(),\n      modifiers: [{\n        name: 'preventOverflow',\n        options: {\n          boundary: this._config.boundary\n        }\n      }, {\n        name: 'offset',\n        options: {\n          offset: this._getOffset()\n        }\n      }]\n    };\n\n    // Disable Popper if we have a static display or Dropdown is in Navbar\n    if (this._inNavbar || this._config.display === 'static') {\n      Manipulator.setDataAttribute(this._menu, 'popper', 'static'); // TODO: v6 remove\n      defaultBsPopperConfig.modifiers = [{\n        name: 'applyStyles',\n        enabled: false\n      }];\n    }\n    return {\n      ...defaultBsPopperConfig,\n      ...execute(this._config.popperConfig, [undefined, defaultBsPopperConfig])\n    };\n  }\n  _selectMenuItem({\n    key,\n    target\n  }) {\n    const items = SelectorEngine.find(SELECTOR_VISIBLE_ITEMS, this._menu).filter(element => isVisible(element));\n    if (!items.length) {\n      return;\n    }\n\n    // if target isn't included in items (e.g. when expanding the dropdown)\n    // allow cycling to get the last item in case key equals ARROW_UP_KEY\n    getNextActiveElement(items, target, key === ARROW_DOWN_KEY$1, !items.includes(target)).focus();\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Dropdown.getOrCreateInstance(this, config);\n      if (typeof config !== 'string') {\n        return;\n      }\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`);\n      }\n      data[config]();\n    });\n  }\n  static clearMenus(event) {\n    if (event.button === RIGHT_MOUSE_BUTTON || event.type === 'keyup' && event.key !== TAB_KEY$1) {\n      return;\n    }\n    const openToggles = SelectorEngine.find(SELECTOR_DATA_TOGGLE_SHOWN);\n    for (const toggle of openToggles) {\n      const context = Dropdown.getInstance(toggle);\n      if (!context || context._config.autoClose === false) {\n        continue;\n      }\n      const composedPath = event.composedPath();\n      const isMenuTarget = composedPath.includes(context._menu);\n      if (composedPath.includes(context._element) || context._config.autoClose === 'inside' && !isMenuTarget || context._config.autoClose === 'outside' && isMenuTarget) {\n        continue;\n      }\n\n      // Tab navigation through the dropdown menu or events from contained inputs shouldn't close the menu\n      if (context._menu.contains(event.target) && (event.type === 'keyup' && event.key === TAB_KEY$1 || /input|select|option|textarea|form/i.test(event.target.tagName))) {\n        continue;\n      }\n      const relatedTarget = {\n        relatedTarget: context._element\n      };\n      if (event.type === 'click') {\n        relatedTarget.clickEvent = event;\n      }\n      context._completeHide(relatedTarget);\n    }\n  }\n  static dataApiKeydownHandler(event) {\n    // If not an UP | DOWN | ESCAPE key => not a dropdown command\n    // If input/textarea && if key is other than ESCAPE => not a dropdown command\n\n    const isInput = /input|textarea/i.test(event.target.tagName);\n    const isEscapeEvent = event.key === ESCAPE_KEY$2;\n    const isUpOrDownEvent = [ARROW_UP_KEY$1, ARROW_DOWN_KEY$1].includes(event.key);\n    if (!isUpOrDownEvent && !isEscapeEvent) {\n      return;\n    }\n    if (isInput && !isEscapeEvent) {\n      return;\n    }\n    event.preventDefault();\n\n    // TODO: v6 revert #37011 & change markup https://getbootstrap.com/docs/5.3/forms/input-group/\n    const getToggleButton = this.matches(SELECTOR_DATA_TOGGLE$3) ? this : SelectorEngine.prev(this, SELECTOR_DATA_TOGGLE$3)[0] || SelectorEngine.next(this, SELECTOR_DATA_TOGGLE$3)[0] || SelectorEngine.findOne(SELECTOR_DATA_TOGGLE$3, event.delegateTarget.parentNode);\n    const instance = Dropdown.getOrCreateInstance(getToggleButton);\n    if (isUpOrDownEvent) {\n      event.stopPropagation();\n      instance.show();\n      instance._selectMenuItem(event);\n      return;\n    }\n    if (instance._isShown()) {\n      // else is escape and we check if it is shown\n      event.stopPropagation();\n      instance.hide();\n      getToggleButton.focus();\n    }\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_DATA_TOGGLE$3, Dropdown.dataApiKeydownHandler);\nEventHandler.on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_MENU, Dropdown.dataApiKeydownHandler);\nEventHandler.on(document, EVENT_CLICK_DATA_API$3, Dropdown.clearMenus);\nEventHandler.on(document, EVENT_KEYUP_DATA_API, Dropdown.clearMenus);\nEventHandler.on(document, EVENT_CLICK_DATA_API$3, SELECTOR_DATA_TOGGLE$3, function (event) {\n  event.preventDefault();\n  Dropdown.getOrCreateInstance(this).toggle();\n});\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Dropdown);\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/backdrop.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$9 = 'backdrop';\nconst CLASS_NAME_FADE$4 = 'fade';\nconst CLASS_NAME_SHOW$5 = 'show';\nconst EVENT_MOUSEDOWN = `mousedown.bs.${NAME$9}`;\nconst Default$8 = {\n  className: 'modal-backdrop',\n  clickCallback: null,\n  isAnimated: false,\n  isVisible: true,\n  // if false, we use the backdrop helper without adding any element to the dom\n  rootElement: 'body' // give the choice to place backdrop under different elements\n};\nconst DefaultType$8 = {\n  className: 'string',\n  clickCallback: '(function|null)',\n  isAnimated: 'boolean',\n  isVisible: 'boolean',\n  rootElement: '(element|string)'\n};\n\n/**\n * Class definition\n */\n\nclass Backdrop extends Config {\n  constructor(config) {\n    super();\n    this._config = this._getConfig(config);\n    this._isAppended = false;\n    this._element = null;\n  }\n\n  // Getters\n  static get Default() {\n    return Default$8;\n  }\n  static get DefaultType() {\n    return DefaultType$8;\n  }\n  static get NAME() {\n    return NAME$9;\n  }\n\n  // Public\n  show(callback) {\n    if (!this._config.isVisible) {\n      execute(callback);\n      return;\n    }\n    this._append();\n    const element = this._getElement();\n    if (this._config.isAnimated) {\n      reflow(element);\n    }\n    element.classList.add(CLASS_NAME_SHOW$5);\n    this._emulateAnimation(() => {\n      execute(callback);\n    });\n  }\n  hide(callback) {\n    if (!this._config.isVisible) {\n      execute(callback);\n      return;\n    }\n    this._getElement().classList.remove(CLASS_NAME_SHOW$5);\n    this._emulateAnimation(() => {\n      this.dispose();\n      execute(callback);\n    });\n  }\n  dispose() {\n    if (!this._isAppended) {\n      return;\n    }\n    EventHandler.off(this._element, EVENT_MOUSEDOWN);\n    this._element.remove();\n    this._isAppended = false;\n  }\n\n  // Private\n  _getElement() {\n    if (!this._element) {\n      const backdrop = document.createElement('div');\n      backdrop.className = this._config.className;\n      if (this._config.isAnimated) {\n        backdrop.classList.add(CLASS_NAME_FADE$4);\n      }\n      this._element = backdrop;\n    }\n    return this._element;\n  }\n  _configAfterMerge(config) {\n    // use getElement() with the default \"body\" to get a fresh Element on each instantiation\n    config.rootElement = getElement(config.rootElement);\n    return config;\n  }\n  _append() {\n    if (this._isAppended) {\n      return;\n    }\n    const element = this._getElement();\n    this._config.rootElement.append(element);\n    EventHandler.on(element, EVENT_MOUSEDOWN, () => {\n      execute(this._config.clickCallback);\n    });\n    this._isAppended = true;\n  }\n  _emulateAnimation(callback) {\n    executeAfterTransition(callback, this._getElement(), this._config.isAnimated);\n  }\n}\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/focustrap.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$8 = 'focustrap';\nconst DATA_KEY$5 = 'bs.focustrap';\nconst EVENT_KEY$5 = `.${DATA_KEY$5}`;\nconst EVENT_FOCUSIN$2 = `focusin${EVENT_KEY$5}`;\nconst EVENT_KEYDOWN_TAB = `keydown.tab${EVENT_KEY$5}`;\nconst TAB_KEY = 'Tab';\nconst TAB_NAV_FORWARD = 'forward';\nconst TAB_NAV_BACKWARD = 'backward';\nconst Default$7 = {\n  autofocus: true,\n  trapElement: null // The element to trap focus inside of\n};\nconst DefaultType$7 = {\n  autofocus: 'boolean',\n  trapElement: 'element'\n};\n\n/**\n * Class definition\n */\n\nclass FocusTrap extends Config {\n  constructor(config) {\n    super();\n    this._config = this._getConfig(config);\n    this._isActive = false;\n    this._lastTabNavDirection = null;\n  }\n\n  // Getters\n  static get Default() {\n    return Default$7;\n  }\n  static get DefaultType() {\n    return DefaultType$7;\n  }\n  static get NAME() {\n    return NAME$8;\n  }\n\n  // Public\n  activate() {\n    if (this._isActive) {\n      return;\n    }\n    if (this._config.autofocus) {\n      this._config.trapElement.focus();\n    }\n    EventHandler.off(document, EVENT_KEY$5); // guard against infinite focus loop\n    EventHandler.on(document, EVENT_FOCUSIN$2, event => this._handleFocusin(event));\n    EventHandler.on(document, EVENT_KEYDOWN_TAB, event => this._handleKeydown(event));\n    this._isActive = true;\n  }\n  deactivate() {\n    if (!this._isActive) {\n      return;\n    }\n    this._isActive = false;\n    EventHandler.off(document, EVENT_KEY$5);\n  }\n\n  // Private\n  _handleFocusin(event) {\n    const {\n      trapElement\n    } = this._config;\n    if (event.target === document || event.target === trapElement || trapElement.contains(event.target)) {\n      return;\n    }\n    const elements = SelectorEngine.focusableChildren(trapElement);\n    if (elements.length === 0) {\n      trapElement.focus();\n    } else if (this._lastTabNavDirection === TAB_NAV_BACKWARD) {\n      elements[elements.length - 1].focus();\n    } else {\n      elements[0].focus();\n    }\n  }\n  _handleKeydown(event) {\n    if (event.key !== TAB_KEY) {\n      return;\n    }\n    this._lastTabNavDirection = event.shiftKey ? TAB_NAV_BACKWARD : TAB_NAV_FORWARD;\n  }\n}\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/scrollBar.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top';\nconst SELECTOR_STICKY_CONTENT = '.sticky-top';\nconst PROPERTY_PADDING = 'padding-right';\nconst PROPERTY_MARGIN = 'margin-right';\n\n/**\n * Class definition\n */\n\nclass ScrollBarHelper {\n  constructor() {\n    this._element = document.body;\n  }\n\n  // Public\n  getWidth() {\n    // https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth#usage_notes\n    const documentWidth = document.documentElement.clientWidth;\n    return Math.abs(window.innerWidth - documentWidth);\n  }\n  hide() {\n    const width = this.getWidth();\n    this._disableOverFlow();\n    // give padding to element to balance the hidden scrollbar width\n    this._setElementAttributes(this._element, PROPERTY_PADDING, calculatedValue => calculatedValue + width);\n    // trick: We adjust positive paddingRight and negative marginRight to sticky-top elements to keep showing fullwidth\n    this._setElementAttributes(SELECTOR_FIXED_CONTENT, PROPERTY_PADDING, calculatedValue => calculatedValue + width);\n    this._setElementAttributes(SELECTOR_STICKY_CONTENT, PROPERTY_MARGIN, calculatedValue => calculatedValue - width);\n  }\n  reset() {\n    this._resetElementAttributes(this._element, 'overflow');\n    this._resetElementAttributes(this._element, PROPERTY_PADDING);\n    this._resetElementAttributes(SELECTOR_FIXED_CONTENT, PROPERTY_PADDING);\n    this._resetElementAttributes(SELECTOR_STICKY_CONTENT, PROPERTY_MARGIN);\n  }\n  isOverflowing() {\n    return this.getWidth() > 0;\n  }\n\n  // Private\n  _disableOverFlow() {\n    this._saveInitialAttribute(this._element, 'overflow');\n    this._element.style.overflow = 'hidden';\n  }\n  _setElementAttributes(selector, styleProperty, callback) {\n    const scrollbarWidth = this.getWidth();\n    const manipulationCallBack = element => {\n      if (element !== this._element && window.innerWidth > element.clientWidth + scrollbarWidth) {\n        return;\n      }\n      this._saveInitialAttribute(element, styleProperty);\n      const calculatedValue = window.getComputedStyle(element).getPropertyValue(styleProperty);\n      element.style.setProperty(styleProperty, `${callback(Number.parseFloat(calculatedValue))}px`);\n    };\n    this._applyManipulationCallback(selector, manipulationCallBack);\n  }\n  _saveInitialAttribute(element, styleProperty) {\n    const actualValue = element.style.getPropertyValue(styleProperty);\n    if (actualValue) {\n      Manipulator.setDataAttribute(element, styleProperty, actualValue);\n    }\n  }\n  _resetElementAttributes(selector, styleProperty) {\n    const manipulationCallBack = element => {\n      const value = Manipulator.getDataAttribute(element, styleProperty);\n      // We only want to remove the property if the value is `null`; the value can also be zero\n      if (value === null) {\n        element.style.removeProperty(styleProperty);\n        return;\n      }\n      Manipulator.removeDataAttribute(element, styleProperty);\n      element.style.setProperty(styleProperty, value);\n    };\n    this._applyManipulationCallback(selector, manipulationCallBack);\n  }\n  _applyManipulationCallback(selector, callBack) {\n    if (isElement(selector)) {\n      callBack(selector);\n      return;\n    }\n    for (const sel of SelectorEngine.find(selector, this._element)) {\n      callBack(sel);\n    }\n  }\n}\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap modal.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$7 = 'modal';\nconst DATA_KEY$4 = 'bs.modal';\nconst EVENT_KEY$4 = `.${DATA_KEY$4}`;\nconst DATA_API_KEY$2 = '.data-api';\nconst ESCAPE_KEY$1 = 'Escape';\nconst EVENT_HIDE$4 = `hide${EVENT_KEY$4}`;\nconst EVENT_HIDE_PREVENTED$1 = `hidePrevented${EVENT_KEY$4}`;\nconst EVENT_HIDDEN$4 = `hidden${EVENT_KEY$4}`;\nconst EVENT_SHOW$4 = `show${EVENT_KEY$4}`;\nconst EVENT_SHOWN$4 = `shown${EVENT_KEY$4}`;\nconst EVENT_RESIZE$1 = `resize${EVENT_KEY$4}`;\nconst EVENT_CLICK_DISMISS = `click.dismiss${EVENT_KEY$4}`;\nconst EVENT_MOUSEDOWN_DISMISS = `mousedown.dismiss${EVENT_KEY$4}`;\nconst EVENT_KEYDOWN_DISMISS$1 = `keydown.dismiss${EVENT_KEY$4}`;\nconst EVENT_CLICK_DATA_API$2 = `click${EVENT_KEY$4}${DATA_API_KEY$2}`;\nconst CLASS_NAME_OPEN = 'modal-open';\nconst CLASS_NAME_FADE$3 = 'fade';\nconst CLASS_NAME_SHOW$4 = 'show';\nconst CLASS_NAME_STATIC = 'modal-static';\nconst OPEN_SELECTOR$1 = '.modal.show';\nconst SELECTOR_DIALOG = '.modal-dialog';\nconst SELECTOR_MODAL_BODY = '.modal-body';\nconst SELECTOR_DATA_TOGGLE$2 = '[data-bs-toggle=\"modal\"]';\nconst Default$6 = {\n  backdrop: true,\n  focus: true,\n  keyboard: true\n};\nconst DefaultType$6 = {\n  backdrop: '(boolean|string)',\n  focus: 'boolean',\n  keyboard: 'boolean'\n};\n\n/**\n * Class definition\n */\n\nclass Modal extends BaseComponent {\n  constructor(element, config) {\n    super(element, config);\n    this._dialog = SelectorEngine.findOne(SELECTOR_DIALOG, this._element);\n    this._backdrop = this._initializeBackDrop();\n    this._focustrap = this._initializeFocusTrap();\n    this._isShown = false;\n    this._isTransitioning = false;\n    this._scrollBar = new ScrollBarHelper();\n    this._addEventListeners();\n  }\n\n  // Getters\n  static get Default() {\n    return Default$6;\n  }\n  static get DefaultType() {\n    return DefaultType$6;\n  }\n  static get NAME() {\n    return NAME$7;\n  }\n\n  // Public\n  toggle(relatedTarget) {\n    return this._isShown ? this.hide() : this.show(relatedTarget);\n  }\n  show(relatedTarget) {\n    if (this._isShown || this._isTransitioning) {\n      return;\n    }\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW$4, {\n      relatedTarget\n    });\n    if (showEvent.defaultPrevented) {\n      return;\n    }\n    this._isShown = true;\n    this._isTransitioning = true;\n    this._scrollBar.hide();\n    document.body.classList.add(CLASS_NAME_OPEN);\n    this._adjustDialog();\n    this._backdrop.show(() => this._showElement(relatedTarget));\n  }\n  hide() {\n    if (!this._isShown || this._isTransitioning) {\n      return;\n    }\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE$4);\n    if (hideEvent.defaultPrevented) {\n      return;\n    }\n    this._isShown = false;\n    this._isTransitioning = true;\n    this._focustrap.deactivate();\n    this._element.classList.remove(CLASS_NAME_SHOW$4);\n    this._queueCallback(() => this._hideModal(), this._element, this._isAnimated());\n  }\n  dispose() {\n    EventHandler.off(window, EVENT_KEY$4);\n    EventHandler.off(this._dialog, EVENT_KEY$4);\n    this._backdrop.dispose();\n    this._focustrap.deactivate();\n    super.dispose();\n  }\n  handleUpdate() {\n    this._adjustDialog();\n  }\n\n  // Private\n  _initializeBackDrop() {\n    return new Backdrop({\n      isVisible: Boolean(this._config.backdrop),\n      // 'static' option will be translated to true, and booleans will keep their value,\n      isAnimated: this._isAnimated()\n    });\n  }\n  _initializeFocusTrap() {\n    return new FocusTrap({\n      trapElement: this._element\n    });\n  }\n  _showElement(relatedTarget) {\n    // try to append dynamic modal\n    if (!document.body.contains(this._element)) {\n      document.body.append(this._element);\n    }\n    this._element.style.display = 'block';\n    this._element.removeAttribute('aria-hidden');\n    this._element.setAttribute('aria-modal', true);\n    this._element.setAttribute('role', 'dialog');\n    this._element.scrollTop = 0;\n    const modalBody = SelectorEngine.findOne(SELECTOR_MODAL_BODY, this._dialog);\n    if (modalBody) {\n      modalBody.scrollTop = 0;\n    }\n    reflow(this._element);\n    this._element.classList.add(CLASS_NAME_SHOW$4);\n    const transitionComplete = () => {\n      if (this._config.focus) {\n        this._focustrap.activate();\n      }\n      this._isTransitioning = false;\n      EventHandler.trigger(this._element, EVENT_SHOWN$4, {\n        relatedTarget\n      });\n    };\n    this._queueCallback(transitionComplete, this._dialog, this._isAnimated());\n  }\n  _addEventListeners() {\n    EventHandler.on(this._element, EVENT_KEYDOWN_DISMISS$1, event => {\n      if (event.key !== ESCAPE_KEY$1) {\n        return;\n      }\n      if (this._config.keyboard) {\n        this.hide();\n        return;\n      }\n      this._triggerBackdropTransition();\n    });\n    EventHandler.on(window, EVENT_RESIZE$1, () => {\n      if (this._isShown && !this._isTransitioning) {\n        this._adjustDialog();\n      }\n    });\n    EventHandler.on(this._element, EVENT_MOUSEDOWN_DISMISS, event => {\n      // a bad trick to segregate clicks that may start inside dialog but end outside, and avoid listen to scrollbar clicks\n      EventHandler.one(this._element, EVENT_CLICK_DISMISS, event2 => {\n        if (this._element !== event.target || this._element !== event2.target) {\n          return;\n        }\n        if (this._config.backdrop === 'static') {\n          this._triggerBackdropTransition();\n          return;\n        }\n        if (this._config.backdrop) {\n          this.hide();\n        }\n      });\n    });\n  }\n  _hideModal() {\n    this._element.style.display = 'none';\n    this._element.setAttribute('aria-hidden', true);\n    this._element.removeAttribute('aria-modal');\n    this._element.removeAttribute('role');\n    this._isTransitioning = false;\n    this._backdrop.hide(() => {\n      document.body.classList.remove(CLASS_NAME_OPEN);\n      this._resetAdjustments();\n      this._scrollBar.reset();\n      EventHandler.trigger(this._element, EVENT_HIDDEN$4);\n    });\n  }\n  _isAnimated() {\n    return this._element.classList.contains(CLASS_NAME_FADE$3);\n  }\n  _triggerBackdropTransition() {\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE_PREVENTED$1);\n    if (hideEvent.defaultPrevented) {\n      return;\n    }\n    const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;\n    const initialOverflowY = this._element.style.overflowY;\n    // return if the following background transition hasn't yet completed\n    if (initialOverflowY === 'hidden' || this._element.classList.contains(CLASS_NAME_STATIC)) {\n      return;\n    }\n    if (!isModalOverflowing) {\n      this._element.style.overflowY = 'hidden';\n    }\n    this._element.classList.add(CLASS_NAME_STATIC);\n    this._queueCallback(() => {\n      this._element.classList.remove(CLASS_NAME_STATIC);\n      this._queueCallback(() => {\n        this._element.style.overflowY = initialOverflowY;\n      }, this._dialog);\n    }, this._dialog);\n    this._element.focus();\n  }\n\n  /**\n   * The following methods are used to handle overflowing modals\n   */\n\n  _adjustDialog() {\n    const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;\n    const scrollbarWidth = this._scrollBar.getWidth();\n    const isBodyOverflowing = scrollbarWidth > 0;\n    if (isBodyOverflowing && !isModalOverflowing) {\n      const property = isRTL() ? 'paddingLeft' : 'paddingRight';\n      this._element.style[property] = `${scrollbarWidth}px`;\n    }\n    if (!isBodyOverflowing && isModalOverflowing) {\n      const property = isRTL() ? 'paddingRight' : 'paddingLeft';\n      this._element.style[property] = `${scrollbarWidth}px`;\n    }\n  }\n  _resetAdjustments() {\n    this._element.style.paddingLeft = '';\n    this._element.style.paddingRight = '';\n  }\n\n  // Static\n  static jQueryInterface(config, relatedTarget) {\n    return this.each(function () {\n      const data = Modal.getOrCreateInstance(this, config);\n      if (typeof config !== 'string') {\n        return;\n      }\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`);\n      }\n      data[config](relatedTarget);\n    });\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API$2, SELECTOR_DATA_TOGGLE$2, function (event) {\n  const target = SelectorEngine.getElementFromSelector(this);\n  if (['A', 'AREA'].includes(this.tagName)) {\n    event.preventDefault();\n  }\n  EventHandler.one(target, EVENT_SHOW$4, showEvent => {\n    if (showEvent.defaultPrevented) {\n      // only register focus restorer if modal will actually get shown\n      return;\n    }\n    EventHandler.one(target, EVENT_HIDDEN$4, () => {\n      if (isVisible(this)) {\n        this.focus();\n      }\n    });\n  });\n\n  // avoid conflict when clicking modal toggler while another one is open\n  const alreadyOpen = SelectorEngine.findOne(OPEN_SELECTOR$1);\n  if (alreadyOpen) {\n    Modal.getInstance(alreadyOpen).hide();\n  }\n  const data = Modal.getOrCreateInstance(target);\n  data.toggle(this);\n});\nenableDismissTrigger(Modal);\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Modal);\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap offcanvas.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$6 = 'offcanvas';\nconst DATA_KEY$3 = 'bs.offcanvas';\nconst EVENT_KEY$3 = `.${DATA_KEY$3}`;\nconst DATA_API_KEY$1 = '.data-api';\nconst EVENT_LOAD_DATA_API$2 = `load${EVENT_KEY$3}${DATA_API_KEY$1}`;\nconst ESCAPE_KEY = 'Escape';\nconst CLASS_NAME_SHOW$3 = 'show';\nconst CLASS_NAME_SHOWING$1 = 'showing';\nconst CLASS_NAME_HIDING = 'hiding';\nconst CLASS_NAME_BACKDROP = 'offcanvas-backdrop';\nconst OPEN_SELECTOR = '.offcanvas.show';\nconst EVENT_SHOW$3 = `show${EVENT_KEY$3}`;\nconst EVENT_SHOWN$3 = `shown${EVENT_KEY$3}`;\nconst EVENT_HIDE$3 = `hide${EVENT_KEY$3}`;\nconst EVENT_HIDE_PREVENTED = `hidePrevented${EVENT_KEY$3}`;\nconst EVENT_HIDDEN$3 = `hidden${EVENT_KEY$3}`;\nconst EVENT_RESIZE = `resize${EVENT_KEY$3}`;\nconst EVENT_CLICK_DATA_API$1 = `click${EVENT_KEY$3}${DATA_API_KEY$1}`;\nconst EVENT_KEYDOWN_DISMISS = `keydown.dismiss${EVENT_KEY$3}`;\nconst SELECTOR_DATA_TOGGLE$1 = '[data-bs-toggle=\"offcanvas\"]';\nconst Default$5 = {\n  backdrop: true,\n  keyboard: true,\n  scroll: false\n};\nconst DefaultType$5 = {\n  backdrop: '(boolean|string)',\n  keyboard: 'boolean',\n  scroll: 'boolean'\n};\n\n/**\n * Class definition\n */\n\nclass Offcanvas extends BaseComponent {\n  constructor(element, config) {\n    super(element, config);\n    this._isShown = false;\n    this._backdrop = this._initializeBackDrop();\n    this._focustrap = this._initializeFocusTrap();\n    this._addEventListeners();\n  }\n\n  // Getters\n  static get Default() {\n    return Default$5;\n  }\n  static get DefaultType() {\n    return DefaultType$5;\n  }\n  static get NAME() {\n    return NAME$6;\n  }\n\n  // Public\n  toggle(relatedTarget) {\n    return this._isShown ? this.hide() : this.show(relatedTarget);\n  }\n  show(relatedTarget) {\n    if (this._isShown) {\n      return;\n    }\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW$3, {\n      relatedTarget\n    });\n    if (showEvent.defaultPrevented) {\n      return;\n    }\n    this._isShown = true;\n    this._backdrop.show();\n    if (!this._config.scroll) {\n      new ScrollBarHelper().hide();\n    }\n    this._element.setAttribute('aria-modal', true);\n    this._element.setAttribute('role', 'dialog');\n    this._element.classList.add(CLASS_NAME_SHOWING$1);\n    const completeCallBack = () => {\n      if (!this._config.scroll || this._config.backdrop) {\n        this._focustrap.activate();\n      }\n      this._element.classList.add(CLASS_NAME_SHOW$3);\n      this._element.classList.remove(CLASS_NAME_SHOWING$1);\n      EventHandler.trigger(this._element, EVENT_SHOWN$3, {\n        relatedTarget\n      });\n    };\n    this._queueCallback(completeCallBack, this._element, true);\n  }\n  hide() {\n    if (!this._isShown) {\n      return;\n    }\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE$3);\n    if (hideEvent.defaultPrevented) {\n      return;\n    }\n    this._focustrap.deactivate();\n    this._element.blur();\n    this._isShown = false;\n    this._element.classList.add(CLASS_NAME_HIDING);\n    this._backdrop.hide();\n    const completeCallback = () => {\n      this._element.classList.remove(CLASS_NAME_SHOW$3, CLASS_NAME_HIDING);\n      this._element.removeAttribute('aria-modal');\n      this._element.removeAttribute('role');\n      if (!this._config.scroll) {\n        new ScrollBarHelper().reset();\n      }\n      EventHandler.trigger(this._element, EVENT_HIDDEN$3);\n    };\n    this._queueCallback(completeCallback, this._element, true);\n  }\n  dispose() {\n    this._backdrop.dispose();\n    this._focustrap.deactivate();\n    super.dispose();\n  }\n\n  // Private\n  _initializeBackDrop() {\n    const clickCallback = () => {\n      if (this._config.backdrop === 'static') {\n        EventHandler.trigger(this._element, EVENT_HIDE_PREVENTED);\n        return;\n      }\n      this.hide();\n    };\n\n    // 'static' option will be translated to true, and booleans will keep their value\n    const isVisible = Boolean(this._config.backdrop);\n    return new Backdrop({\n      className: CLASS_NAME_BACKDROP,\n      isVisible,\n      isAnimated: true,\n      rootElement: this._element.parentNode,\n      clickCallback: isVisible ? clickCallback : null\n    });\n  }\n  _initializeFocusTrap() {\n    return new FocusTrap({\n      trapElement: this._element\n    });\n  }\n  _addEventListeners() {\n    EventHandler.on(this._element, EVENT_KEYDOWN_DISMISS, event => {\n      if (event.key !== ESCAPE_KEY) {\n        return;\n      }\n      if (this._config.keyboard) {\n        this.hide();\n        return;\n      }\n      EventHandler.trigger(this._element, EVENT_HIDE_PREVENTED);\n    });\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Offcanvas.getOrCreateInstance(this, config);\n      if (typeof config !== 'string') {\n        return;\n      }\n      if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n        throw new TypeError(`No method named \"${config}\"`);\n      }\n      data[config](this);\n    });\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API$1, SELECTOR_DATA_TOGGLE$1, function (event) {\n  const target = SelectorEngine.getElementFromSelector(this);\n  if (['A', 'AREA'].includes(this.tagName)) {\n    event.preventDefault();\n  }\n  if (isDisabled(this)) {\n    return;\n  }\n  EventHandler.one(target, EVENT_HIDDEN$3, () => {\n    // focus on trigger when it is closed\n    if (isVisible(this)) {\n      this.focus();\n    }\n  });\n\n  // avoid conflict when clicking a toggler of an offcanvas, while another is open\n  const alreadyOpen = SelectorEngine.findOne(OPEN_SELECTOR);\n  if (alreadyOpen && alreadyOpen !== target) {\n    Offcanvas.getInstance(alreadyOpen).hide();\n  }\n  const data = Offcanvas.getOrCreateInstance(target);\n  data.toggle(this);\n});\nEventHandler.on(window, EVENT_LOAD_DATA_API$2, () => {\n  for (const selector of SelectorEngine.find(OPEN_SELECTOR)) {\n    Offcanvas.getOrCreateInstance(selector).show();\n  }\n});\nEventHandler.on(window, EVENT_RESIZE, () => {\n  for (const element of SelectorEngine.find('[aria-modal][class*=show][class*=offcanvas-]')) {\n    if (getComputedStyle(element).position !== 'fixed') {\n      Offcanvas.getOrCreateInstance(element).hide();\n    }\n  }\n});\nenableDismissTrigger(Offcanvas);\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Offcanvas);\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/sanitizer.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n// js-docs-start allow-list\nconst ARIA_ATTRIBUTE_PATTERN = /^aria-[\\w-]*$/i;\nconst DefaultAllowlist = {\n  // Global attributes allowed on any supplied element below.\n  '*': ['class', 'dir', 'id', 'lang', 'role', ARIA_ATTRIBUTE_PATTERN],\n  a: ['target', 'href', 'title', 'rel'],\n  area: [],\n  b: [],\n  br: [],\n  col: [],\n  code: [],\n  dd: [],\n  div: [],\n  dl: [],\n  dt: [],\n  em: [],\n  hr: [],\n  h1: [],\n  h2: [],\n  h3: [],\n  h4: [],\n  h5: [],\n  h6: [],\n  i: [],\n  img: ['src', 'srcset', 'alt', 'title', 'width', 'height'],\n  li: [],\n  ol: [],\n  p: [],\n  pre: [],\n  s: [],\n  small: [],\n  span: [],\n  sub: [],\n  sup: [],\n  strong: [],\n  u: [],\n  ul: []\n};\n// js-docs-end allow-list\n\nconst uriAttributes = new Set(['background', 'cite', 'href', 'itemtype', 'longdesc', 'poster', 'src', 'xlink:href']);\n\n/**\n * A pattern that recognizes URLs that are safe wrt. XSS in URL navigation\n * contexts.\n *\n * Shout-out to Angular https://github.com/angular/angular/blob/15.2.8/packages/core/src/sanitization/url_sanitizer.ts#L38\n */\nconst SAFE_URL_PATTERN = /^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:/?#]*(?:[/?#]|$))/i;\nconst allowedAttribute = (attribute, allowedAttributeList) => {\n  const attributeName = attribute.nodeName.toLowerCase();\n  if (allowedAttributeList.includes(attributeName)) {\n    if (uriAttributes.has(attributeName)) {\n      return Boolean(SAFE_URL_PATTERN.test(attribute.nodeValue));\n    }\n    return true;\n  }\n\n  // Check if a regular expression validates the attribute.\n  return allowedAttributeList.filter(attributeRegex => attributeRegex instanceof RegExp).some(regex => regex.test(attributeName));\n};\nfunction sanitizeHtml(unsafeHtml, allowList, sanitizeFunction) {\n  if (!unsafeHtml.length) {\n    return unsafeHtml;\n  }\n  if (sanitizeFunction && typeof sanitizeFunction === 'function') {\n    return sanitizeFunction(unsafeHtml);\n  }\n  const domParser = new window.DOMParser();\n  const createdDocument = domParser.parseFromString(unsafeHtml, 'text/html');\n  const elements = [].concat(...createdDocument.body.querySelectorAll('*'));\n  for (const element of elements) {\n    const elementName = element.nodeName.toLowerCase();\n    if (!Object.keys(allowList).includes(elementName)) {\n      element.remove();\n      continue;\n    }\n    const attributeList = [].concat(...element.attributes);\n    const allowedAttributes = [].concat(allowList['*'] || [], allowList[elementName] || []);\n    for (const attribute of attributeList) {\n      if (!allowedAttribute(attribute, allowedAttributes)) {\n        element.removeAttribute(attribute.nodeName);\n      }\n    }\n  }\n  return createdDocument.body.innerHTML;\n}\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap util/template-factory.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$5 = 'TemplateFactory';\nconst Default$4 = {\n  allowList: DefaultAllowlist,\n  content: {},\n  // { selector : text ,  selector2 : text2 , }\n  extraClass: '',\n  html: false,\n  sanitize: true,\n  sanitizeFn: null,\n  template: '<div></div>'\n};\nconst DefaultType$4 = {\n  allowList: 'object',\n  content: 'object',\n  extraClass: '(string|function)',\n  html: 'boolean',\n  sanitize: 'boolean',\n  sanitizeFn: '(null|function)',\n  template: 'string'\n};\nconst DefaultContentType = {\n  entry: '(string|element|function|null)',\n  selector: '(string|element)'\n};\n\n/**\n * Class definition\n */\n\nclass TemplateFactory extends Config {\n  constructor(config) {\n    super();\n    this._config = this._getConfig(config);\n  }\n\n  // Getters\n  static get Default() {\n    return Default$4;\n  }\n  static get DefaultType() {\n    return DefaultType$4;\n  }\n  static get NAME() {\n    return NAME$5;\n  }\n\n  // Public\n  getContent() {\n    return Object.values(this._config.content).map(config => this._resolvePossibleFunction(config)).filter(Boolean);\n  }\n  hasContent() {\n    return this.getContent().length > 0;\n  }\n  changeContent(content) {\n    this._checkContent(content);\n    this._config.content = {\n      ...this._config.content,\n      ...content\n    };\n    return this;\n  }\n  toHtml() {\n    const templateWrapper = document.createElement('div');\n    templateWrapper.innerHTML = this._maybeSanitize(this._config.template);\n    for (const [selector, text] of Object.entries(this._config.content)) {\n      this._setContent(templateWrapper, text, selector);\n    }\n    const template = templateWrapper.children[0];\n    const extraClass = this._resolvePossibleFunction(this._config.extraClass);\n    if (extraClass) {\n      template.classList.add(...extraClass.split(' '));\n    }\n    return template;\n  }\n\n  // Private\n  _typeCheckConfig(config) {\n    super._typeCheckConfig(config);\n    this._checkContent(config.content);\n  }\n  _checkContent(arg) {\n    for (const [selector, content] of Object.entries(arg)) {\n      super._typeCheckConfig({\n        selector,\n        entry: content\n      }, DefaultContentType);\n    }\n  }\n  _setContent(template, content, selector) {\n    const templateElement = SelectorEngine.findOne(selector, template);\n    if (!templateElement) {\n      return;\n    }\n    content = this._resolvePossibleFunction(content);\n    if (!content) {\n      templateElement.remove();\n      return;\n    }\n    if (isElement(content)) {\n      this._putElementInTemplate(getElement(content), templateElement);\n      return;\n    }\n    if (this._config.html) {\n      templateElement.innerHTML = this._maybeSanitize(content);\n      return;\n    }\n    templateElement.textContent = content;\n  }\n  _maybeSanitize(arg) {\n    return this._config.sanitize ? sanitizeHtml(arg, this._config.allowList, this._config.sanitizeFn) : arg;\n  }\n  _resolvePossibleFunction(arg) {\n    return execute(arg, [undefined, this]);\n  }\n  _putElementInTemplate(element, templateElement) {\n    if (this._config.html) {\n      templateElement.innerHTML = '';\n      templateElement.append(element);\n      return;\n    }\n    templateElement.textContent = element.textContent;\n  }\n}\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap tooltip.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$4 = 'tooltip';\nconst DISALLOWED_ATTRIBUTES = new Set(['sanitize', 'allowList', 'sanitizeFn']);\nconst CLASS_NAME_FADE$2 = 'fade';\nconst CLASS_NAME_MODAL = 'modal';\nconst CLASS_NAME_SHOW$2 = 'show';\nconst SELECTOR_TOOLTIP_INNER = '.tooltip-inner';\nconst SELECTOR_MODAL = `.${CLASS_NAME_MODAL}`;\nconst EVENT_MODAL_HIDE = 'hide.bs.modal';\nconst TRIGGER_HOVER = 'hover';\nconst TRIGGER_FOCUS = 'focus';\nconst TRIGGER_CLICK = 'click';\nconst TRIGGER_MANUAL = 'manual';\nconst EVENT_HIDE$2 = 'hide';\nconst EVENT_HIDDEN$2 = 'hidden';\nconst EVENT_SHOW$2 = 'show';\nconst EVENT_SHOWN$2 = 'shown';\nconst EVENT_INSERTED = 'inserted';\nconst EVENT_CLICK$1 = 'click';\nconst EVENT_FOCUSIN$1 = 'focusin';\nconst EVENT_FOCUSOUT$1 = 'focusout';\nconst EVENT_MOUSEENTER = 'mouseenter';\nconst EVENT_MOUSELEAVE = 'mouseleave';\nconst AttachmentMap = {\n  AUTO: 'auto',\n  TOP: 'top',\n  RIGHT: isRTL() ? 'left' : 'right',\n  BOTTOM: 'bottom',\n  LEFT: isRTL() ? 'right' : 'left'\n};\nconst Default$3 = {\n  allowList: DefaultAllowlist,\n  animation: true,\n  boundary: 'clippingParents',\n  container: false,\n  customClass: '',\n  delay: 0,\n  fallbackPlacements: ['top', 'right', 'bottom', 'left'],\n  html: false,\n  offset: [0, 6],\n  placement: 'top',\n  popperConfig: null,\n  sanitize: true,\n  sanitizeFn: null,\n  selector: false,\n  template: '<div class=\"tooltip\" role=\"tooltip\">' + '<div class=\"tooltip-arrow\"></div>' + '<div class=\"tooltip-inner\"></div>' + '</div>',\n  title: '',\n  trigger: 'hover focus'\n};\nconst DefaultType$3 = {\n  allowList: 'object',\n  animation: 'boolean',\n  boundary: '(string|element)',\n  container: '(string|element|boolean)',\n  customClass: '(string|function)',\n  delay: '(number|object)',\n  fallbackPlacements: 'array',\n  html: 'boolean',\n  offset: '(array|string|function)',\n  placement: '(string|function)',\n  popperConfig: '(null|object|function)',\n  sanitize: 'boolean',\n  sanitizeFn: '(null|function)',\n  selector: '(string|boolean)',\n  template: 'string',\n  title: '(string|element|function)',\n  trigger: 'string'\n};\n\n/**\n * Class definition\n */\n\nclass Tooltip extends BaseComponent {\n  constructor(element, config) {\n    if (typeof Popper === 'undefined') {\n      throw new TypeError('Bootstrap\\'s tooltips require Popper (https://popper.js.org/docs/v2/)');\n    }\n    super(element, config);\n\n    // Private\n    this._isEnabled = true;\n    this._timeout = 0;\n    this._isHovered = null;\n    this._activeTrigger = {};\n    this._popper = null;\n    this._templateFactory = null;\n    this._newContent = null;\n\n    // Protected\n    this.tip = null;\n    this._setListeners();\n    if (!this._config.selector) {\n      this._fixTitle();\n    }\n  }\n\n  // Getters\n  static get Default() {\n    return Default$3;\n  }\n  static get DefaultType() {\n    return DefaultType$3;\n  }\n  static get NAME() {\n    return NAME$4;\n  }\n\n  // Public\n  enable() {\n    this._isEnabled = true;\n  }\n  disable() {\n    this._isEnabled = false;\n  }\n  toggleEnabled() {\n    this._isEnabled = !this._isEnabled;\n  }\n  toggle() {\n    if (!this._isEnabled) {\n      return;\n    }\n    if (this._isShown()) {\n      this._leave();\n      return;\n    }\n    this._enter();\n  }\n  dispose() {\n    clearTimeout(this._timeout);\n    EventHandler.off(this._element.closest(SELECTOR_MODAL), EVENT_MODAL_HIDE, this._hideModalHandler);\n    if (this._element.getAttribute('data-bs-original-title')) {\n      this._element.setAttribute('title', this._element.getAttribute('data-bs-original-title'));\n    }\n    this._disposePopper();\n    super.dispose();\n  }\n  show() {\n    if (this._element.style.display === 'none') {\n      throw new Error('Please use show on visible elements');\n    }\n    if (!(this._isWithContent() && this._isEnabled)) {\n      return;\n    }\n    const showEvent = EventHandler.trigger(this._element, this.constructor.eventName(EVENT_SHOW$2));\n    const shadowRoot = findShadowRoot(this._element);\n    const isInTheDom = (shadowRoot || this._element.ownerDocument.documentElement).contains(this._element);\n    if (showEvent.defaultPrevented || !isInTheDom) {\n      return;\n    }\n\n    // TODO: v6 remove this or make it optional\n    this._disposePopper();\n    const tip = this._getTipElement();\n    this._element.setAttribute('aria-describedby', tip.getAttribute('id'));\n    const {\n      container\n    } = this._config;\n    if (!this._element.ownerDocument.documentElement.contains(this.tip)) {\n      container.append(tip);\n      EventHandler.trigger(this._element, this.constructor.eventName(EVENT_INSERTED));\n    }\n    this._popper = this._createPopper(tip);\n    tip.classList.add(CLASS_NAME_SHOW$2);\n\n    // If this is a touch-enabled device we add extra\n    // empty mouseover listeners to the body's immediate children;\n    // only needed because of broken event delegation on iOS\n    // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n    if ('ontouchstart' in document.documentElement) {\n      for (const element of [].concat(...document.body.children)) {\n        EventHandler.on(element, 'mouseover', noop);\n      }\n    }\n    const complete = () => {\n      EventHandler.trigger(this._element, this.constructor.eventName(EVENT_SHOWN$2));\n      if (this._isHovered === false) {\n        this._leave();\n      }\n      this._isHovered = false;\n    };\n    this._queueCallback(complete, this.tip, this._isAnimated());\n  }\n  hide() {\n    if (!this._isShown()) {\n      return;\n    }\n    const hideEvent = EventHandler.trigger(this._element, this.constructor.eventName(EVENT_HIDE$2));\n    if (hideEvent.defaultPrevented) {\n      return;\n    }\n    const tip = this._getTipElement();\n    tip.classList.remove(CLASS_NAME_SHOW$2);\n\n    // If this is a touch-enabled device we remove the extra\n    // empty mouseover listeners we added for iOS support\n    if ('ontouchstart' in document.documentElement) {\n      for (const element of [].concat(...document.body.children)) {\n        EventHandler.off(element, 'mouseover', noop);\n      }\n    }\n    this._activeTrigger[TRIGGER_CLICK] = false;\n    this._activeTrigger[TRIGGER_FOCUS] = false;\n    this._activeTrigger[TRIGGER_HOVER] = false;\n    this._isHovered = null; // it is a trick to support manual triggering\n\n    const complete = () => {\n      if (this._isWithActiveTrigger()) {\n        return;\n      }\n      if (!this._isHovered) {\n        this._disposePopper();\n      }\n      this._element.removeAttribute('aria-describedby');\n      EventHandler.trigger(this._element, this.constructor.eventName(EVENT_HIDDEN$2));\n    };\n    this._queueCallback(complete, this.tip, this._isAnimated());\n  }\n  update() {\n    if (this._popper) {\n      this._popper.update();\n    }\n  }\n\n  // Protected\n  _isWithContent() {\n    return Boolean(this._getTitle());\n  }\n  _getTipElement() {\n    if (!this.tip) {\n      this.tip = this._createTipElement(this._newContent || this._getContentForTemplate());\n    }\n    return this.tip;\n  }\n  _createTipElement(content) {\n    const tip = this._getTemplateFactory(content).toHtml();\n\n    // TODO: remove this check in v6\n    if (!tip) {\n      return null;\n    }\n    tip.classList.remove(CLASS_NAME_FADE$2, CLASS_NAME_SHOW$2);\n    // TODO: v6 the following can be achieved with CSS only\n    tip.classList.add(`bs-${this.constructor.NAME}-auto`);\n    const tipId = getUID(this.constructor.NAME).toString();\n    tip.setAttribute('id', tipId);\n    if (this._isAnimated()) {\n      tip.classList.add(CLASS_NAME_FADE$2);\n    }\n    return tip;\n  }\n  setContent(content) {\n    this._newContent = content;\n    if (this._isShown()) {\n      this._disposePopper();\n      this.show();\n    }\n  }\n  _getTemplateFactory(content) {\n    if (this._templateFactory) {\n      this._templateFactory.changeContent(content);\n    } else {\n      this._templateFactory = new TemplateFactory({\n        ...this._config,\n        // the `content` var has to be after `this._config`\n        // to override config.content in case of popover\n        content,\n        extraClass: this._resolvePossibleFunction(this._config.customClass)\n      });\n    }\n    return this._templateFactory;\n  }\n  _getContentForTemplate() {\n    return {\n      [SELECTOR_TOOLTIP_INNER]: this._getTitle()\n    };\n  }\n  _getTitle() {\n    return this._resolvePossibleFunction(this._config.title) || this._element.getAttribute('data-bs-original-title');\n  }\n\n  // Private\n  _initializeOnDelegatedTarget(event) {\n    return this.constructor.getOrCreateInstance(event.delegateTarget, this._getDelegateConfig());\n  }\n  _isAnimated() {\n    return this._config.animation || this.tip && this.tip.classList.contains(CLASS_NAME_FADE$2);\n  }\n  _isShown() {\n    return this.tip && this.tip.classList.contains(CLASS_NAME_SHOW$2);\n  }\n  _createPopper(tip) {\n    const placement = execute(this._config.placement, [this, tip, this._element]);\n    const attachment = AttachmentMap[placement.toUpperCase()];\n    return Popper.createPopper(this._element, tip, this._getPopperConfig(attachment));\n  }\n  _getOffset() {\n    const {\n      offset\n    } = this._config;\n    if (typeof offset === 'string') {\n      return offset.split(',').map(value => Number.parseInt(value, 10));\n    }\n    if (typeof offset === 'function') {\n      return popperData => offset(popperData, this._element);\n    }\n    return offset;\n  }\n  _resolvePossibleFunction(arg) {\n    return execute(arg, [this._element, this._element]);\n  }\n  _getPopperConfig(attachment) {\n    const defaultBsPopperConfig = {\n      placement: attachment,\n      modifiers: [{\n        name: 'flip',\n        options: {\n          fallbackPlacements: this._config.fallbackPlacements\n        }\n      }, {\n        name: 'offset',\n        options: {\n          offset: this._getOffset()\n        }\n      }, {\n        name: 'preventOverflow',\n        options: {\n          boundary: this._config.boundary\n        }\n      }, {\n        name: 'arrow',\n        options: {\n          element: `.${this.constructor.NAME}-arrow`\n        }\n      }, {\n        name: 'preSetPlacement',\n        enabled: true,\n        phase: 'beforeMain',\n        fn: data => {\n          // Pre-set Popper's placement attribute in order to read the arrow sizes properly.\n          // Otherwise, Popper mixes up the width and height dimensions since the initial arrow style is for top placement\n          this._getTipElement().setAttribute('data-popper-placement', data.state.placement);\n        }\n      }]\n    };\n    return {\n      ...defaultBsPopperConfig,\n      ...execute(this._config.popperConfig, [undefined, defaultBsPopperConfig])\n    };\n  }\n  _setListeners() {\n    const triggers = this._config.trigger.split(' ');\n    for (const trigger of triggers) {\n      if (trigger === 'click') {\n        EventHandler.on(this._element, this.constructor.eventName(EVENT_CLICK$1), this._config.selector, event => {\n          const context = this._initializeOnDelegatedTarget(event);\n          context._activeTrigger[TRIGGER_CLICK] = !(context._isShown() && context._activeTrigger[TRIGGER_CLICK]);\n          context.toggle();\n        });\n      } else if (trigger !== TRIGGER_MANUAL) {\n        const eventIn = trigger === TRIGGER_HOVER ? this.constructor.eventName(EVENT_MOUSEENTER) : this.constructor.eventName(EVENT_FOCUSIN$1);\n        const eventOut = trigger === TRIGGER_HOVER ? this.constructor.eventName(EVENT_MOUSELEAVE) : this.constructor.eventName(EVENT_FOCUSOUT$1);\n        EventHandler.on(this._element, eventIn, this._config.selector, event => {\n          const context = this._initializeOnDelegatedTarget(event);\n          context._activeTrigger[event.type === 'focusin' ? TRIGGER_FOCUS : TRIGGER_HOVER] = true;\n          context._enter();\n        });\n        EventHandler.on(this._element, eventOut, this._config.selector, event => {\n          const context = this._initializeOnDelegatedTarget(event);\n          context._activeTrigger[event.type === 'focusout' ? TRIGGER_FOCUS : TRIGGER_HOVER] = context._element.contains(event.relatedTarget);\n          context._leave();\n        });\n      }\n    }\n    this._hideModalHandler = () => {\n      if (this._element) {\n        this.hide();\n      }\n    };\n    EventHandler.on(this._element.closest(SELECTOR_MODAL), EVENT_MODAL_HIDE, this._hideModalHandler);\n  }\n  _fixTitle() {\n    const title = this._element.getAttribute('title');\n    if (!title) {\n      return;\n    }\n    if (!this._element.getAttribute('aria-label') && !this._element.textContent.trim()) {\n      this._element.setAttribute('aria-label', title);\n    }\n    this._element.setAttribute('data-bs-original-title', title); // DO NOT USE IT. Is only for backwards compatibility\n    this._element.removeAttribute('title');\n  }\n  _enter() {\n    if (this._isShown() || this._isHovered) {\n      this._isHovered = true;\n      return;\n    }\n    this._isHovered = true;\n    this._setTimeout(() => {\n      if (this._isHovered) {\n        this.show();\n      }\n    }, this._config.delay.show);\n  }\n  _leave() {\n    if (this._isWithActiveTrigger()) {\n      return;\n    }\n    this._isHovered = false;\n    this._setTimeout(() => {\n      if (!this._isHovered) {\n        this.hide();\n      }\n    }, this._config.delay.hide);\n  }\n  _setTimeout(handler, timeout) {\n    clearTimeout(this._timeout);\n    this._timeout = setTimeout(handler, timeout);\n  }\n  _isWithActiveTrigger() {\n    return Object.values(this._activeTrigger).includes(true);\n  }\n  _getConfig(config) {\n    const dataAttributes = Manipulator.getDataAttributes(this._element);\n    for (const dataAttribute of Object.keys(dataAttributes)) {\n      if (DISALLOWED_ATTRIBUTES.has(dataAttribute)) {\n        delete dataAttributes[dataAttribute];\n      }\n    }\n    config = {\n      ...dataAttributes,\n      ...(typeof config === 'object' && config ? config : {})\n    };\n    config = this._mergeConfigObj(config);\n    config = this._configAfterMerge(config);\n    this._typeCheckConfig(config);\n    return config;\n  }\n  _configAfterMerge(config) {\n    config.container = config.container === false ? document.body : getElement(config.container);\n    if (typeof config.delay === 'number') {\n      config.delay = {\n        show: config.delay,\n        hide: config.delay\n      };\n    }\n    if (typeof config.title === 'number') {\n      config.title = config.title.toString();\n    }\n    if (typeof config.content === 'number') {\n      config.content = config.content.toString();\n    }\n    return config;\n  }\n  _getDelegateConfig() {\n    const config = {};\n    for (const [key, value] of Object.entries(this._config)) {\n      if (this.constructor.Default[key] !== value) {\n        config[key] = value;\n      }\n    }\n    config.selector = false;\n    config.trigger = 'manual';\n\n    // In the future can be replaced with:\n    // const keysWithDifferentValues = Object.entries(this._config).filter(entry => this.constructor.Default[entry[0]] !== this._config[entry[0]])\n    // `Object.fromEntries(keysWithDifferentValues)`\n    return config;\n  }\n  _disposePopper() {\n    if (this._popper) {\n      this._popper.destroy();\n      this._popper = null;\n    }\n    if (this.tip) {\n      this.tip.remove();\n      this.tip = null;\n    }\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Tooltip.getOrCreateInstance(this, config);\n      if (typeof config !== 'string') {\n        return;\n      }\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`);\n      }\n      data[config]();\n    });\n  }\n}\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Tooltip);\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap popover.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$3 = 'popover';\nconst SELECTOR_TITLE = '.popover-header';\nconst SELECTOR_CONTENT = '.popover-body';\nconst Default$2 = {\n  ...Tooltip.Default,\n  content: '',\n  offset: [0, 8],\n  placement: 'right',\n  template: '<div class=\"popover\" role=\"tooltip\">' + '<div class=\"popover-arrow\"></div>' + '<h3 class=\"popover-header\"></h3>' + '<div class=\"popover-body\"></div>' + '</div>',\n  trigger: 'click'\n};\nconst DefaultType$2 = {\n  ...Tooltip.DefaultType,\n  content: '(null|string|element|function)'\n};\n\n/**\n * Class definition\n */\n\nclass Popover extends Tooltip {\n  // Getters\n  static get Default() {\n    return Default$2;\n  }\n  static get DefaultType() {\n    return DefaultType$2;\n  }\n  static get NAME() {\n    return NAME$3;\n  }\n\n  // Overrides\n  _isWithContent() {\n    return this._getTitle() || this._getContent();\n  }\n\n  // Private\n  _getContentForTemplate() {\n    return {\n      [SELECTOR_TITLE]: this._getTitle(),\n      [SELECTOR_CONTENT]: this._getContent()\n    };\n  }\n  _getContent() {\n    return this._resolvePossibleFunction(this._config.content);\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Popover.getOrCreateInstance(this, config);\n      if (typeof config !== 'string') {\n        return;\n      }\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`);\n      }\n      data[config]();\n    });\n  }\n}\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Popover);\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap scrollspy.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$2 = 'scrollspy';\nconst DATA_KEY$2 = 'bs.scrollspy';\nconst EVENT_KEY$2 = `.${DATA_KEY$2}`;\nconst DATA_API_KEY = '.data-api';\nconst EVENT_ACTIVATE = `activate${EVENT_KEY$2}`;\nconst EVENT_CLICK = `click${EVENT_KEY$2}`;\nconst EVENT_LOAD_DATA_API$1 = `load${EVENT_KEY$2}${DATA_API_KEY}`;\nconst CLASS_NAME_DROPDOWN_ITEM = 'dropdown-item';\nconst CLASS_NAME_ACTIVE$1 = 'active';\nconst SELECTOR_DATA_SPY = '[data-bs-spy=\"scroll\"]';\nconst SELECTOR_TARGET_LINKS = '[href]';\nconst SELECTOR_NAV_LIST_GROUP = '.nav, .list-group';\nconst SELECTOR_NAV_LINKS = '.nav-link';\nconst SELECTOR_NAV_ITEMS = '.nav-item';\nconst SELECTOR_LIST_ITEMS = '.list-group-item';\nconst SELECTOR_LINK_ITEMS = `${SELECTOR_NAV_LINKS}, ${SELECTOR_NAV_ITEMS} > ${SELECTOR_NAV_LINKS}, ${SELECTOR_LIST_ITEMS}`;\nconst SELECTOR_DROPDOWN = '.dropdown';\nconst SELECTOR_DROPDOWN_TOGGLE$1 = '.dropdown-toggle';\nconst Default$1 = {\n  offset: null,\n  // TODO: v6 @deprecated, keep it for backwards compatibility reasons\n  rootMargin: '0px 0px -25%',\n  smoothScroll: false,\n  target: null,\n  threshold: [0.1, 0.5, 1]\n};\nconst DefaultType$1 = {\n  offset: '(number|null)',\n  // TODO v6 @deprecated, keep it for backwards compatibility reasons\n  rootMargin: 'string',\n  smoothScroll: 'boolean',\n  target: 'element',\n  threshold: 'array'\n};\n\n/**\n * Class definition\n */\n\nclass ScrollSpy extends BaseComponent {\n  constructor(element, config) {\n    super(element, config);\n\n    // this._element is the observablesContainer and config.target the menu links wrapper\n    this._targetLinks = new Map();\n    this._observableSections = new Map();\n    this._rootElement = getComputedStyle(this._element).overflowY === 'visible' ? null : this._element;\n    this._activeTarget = null;\n    this._observer = null;\n    this._previousScrollData = {\n      visibleEntryTop: 0,\n      parentScrollTop: 0\n    };\n    this.refresh(); // initialize\n  }\n\n  // Getters\n  static get Default() {\n    return Default$1;\n  }\n  static get DefaultType() {\n    return DefaultType$1;\n  }\n  static get NAME() {\n    return NAME$2;\n  }\n\n  // Public\n  refresh() {\n    this._initializeTargetsAndObservables();\n    this._maybeEnableSmoothScroll();\n    if (this._observer) {\n      this._observer.disconnect();\n    } else {\n      this._observer = this._getNewObserver();\n    }\n    for (const section of this._observableSections.values()) {\n      this._observer.observe(section);\n    }\n  }\n  dispose() {\n    this._observer.disconnect();\n    super.dispose();\n  }\n\n  // Private\n  _configAfterMerge(config) {\n    // TODO: on v6 target should be given explicitly & remove the {target: 'ss-target'} case\n    config.target = getElement(config.target) || document.body;\n\n    // TODO: v6 Only for backwards compatibility reasons. Use rootMargin only\n    config.rootMargin = config.offset ? `${config.offset}px 0px -30%` : config.rootMargin;\n    if (typeof config.threshold === 'string') {\n      config.threshold = config.threshold.split(',').map(value => Number.parseFloat(value));\n    }\n    return config;\n  }\n  _maybeEnableSmoothScroll() {\n    if (!this._config.smoothScroll) {\n      return;\n    }\n\n    // unregister any previous listeners\n    EventHandler.off(this._config.target, EVENT_CLICK);\n    EventHandler.on(this._config.target, EVENT_CLICK, SELECTOR_TARGET_LINKS, event => {\n      const observableSection = this._observableSections.get(event.target.hash);\n      if (observableSection) {\n        event.preventDefault();\n        const root = this._rootElement || window;\n        const height = observableSection.offsetTop - this._element.offsetTop;\n        if (root.scrollTo) {\n          root.scrollTo({\n            top: height,\n            behavior: 'smooth'\n          });\n          return;\n        }\n\n        // Chrome 60 doesn't support `scrollTo`\n        root.scrollTop = height;\n      }\n    });\n  }\n  _getNewObserver() {\n    const options = {\n      root: this._rootElement,\n      threshold: this._config.threshold,\n      rootMargin: this._config.rootMargin\n    };\n    return new IntersectionObserver(entries => this._observerCallback(entries), options);\n  }\n\n  // The logic of selection\n  _observerCallback(entries) {\n    const targetElement = entry => this._targetLinks.get(`#${entry.target.id}`);\n    const activate = entry => {\n      this._previousScrollData.visibleEntryTop = entry.target.offsetTop;\n      this._process(targetElement(entry));\n    };\n    const parentScrollTop = (this._rootElement || document.documentElement).scrollTop;\n    const userScrollsDown = parentScrollTop >= this._previousScrollData.parentScrollTop;\n    this._previousScrollData.parentScrollTop = parentScrollTop;\n    for (const entry of entries) {\n      if (!entry.isIntersecting) {\n        this._activeTarget = null;\n        this._clearActiveClass(targetElement(entry));\n        continue;\n      }\n      const entryIsLowerThanPrevious = entry.target.offsetTop >= this._previousScrollData.visibleEntryTop;\n      // if we are scrolling down, pick the bigger offsetTop\n      if (userScrollsDown && entryIsLowerThanPrevious) {\n        activate(entry);\n        // if parent isn't scrolled, let's keep the first visible item, breaking the iteration\n        if (!parentScrollTop) {\n          return;\n        }\n        continue;\n      }\n\n      // if we are scrolling up, pick the smallest offsetTop\n      if (!userScrollsDown && !entryIsLowerThanPrevious) {\n        activate(entry);\n      }\n    }\n  }\n  _initializeTargetsAndObservables() {\n    this._targetLinks = new Map();\n    this._observableSections = new Map();\n    const targetLinks = SelectorEngine.find(SELECTOR_TARGET_LINKS, this._config.target);\n    for (const anchor of targetLinks) {\n      // ensure that the anchor has an id and is not disabled\n      if (!anchor.hash || isDisabled(anchor)) {\n        continue;\n      }\n      const observableSection = SelectorEngine.findOne(decodeURI(anchor.hash), this._element);\n\n      // ensure that the observableSection exists & is visible\n      if (isVisible(observableSection)) {\n        this._targetLinks.set(decodeURI(anchor.hash), anchor);\n        this._observableSections.set(anchor.hash, observableSection);\n      }\n    }\n  }\n  _process(target) {\n    if (this._activeTarget === target) {\n      return;\n    }\n    this._clearActiveClass(this._config.target);\n    this._activeTarget = target;\n    target.classList.add(CLASS_NAME_ACTIVE$1);\n    this._activateParents(target);\n    EventHandler.trigger(this._element, EVENT_ACTIVATE, {\n      relatedTarget: target\n    });\n  }\n  _activateParents(target) {\n    // Activate dropdown parents\n    if (target.classList.contains(CLASS_NAME_DROPDOWN_ITEM)) {\n      SelectorEngine.findOne(SELECTOR_DROPDOWN_TOGGLE$1, target.closest(SELECTOR_DROPDOWN)).classList.add(CLASS_NAME_ACTIVE$1);\n      return;\n    }\n    for (const listGroup of SelectorEngine.parents(target, SELECTOR_NAV_LIST_GROUP)) {\n      // Set triggered links parents as active\n      // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n      for (const item of SelectorEngine.prev(listGroup, SELECTOR_LINK_ITEMS)) {\n        item.classList.add(CLASS_NAME_ACTIVE$1);\n      }\n    }\n  }\n  _clearActiveClass(parent) {\n    parent.classList.remove(CLASS_NAME_ACTIVE$1);\n    const activeNodes = SelectorEngine.find(`${SELECTOR_TARGET_LINKS}.${CLASS_NAME_ACTIVE$1}`, parent);\n    for (const node of activeNodes) {\n      node.classList.remove(CLASS_NAME_ACTIVE$1);\n    }\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = ScrollSpy.getOrCreateInstance(this, config);\n      if (typeof config !== 'string') {\n        return;\n      }\n      if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n        throw new TypeError(`No method named \"${config}\"`);\n      }\n      data[config]();\n    });\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(window, EVENT_LOAD_DATA_API$1, () => {\n  for (const spy of SelectorEngine.find(SELECTOR_DATA_SPY)) {\n    ScrollSpy.getOrCreateInstance(spy);\n  }\n});\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(ScrollSpy);\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap tab.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME$1 = 'tab';\nconst DATA_KEY$1 = 'bs.tab';\nconst EVENT_KEY$1 = `.${DATA_KEY$1}`;\nconst EVENT_HIDE$1 = `hide${EVENT_KEY$1}`;\nconst EVENT_HIDDEN$1 = `hidden${EVENT_KEY$1}`;\nconst EVENT_SHOW$1 = `show${EVENT_KEY$1}`;\nconst EVENT_SHOWN$1 = `shown${EVENT_KEY$1}`;\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY$1}`;\nconst EVENT_KEYDOWN = `keydown${EVENT_KEY$1}`;\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY$1}`;\nconst ARROW_LEFT_KEY = 'ArrowLeft';\nconst ARROW_RIGHT_KEY = 'ArrowRight';\nconst ARROW_UP_KEY = 'ArrowUp';\nconst ARROW_DOWN_KEY = 'ArrowDown';\nconst HOME_KEY = 'Home';\nconst END_KEY = 'End';\nconst CLASS_NAME_ACTIVE = 'active';\nconst CLASS_NAME_FADE$1 = 'fade';\nconst CLASS_NAME_SHOW$1 = 'show';\nconst CLASS_DROPDOWN = 'dropdown';\nconst SELECTOR_DROPDOWN_TOGGLE = '.dropdown-toggle';\nconst SELECTOR_DROPDOWN_MENU = '.dropdown-menu';\nconst NOT_SELECTOR_DROPDOWN_TOGGLE = `:not(${SELECTOR_DROPDOWN_TOGGLE})`;\nconst SELECTOR_TAB_PANEL = '.list-group, .nav, [role=\"tablist\"]';\nconst SELECTOR_OUTER = '.nav-item, .list-group-item';\nconst SELECTOR_INNER = `.nav-link${NOT_SELECTOR_DROPDOWN_TOGGLE}, .list-group-item${NOT_SELECTOR_DROPDOWN_TOGGLE}, [role=\"tab\"]${NOT_SELECTOR_DROPDOWN_TOGGLE}`;\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"tab\"], [data-bs-toggle=\"pill\"], [data-bs-toggle=\"list\"]'; // TODO: could only be `tab` in v6\nconst SELECTOR_INNER_ELEM = `${SELECTOR_INNER}, ${SELECTOR_DATA_TOGGLE}`;\nconst SELECTOR_DATA_TOGGLE_ACTIVE = `.${CLASS_NAME_ACTIVE}[data-bs-toggle=\"tab\"], .${CLASS_NAME_ACTIVE}[data-bs-toggle=\"pill\"], .${CLASS_NAME_ACTIVE}[data-bs-toggle=\"list\"]`;\n\n/**\n * Class definition\n */\n\nclass Tab extends BaseComponent {\n  constructor(element) {\n    super(element);\n    this._parent = this._element.closest(SELECTOR_TAB_PANEL);\n    if (!this._parent) {\n      return;\n      // TODO: should throw exception in v6\n      // throw new TypeError(`${element.outerHTML} has not a valid parent ${SELECTOR_INNER_ELEM}`)\n    }\n\n    // Set up initial aria attributes\n    this._setInitialAttributes(this._parent, this._getChildren());\n    EventHandler.on(this._element, EVENT_KEYDOWN, event => this._keydown(event));\n  }\n\n  // Getters\n  static get NAME() {\n    return NAME$1;\n  }\n\n  // Public\n  show() {\n    // Shows this elem and deactivate the active sibling if exists\n    const innerElem = this._element;\n    if (this._elemIsActive(innerElem)) {\n      return;\n    }\n\n    // Search for active tab on same parent to deactivate it\n    const active = this._getActiveElem();\n    const hideEvent = active ? EventHandler.trigger(active, EVENT_HIDE$1, {\n      relatedTarget: innerElem\n    }) : null;\n    const showEvent = EventHandler.trigger(innerElem, EVENT_SHOW$1, {\n      relatedTarget: active\n    });\n    if (showEvent.defaultPrevented || hideEvent && hideEvent.defaultPrevented) {\n      return;\n    }\n    this._deactivate(active, innerElem);\n    this._activate(innerElem, active);\n  }\n\n  // Private\n  _activate(element, relatedElem) {\n    if (!element) {\n      return;\n    }\n    element.classList.add(CLASS_NAME_ACTIVE);\n    this._activate(SelectorEngine.getElementFromSelector(element)); // Search and activate/show the proper section\n\n    const complete = () => {\n      if (element.getAttribute('role') !== 'tab') {\n        element.classList.add(CLASS_NAME_SHOW$1);\n        return;\n      }\n      element.removeAttribute('tabindex');\n      element.setAttribute('aria-selected', true);\n      this._toggleDropDown(element, true);\n      EventHandler.trigger(element, EVENT_SHOWN$1, {\n        relatedTarget: relatedElem\n      });\n    };\n    this._queueCallback(complete, element, element.classList.contains(CLASS_NAME_FADE$1));\n  }\n  _deactivate(element, relatedElem) {\n    if (!element) {\n      return;\n    }\n    element.classList.remove(CLASS_NAME_ACTIVE);\n    element.blur();\n    this._deactivate(SelectorEngine.getElementFromSelector(element)); // Search and deactivate the shown section too\n\n    const complete = () => {\n      if (element.getAttribute('role') !== 'tab') {\n        element.classList.remove(CLASS_NAME_SHOW$1);\n        return;\n      }\n      element.setAttribute('aria-selected', false);\n      element.setAttribute('tabindex', '-1');\n      this._toggleDropDown(element, false);\n      EventHandler.trigger(element, EVENT_HIDDEN$1, {\n        relatedTarget: relatedElem\n      });\n    };\n    this._queueCallback(complete, element, element.classList.contains(CLASS_NAME_FADE$1));\n  }\n  _keydown(event) {\n    if (![ARROW_LEFT_KEY, ARROW_RIGHT_KEY, ARROW_UP_KEY, ARROW_DOWN_KEY, HOME_KEY, END_KEY].includes(event.key)) {\n      return;\n    }\n    event.stopPropagation(); // stopPropagation/preventDefault both added to support up/down keys without scrolling the page\n    event.preventDefault();\n    const children = this._getChildren().filter(element => !isDisabled(element));\n    let nextActiveElement;\n    if ([HOME_KEY, END_KEY].includes(event.key)) {\n      nextActiveElement = children[event.key === HOME_KEY ? 0 : children.length - 1];\n    } else {\n      const isNext = [ARROW_RIGHT_KEY, ARROW_DOWN_KEY].includes(event.key);\n      nextActiveElement = getNextActiveElement(children, event.target, isNext, true);\n    }\n    if (nextActiveElement) {\n      nextActiveElement.focus({\n        preventScroll: true\n      });\n      Tab.getOrCreateInstance(nextActiveElement).show();\n    }\n  }\n  _getChildren() {\n    // collection of inner elements\n    return SelectorEngine.find(SELECTOR_INNER_ELEM, this._parent);\n  }\n  _getActiveElem() {\n    return this._getChildren().find(child => this._elemIsActive(child)) || null;\n  }\n  _setInitialAttributes(parent, children) {\n    this._setAttributeIfNotExists(parent, 'role', 'tablist');\n    for (const child of children) {\n      this._setInitialAttributesOnChild(child);\n    }\n  }\n  _setInitialAttributesOnChild(child) {\n    child = this._getInnerElement(child);\n    const isActive = this._elemIsActive(child);\n    const outerElem = this._getOuterElement(child);\n    child.setAttribute('aria-selected', isActive);\n    if (outerElem !== child) {\n      this._setAttributeIfNotExists(outerElem, 'role', 'presentation');\n    }\n    if (!isActive) {\n      child.setAttribute('tabindex', '-1');\n    }\n    this._setAttributeIfNotExists(child, 'role', 'tab');\n\n    // set attributes to the related panel too\n    this._setInitialAttributesOnTargetPanel(child);\n  }\n  _setInitialAttributesOnTargetPanel(child) {\n    const target = SelectorEngine.getElementFromSelector(child);\n    if (!target) {\n      return;\n    }\n    this._setAttributeIfNotExists(target, 'role', 'tabpanel');\n    if (child.id) {\n      this._setAttributeIfNotExists(target, 'aria-labelledby', `${child.id}`);\n    }\n  }\n  _toggleDropDown(element, open) {\n    const outerElem = this._getOuterElement(element);\n    if (!outerElem.classList.contains(CLASS_DROPDOWN)) {\n      return;\n    }\n    const toggle = (selector, className) => {\n      const element = SelectorEngine.findOne(selector, outerElem);\n      if (element) {\n        element.classList.toggle(className, open);\n      }\n    };\n    toggle(SELECTOR_DROPDOWN_TOGGLE, CLASS_NAME_ACTIVE);\n    toggle(SELECTOR_DROPDOWN_MENU, CLASS_NAME_SHOW$1);\n    outerElem.setAttribute('aria-expanded', open);\n  }\n  _setAttributeIfNotExists(element, attribute, value) {\n    if (!element.hasAttribute(attribute)) {\n      element.setAttribute(attribute, value);\n    }\n  }\n  _elemIsActive(elem) {\n    return elem.classList.contains(CLASS_NAME_ACTIVE);\n  }\n\n  // Try to get the inner element (usually the .nav-link)\n  _getInnerElement(elem) {\n    return elem.matches(SELECTOR_INNER_ELEM) ? elem : SelectorEngine.findOne(SELECTOR_INNER_ELEM, elem);\n  }\n\n  // Try to get the outer element (usually the .nav-item)\n  _getOuterElement(elem) {\n    return elem.closest(SELECTOR_OUTER) || elem;\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Tab.getOrCreateInstance(this);\n      if (typeof config !== 'string') {\n        return;\n      }\n      if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n        throw new TypeError(`No method named \"${config}\"`);\n      }\n      data[config]();\n    });\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  if (['A', 'AREA'].includes(this.tagName)) {\n    event.preventDefault();\n  }\n  if (isDisabled(this)) {\n    return;\n  }\n  Tab.getOrCreateInstance(this).show();\n});\n\n/**\n * Initialize on focus\n */\nEventHandler.on(window, EVENT_LOAD_DATA_API, () => {\n  for (const element of SelectorEngine.find(SELECTOR_DATA_TOGGLE_ACTIVE)) {\n    Tab.getOrCreateInstance(element);\n  }\n});\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Tab);\n\n/**\n * --------------------------------------------------------------------------\n * Bootstrap toast.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n\n/**\n * Constants\n */\n\nconst NAME = 'toast';\nconst DATA_KEY = 'bs.toast';\nconst EVENT_KEY = `.${DATA_KEY}`;\nconst EVENT_MOUSEOVER = `mouseover${EVENT_KEY}`;\nconst EVENT_MOUSEOUT = `mouseout${EVENT_KEY}`;\nconst EVENT_FOCUSIN = `focusin${EVENT_KEY}`;\nconst EVENT_FOCUSOUT = `focusout${EVENT_KEY}`;\nconst EVENT_HIDE = `hide${EVENT_KEY}`;\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`;\nconst EVENT_SHOW = `show${EVENT_KEY}`;\nconst EVENT_SHOWN = `shown${EVENT_KEY}`;\nconst CLASS_NAME_FADE = 'fade';\nconst CLASS_NAME_HIDE = 'hide'; // @deprecated - kept here only for backwards compatibility\nconst CLASS_NAME_SHOW = 'show';\nconst CLASS_NAME_SHOWING = 'showing';\nconst DefaultType = {\n  animation: 'boolean',\n  autohide: 'boolean',\n  delay: 'number'\n};\nconst Default = {\n  animation: true,\n  autohide: true,\n  delay: 5000\n};\n\n/**\n * Class definition\n */\n\nclass Toast extends BaseComponent {\n  constructor(element, config) {\n    super(element, config);\n    this._timeout = null;\n    this._hasMouseInteraction = false;\n    this._hasKeyboardInteraction = false;\n    this._setListeners();\n  }\n\n  // Getters\n  static get Default() {\n    return Default;\n  }\n  static get DefaultType() {\n    return DefaultType;\n  }\n  static get NAME() {\n    return NAME;\n  }\n\n  // Public\n  show() {\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW);\n    if (showEvent.defaultPrevented) {\n      return;\n    }\n    this._clearTimeout();\n    if (this._config.animation) {\n      this._element.classList.add(CLASS_NAME_FADE);\n    }\n    const complete = () => {\n      this._element.classList.remove(CLASS_NAME_SHOWING);\n      EventHandler.trigger(this._element, EVENT_SHOWN);\n      this._maybeScheduleHide();\n    };\n    this._element.classList.remove(CLASS_NAME_HIDE); // @deprecated\n    reflow(this._element);\n    this._element.classList.add(CLASS_NAME_SHOW, CLASS_NAME_SHOWING);\n    this._queueCallback(complete, this._element, this._config.animation);\n  }\n  hide() {\n    if (!this.isShown()) {\n      return;\n    }\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE);\n    if (hideEvent.defaultPrevented) {\n      return;\n    }\n    const complete = () => {\n      this._element.classList.add(CLASS_NAME_HIDE); // @deprecated\n      this._element.classList.remove(CLASS_NAME_SHOWING, CLASS_NAME_SHOW);\n      EventHandler.trigger(this._element, EVENT_HIDDEN);\n    };\n    this._element.classList.add(CLASS_NAME_SHOWING);\n    this._queueCallback(complete, this._element, this._config.animation);\n  }\n  dispose() {\n    this._clearTimeout();\n    if (this.isShown()) {\n      this._element.classList.remove(CLASS_NAME_SHOW);\n    }\n    super.dispose();\n  }\n  isShown() {\n    return this._element.classList.contains(CLASS_NAME_SHOW);\n  }\n\n  // Private\n  _maybeScheduleHide() {\n    if (!this._config.autohide) {\n      return;\n    }\n    if (this._hasMouseInteraction || this._hasKeyboardInteraction) {\n      return;\n    }\n    this._timeout = setTimeout(() => {\n      this.hide();\n    }, this._config.delay);\n  }\n  _onInteraction(event, isInteracting) {\n    switch (event.type) {\n      case 'mouseover':\n      case 'mouseout':\n        {\n          this._hasMouseInteraction = isInteracting;\n          break;\n        }\n      case 'focusin':\n      case 'focusout':\n        {\n          this._hasKeyboardInteraction = isInteracting;\n          break;\n        }\n    }\n    if (isInteracting) {\n      this._clearTimeout();\n      return;\n    }\n    const nextElement = event.relatedTarget;\n    if (this._element === nextElement || this._element.contains(nextElement)) {\n      return;\n    }\n    this._maybeScheduleHide();\n  }\n  _setListeners() {\n    EventHandler.on(this._element, EVENT_MOUSEOVER, event => this._onInteraction(event, true));\n    EventHandler.on(this._element, EVENT_MOUSEOUT, event => this._onInteraction(event, false));\n    EventHandler.on(this._element, EVENT_FOCUSIN, event => this._onInteraction(event, true));\n    EventHandler.on(this._element, EVENT_FOCUSOUT, event => this._onInteraction(event, false));\n  }\n  _clearTimeout() {\n    clearTimeout(this._timeout);\n    this._timeout = null;\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Toast.getOrCreateInstance(this, config);\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`);\n        }\n        data[config](this);\n      }\n    });\n  }\n}\n\n/**\n * Data API implementation\n */\n\nenableDismissTrigger(Toast);\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Toast);\n\nexport { Alert, Button, Carousel, Collapse, Dropdown, Modal, Offcanvas, Popover, ScrollSpy, Tab, Toast, Tooltip };\n//# sourceMappingURL=bootstrap.esm.js.map\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/data.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n/**\n * Constants\n */\n\nconst elementMap = new Map()\n\nexport default {\n  set(element, key, instance) {\n    if (!elementMap.has(element)) {\n      elementMap.set(element, new Map())\n    }\n\n    const instanceMap = elementMap.get(element)\n\n    // make it clear we only want one instance per element\n    // can be removed later when multiple key/instances are fine to be used\n    if (!instanceMap.has(key) && instanceMap.size !== 0) {\n      // eslint-disable-next-line no-console\n      console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(instanceMap.keys())[0]}.`)\n      return\n    }\n\n    instanceMap.set(key, instance)\n  },\n\n  get(element, key) {\n    if (elementMap.has(element)) {\n      return elementMap.get(element).get(key) || null\n    }\n\n    return null\n  },\n\n  remove(element, key) {\n    if (!elementMap.has(element)) {\n      return\n    }\n\n    const instanceMap = elementMap.get(element)\n\n    instanceMap.delete(key)\n\n    // free up element references if there are no instances left for an element\n    if (instanceMap.size === 0) {\n      elementMap.delete(element)\n    }\n  }\n}\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap util/index.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst MAX_UID = 1_000_000\nconst MILLISECONDS_MULTIPLIER = 1000\nconst TRANSITION_END = 'transitionend'\n\n/**\n * Properly escape IDs selectors to handle weird IDs\n * @param {string} selector\n * @returns {string}\n */\nconst parseSelector = selector => {\n  if (selector && window.CSS && window.CSS.escape) {\n    // document.querySelector needs escaping to handle IDs (html5+) containing for instance /\n    selector = selector.replace(/#([^\\s\"#']+)/g, (match, id) => `#${CSS.escape(id)}`)\n  }\n\n  return selector\n}\n\n// Shout-out Angus Croll (https://goo.gl/pxwQGp)\nconst toType = object => {\n  if (object === null || object === undefined) {\n    return `${object}`\n  }\n\n  return Object.prototype.toString.call(object).match(/\\s([a-z]+)/i)[1].toLowerCase()\n}\n\n/**\n * Public Util API\n */\n\nconst getUID = prefix => {\n  do {\n    prefix += Math.floor(Math.random() * MAX_UID)\n  } while (document.getElementById(prefix))\n\n  return prefix\n}\n\nconst getTransitionDurationFromElement = element => {\n  if (!element) {\n    return 0\n  }\n\n  // Get transition-duration of the element\n  let { transitionDuration, transitionDelay } = window.getComputedStyle(element)\n\n  const floatTransitionDuration = Number.parseFloat(transitionDuration)\n  const floatTransitionDelay = Number.parseFloat(transitionDelay)\n\n  // Return 0 if element or transition duration is not found\n  if (!floatTransitionDuration && !floatTransitionDelay) {\n    return 0\n  }\n\n  // If multiple durations are defined, take the first\n  transitionDuration = transitionDuration.split(',')[0]\n  transitionDelay = transitionDelay.split(',')[0]\n\n  return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER\n}\n\nconst triggerTransitionEnd = element => {\n  element.dispatchEvent(new Event(TRANSITION_END))\n}\n\nconst isElement = object => {\n  if (!object || typeof object !== 'object') {\n    return false\n  }\n\n  if (typeof object.jquery !== 'undefined') {\n    object = object[0]\n  }\n\n  return typeof object.nodeType !== 'undefined'\n}\n\nconst getElement = object => {\n  // it's a jQuery object or a node element\n  if (isElement(object)) {\n    return object.jquery ? object[0] : object\n  }\n\n  if (typeof object === 'string' && object.length > 0) {\n    return document.querySelector(parseSelector(object))\n  }\n\n  return null\n}\n\nconst isVisible = element => {\n  if (!isElement(element) || element.getClientRects().length === 0) {\n    return false\n  }\n\n  const elementIsVisible = getComputedStyle(element).getPropertyValue('visibility') === 'visible'\n  // Handle `details` element as its content may falsie appear visible when it is closed\n  const closedDetails = element.closest('details:not([open])')\n\n  if (!closedDetails) {\n    return elementIsVisible\n  }\n\n  if (closedDetails !== element) {\n    const summary = element.closest('summary')\n    if (summary && summary.parentNode !== closedDetails) {\n      return false\n    }\n\n    if (summary === null) {\n      return false\n    }\n  }\n\n  return elementIsVisible\n}\n\nconst isDisabled = element => {\n  if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n    return true\n  }\n\n  if (element.classList.contains('disabled')) {\n    return true\n  }\n\n  if (typeof element.disabled !== 'undefined') {\n    return element.disabled\n  }\n\n  return element.hasAttribute('disabled') && element.getAttribute('disabled') !== 'false'\n}\n\nconst findShadowRoot = element => {\n  if (!document.documentElement.attachShadow) {\n    return null\n  }\n\n  // Can find the shadow root otherwise it'll return the document\n  if (typeof element.getRootNode === 'function') {\n    const root = element.getRootNode()\n    return root instanceof ShadowRoot ? root : null\n  }\n\n  if (element instanceof ShadowRoot) {\n    return element\n  }\n\n  // when we don't find a shadow root\n  if (!element.parentNode) {\n    return null\n  }\n\n  return findShadowRoot(element.parentNode)\n}\n\nconst noop = () => {}\n\n/**\n * Trick to restart an element's animation\n *\n * @param {HTMLElement} element\n * @return void\n *\n * @see https://www.harrytheo.com/blog/2021/02/restart-a-css-animation-with-javascript/#restarting-a-css-animation\n */\nconst reflow = element => {\n  element.offsetHeight // eslint-disable-line no-unused-expressions\n}\n\nconst getjQuery = () => {\n  if (window.jQuery && !document.body.hasAttribute('data-bs-no-jquery')) {\n    return window.jQuery\n  }\n\n  return null\n}\n\nconst DOMContentLoadedCallbacks = []\n\nconst onDOMContentLoaded = callback => {\n  if (document.readyState === 'loading') {\n    // add listener on the first call when the document is in loading state\n    if (!DOMContentLoadedCallbacks.length) {\n      document.addEventListener('DOMContentLoaded', () => {\n        for (const callback of DOMContentLoadedCallbacks) {\n          callback()\n        }\n      })\n    }\n\n    DOMContentLoadedCallbacks.push(callback)\n  } else {\n    callback()\n  }\n}\n\nconst isRTL = () => document.documentElement.dir === 'rtl'\n\nconst defineJQueryPlugin = plugin => {\n  onDOMContentLoaded(() => {\n    const $ = getjQuery()\n    /* istanbul ignore if */\n    if ($) {\n      const name = plugin.NAME\n      const JQUERY_NO_CONFLICT = $.fn[name]\n      $.fn[name] = plugin.jQueryInterface\n      $.fn[name].Constructor = plugin\n      $.fn[name].noConflict = () => {\n        $.fn[name] = JQUERY_NO_CONFLICT\n        return plugin.jQueryInterface\n      }\n    }\n  })\n}\n\nconst execute = (possibleCallback, args = [], defaultValue = possibleCallback) => {\n  return typeof possibleCallback === 'function' ? possibleCallback.call(...args) : defaultValue\n}\n\nconst executeAfterTransition = (callback, transitionElement, waitForTransition = true) => {\n  if (!waitForTransition) {\n    execute(callback)\n    return\n  }\n\n  const durationPadding = 5\n  const emulatedDuration = getTransitionDurationFromElement(transitionElement) + durationPadding\n\n  let called = false\n\n  const handler = ({ target }) => {\n    if (target !== transitionElement) {\n      return\n    }\n\n    called = true\n    transitionElement.removeEventListener(TRANSITION_END, handler)\n    execute(callback)\n  }\n\n  transitionElement.addEventListener(TRANSITION_END, handler)\n  setTimeout(() => {\n    if (!called) {\n      triggerTransitionEnd(transitionElement)\n    }\n  }, emulatedDuration)\n}\n\n/**\n * Return the previous/next element of a list.\n *\n * @param {array} list    The list of elements\n * @param activeElement   The active element\n * @param shouldGetNext   Choose to get next or previous element\n * @param isCycleAllowed\n * @return {Element|elem} The proper element\n */\nconst getNextActiveElement = (list, activeElement, shouldGetNext, isCycleAllowed) => {\n  const listLength = list.length\n  let index = list.indexOf(activeElement)\n\n  // if the element does not exist in the list return an element\n  // depending on the direction and if cycle is allowed\n  if (index === -1) {\n    return !shouldGetNext && isCycleAllowed ? list[listLength - 1] : list[0]\n  }\n\n  index += shouldGetNext ? 1 : -1\n\n  if (isCycleAllowed) {\n    index = (index + listLength) % listLength\n  }\n\n  return list[Math.max(0, Math.min(index, listLength - 1))]\n}\n\nexport {\n  defineJQueryPlugin,\n  execute,\n  executeAfterTransition,\n  findShadowRoot,\n  getElement,\n  getjQuery,\n  getNextActiveElement,\n  getTransitionDurationFromElement,\n  getUID,\n  isDisabled,\n  isElement,\n  isRTL,\n  isVisible,\n  noop,\n  onDOMContentLoaded,\n  parseSelector,\n  reflow,\n  triggerTransitionEnd,\n  toType\n}\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/event-handler.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { getjQuery } from '../util/index.js'\n\n/**\n * Constants\n */\n\nconst namespaceRegex = /[^.]*(?=\\..*)\\.|.*/\nconst stripNameRegex = /\\..*/\nconst stripUidRegex = /::\\d+$/\nconst eventRegistry = {} // Events storage\nlet uidEvent = 1\nconst customEvents = {\n  mouseenter: 'mouseover',\n  mouseleave: 'mouseout'\n}\n\nconst nativeEvents = new Set([\n  'click',\n  'dblclick',\n  'mouseup',\n  'mousedown',\n  'contextmenu',\n  'mousewheel',\n  'DOMMouseScroll',\n  'mouseover',\n  'mouseout',\n  'mousemove',\n  'selectstart',\n  'selectend',\n  'keydown',\n  'keypress',\n  'keyup',\n  'orientationchange',\n  'touchstart',\n  'touchmove',\n  'touchend',\n  'touchcancel',\n  'pointerdown',\n  'pointermove',\n  'pointerup',\n  'pointerleave',\n  'pointercancel',\n  'gesturestart',\n  'gesturechange',\n  'gestureend',\n  'focus',\n  'blur',\n  'change',\n  'reset',\n  'select',\n  'submit',\n  'focusin',\n  'focusout',\n  'load',\n  'unload',\n  'beforeunload',\n  'resize',\n  'move',\n  'DOMContentLoaded',\n  'readystatechange',\n  'error',\n  'abort',\n  'scroll'\n])\n\n/**\n * Private methods\n */\n\nfunction makeEventUid(element, uid) {\n  return (uid && `${uid}::${uidEvent++}`) || element.uidEvent || uidEvent++\n}\n\nfunction getElementEvents(element) {\n  const uid = makeEventUid(element)\n\n  element.uidEvent = uid\n  eventRegistry[uid] = eventRegistry[uid] || {}\n\n  return eventRegistry[uid]\n}\n\nfunction bootstrapHandler(element, fn) {\n  return function handler(event) {\n    hydrateObj(event, { delegateTarget: element })\n\n    if (handler.oneOff) {\n      EventHandler.off(element, event.type, fn)\n    }\n\n    return fn.apply(element, [event])\n  }\n}\n\nfunction bootstrapDelegationHandler(element, selector, fn) {\n  return function handler(event) {\n    const domElements = element.querySelectorAll(selector)\n\n    for (let { target } = event; target && target !== this; target = target.parentNode) {\n      for (const domElement of domElements) {\n        if (domElement !== target) {\n          continue\n        }\n\n        hydrateObj(event, { delegateTarget: target })\n\n        if (handler.oneOff) {\n          EventHandler.off(element, event.type, selector, fn)\n        }\n\n        return fn.apply(target, [event])\n      }\n    }\n  }\n}\n\nfunction findHandler(events, callable, delegationSelector = null) {\n  return Object.values(events)\n    .find(event => event.callable === callable && event.delegationSelector === delegationSelector)\n}\n\nfunction normalizeParameters(originalTypeEvent, handler, delegationFunction) {\n  const isDelegated = typeof handler === 'string'\n  // TODO: tooltip passes `false` instead of selector, so we need to check\n  const callable = isDelegated ? delegationFunction : (handler || delegationFunction)\n  let typeEvent = getTypeEvent(originalTypeEvent)\n\n  if (!nativeEvents.has(typeEvent)) {\n    typeEvent = originalTypeEvent\n  }\n\n  return [isDelegated, callable, typeEvent]\n}\n\nfunction addHandler(element, originalTypeEvent, handler, delegationFunction, oneOff) {\n  if (typeof originalTypeEvent !== 'string' || !element) {\n    return\n  }\n\n  let [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction)\n\n  // in case of mouseenter or mouseleave wrap the handler within a function that checks for its DOM position\n  // this prevents the handler from being dispatched the same way as mouseover or mouseout does\n  if (originalTypeEvent in customEvents) {\n    const wrapFunction = fn => {\n      return function (event) {\n        if (!event.relatedTarget || (event.relatedTarget !== event.delegateTarget && !event.delegateTarget.contains(event.relatedTarget))) {\n          return fn.call(this, event)\n        }\n      }\n    }\n\n    callable = wrapFunction(callable)\n  }\n\n  const events = getElementEvents(element)\n  const handlers = events[typeEvent] || (events[typeEvent] = {})\n  const previousFunction = findHandler(handlers, callable, isDelegated ? handler : null)\n\n  if (previousFunction) {\n    previousFunction.oneOff = previousFunction.oneOff && oneOff\n\n    return\n  }\n\n  const uid = makeEventUid(callable, originalTypeEvent.replace(namespaceRegex, ''))\n  const fn = isDelegated ?\n    bootstrapDelegationHandler(element, handler, callable) :\n    bootstrapHandler(element, callable)\n\n  fn.delegationSelector = isDelegated ? handler : null\n  fn.callable = callable\n  fn.oneOff = oneOff\n  fn.uidEvent = uid\n  handlers[uid] = fn\n\n  element.addEventListener(typeEvent, fn, isDelegated)\n}\n\nfunction removeHandler(element, events, typeEvent, handler, delegationSelector) {\n  const fn = findHandler(events[typeEvent], handler, delegationSelector)\n\n  if (!fn) {\n    return\n  }\n\n  element.removeEventListener(typeEvent, fn, Boolean(delegationSelector))\n  delete events[typeEvent][fn.uidEvent]\n}\n\nfunction removeNamespacedHandlers(element, events, typeEvent, namespace) {\n  const storeElementEvent = events[typeEvent] || {}\n\n  for (const [handlerKey, event] of Object.entries(storeElementEvent)) {\n    if (handlerKey.includes(namespace)) {\n      removeHandler(element, events, typeEvent, event.callable, event.delegationSelector)\n    }\n  }\n}\n\nfunction getTypeEvent(event) {\n  // allow to get the native events from namespaced events ('click.bs.button' --> 'click')\n  event = event.replace(stripNameRegex, '')\n  return customEvents[event] || event\n}\n\nconst EventHandler = {\n  on(element, event, handler, delegationFunction) {\n    addHandler(element, event, handler, delegationFunction, false)\n  },\n\n  one(element, event, handler, delegationFunction) {\n    addHandler(element, event, handler, delegationFunction, true)\n  },\n\n  off(element, originalTypeEvent, handler, delegationFunction) {\n    if (typeof originalTypeEvent !== 'string' || !element) {\n      return\n    }\n\n    const [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction)\n    const inNamespace = typeEvent !== originalTypeEvent\n    const events = getElementEvents(element)\n    const storeElementEvent = events[typeEvent] || {}\n    const isNamespace = originalTypeEvent.startsWith('.')\n\n    if (typeof callable !== 'undefined') {\n      // Simplest case: handler is passed, remove that listener ONLY.\n      if (!Object.keys(storeElementEvent).length) {\n        return\n      }\n\n      removeHandler(element, events, typeEvent, callable, isDelegated ? handler : null)\n      return\n    }\n\n    if (isNamespace) {\n      for (const elementEvent of Object.keys(events)) {\n        removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1))\n      }\n    }\n\n    for (const [keyHandlers, event] of Object.entries(storeElementEvent)) {\n      const handlerKey = keyHandlers.replace(stripUidRegex, '')\n\n      if (!inNamespace || originalTypeEvent.includes(handlerKey)) {\n        removeHandler(element, events, typeEvent, event.callable, event.delegationSelector)\n      }\n    }\n  },\n\n  trigger(element, event, args) {\n    if (typeof event !== 'string' || !element) {\n      return null\n    }\n\n    const $ = getjQuery()\n    const typeEvent = getTypeEvent(event)\n    const inNamespace = event !== typeEvent\n\n    let jQueryEvent = null\n    let bubbles = true\n    let nativeDispatch = true\n    let defaultPrevented = false\n\n    if (inNamespace && $) {\n      jQueryEvent = $.Event(event, args)\n\n      $(element).trigger(jQueryEvent)\n      bubbles = !jQueryEvent.isPropagationStopped()\n      nativeDispatch = !jQueryEvent.isImmediatePropagationStopped()\n      defaultPrevented = jQueryEvent.isDefaultPrevented()\n    }\n\n    const evt = hydrateObj(new Event(event, { bubbles, cancelable: true }), args)\n\n    if (defaultPrevented) {\n      evt.preventDefault()\n    }\n\n    if (nativeDispatch) {\n      element.dispatchEvent(evt)\n    }\n\n    if (evt.defaultPrevented && jQueryEvent) {\n      jQueryEvent.preventDefault()\n    }\n\n    return evt\n  }\n}\n\nfunction hydrateObj(obj, meta = {}) {\n  for (const [key, value] of Object.entries(meta)) {\n    try {\n      obj[key] = value\n    } catch {\n      Object.defineProperty(obj, key, {\n        configurable: true,\n        get() {\n          return value\n        }\n      })\n    }\n  }\n\n  return obj\n}\n\nexport default EventHandler\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/manipulator.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nfunction normalizeData(value) {\n  if (value === 'true') {\n    return true\n  }\n\n  if (value === 'false') {\n    return false\n  }\n\n  if (value === Number(value).toString()) {\n    return Number(value)\n  }\n\n  if (value === '' || value === 'null') {\n    return null\n  }\n\n  if (typeof value !== 'string') {\n    return value\n  }\n\n  try {\n    return JSON.parse(decodeURIComponent(value))\n  } catch {\n    return value\n  }\n}\n\nfunction normalizeDataKey(key) {\n  return key.replace(/[A-Z]/g, chr => `-${chr.toLowerCase()}`)\n}\n\nconst Manipulator = {\n  setDataAttribute(element, key, value) {\n    element.setAttribute(`data-bs-${normalizeDataKey(key)}`, value)\n  },\n\n  removeDataAttribute(element, key) {\n    element.removeAttribute(`data-bs-${normalizeDataKey(key)}`)\n  },\n\n  getDataAttributes(element) {\n    if (!element) {\n      return {}\n    }\n\n    const attributes = {}\n    const bsKeys = Object.keys(element.dataset).filter(key => key.startsWith('bs') && !key.startsWith('bsConfig'))\n\n    for (const key of bsKeys) {\n      let pureKey = key.replace(/^bs/, '')\n      pureKey = pureKey.charAt(0).toLowerCase() + pureKey.slice(1)\n      attributes[pureKey] = normalizeData(element.dataset[key])\n    }\n\n    return attributes\n  },\n\n  getDataAttribute(element, key) {\n    return normalizeData(element.getAttribute(`data-bs-${normalizeDataKey(key)}`))\n  }\n}\n\nexport default Manipulator\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap util/config.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Manipulator from '../dom/manipulator.js'\nimport { isElement, toType } from './index.js'\n\n/**\n * Class definition\n */\n\nclass Config {\n  // Getters\n  static get Default() {\n    return {}\n  }\n\n  static get DefaultType() {\n    return {}\n  }\n\n  static get NAME() {\n    throw new Error('You have to implement the static method \"NAME\", for each component!')\n  }\n\n  _getConfig(config) {\n    config = this._mergeConfigObj(config)\n    config = this._configAfterMerge(config)\n    this._typeCheckConfig(config)\n    return config\n  }\n\n  _configAfterMerge(config) {\n    return config\n  }\n\n  _mergeConfigObj(config, element) {\n    const jsonConfig = isElement(element) ? Manipulator.getDataAttribute(element, 'config') : {} // try to parse\n\n    return {\n      ...this.constructor.Default,\n      ...(typeof jsonConfig === 'object' ? jsonConfig : {}),\n      ...(isElement(element) ? Manipulator.getDataAttributes(element) : {}),\n      ...(typeof config === 'object' ? config : {})\n    }\n  }\n\n  _typeCheckConfig(config, configTypes = this.constructor.DefaultType) {\n    for (const [property, expectedTypes] of Object.entries(configTypes)) {\n      const value = config[property]\n      const valueType = isElement(value) ? 'element' : toType(value)\n\n      if (!new RegExp(expectedTypes).test(valueType)) {\n        throw new TypeError(\n          `${this.constructor.NAME.toUpperCase()}: Option \"${property}\" provided type \"${valueType}\" but expected type \"${expectedTypes}\".`\n        )\n      }\n    }\n  }\n}\n\nexport default Config\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap base-component.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Data from './dom/data.js'\nimport EventHandler from './dom/event-handler.js'\nimport Config from './util/config.js'\nimport { executeAfterTransition, getElement } from './util/index.js'\n\n/**\n * Constants\n */\n\nconst VERSION = '5.3.7'\n\n/**\n * Class definition\n */\n\nclass BaseComponent extends Config {\n  constructor(element, config) {\n    super()\n\n    element = getElement(element)\n    if (!element) {\n      return\n    }\n\n    this._element = element\n    this._config = this._getConfig(config)\n\n    Data.set(this._element, this.constructor.DATA_KEY, this)\n  }\n\n  // Public\n  dispose() {\n    Data.remove(this._element, this.constructor.DATA_KEY)\n    EventHandler.off(this._element, this.constructor.EVENT_KEY)\n\n    for (const propertyName of Object.getOwnPropertyNames(this)) {\n      this[propertyName] = null\n    }\n  }\n\n  // Private\n  _queueCallback(callback, element, isAnimated = true) {\n    executeAfterTransition(callback, element, isAnimated)\n  }\n\n  _getConfig(config) {\n    config = this._mergeConfigObj(config, this._element)\n    config = this._configAfterMerge(config)\n    this._typeCheckConfig(config)\n    return config\n  }\n\n  // Static\n  static getInstance(element) {\n    return Data.get(getElement(element), this.DATA_KEY)\n  }\n\n  static getOrCreateInstance(element, config = {}) {\n    return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null)\n  }\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get DATA_KEY() {\n    return `bs.${this.NAME}`\n  }\n\n  static get EVENT_KEY() {\n    return `.${this.DATA_KEY}`\n  }\n\n  static eventName(name) {\n    return `${name}${this.EVENT_KEY}`\n  }\n}\n\nexport default BaseComponent\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/selector-engine.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { isDisabled, isVisible, parseSelector } from '../util/index.js'\n\nconst getSelector = element => {\n  let selector = element.getAttribute('data-bs-target')\n\n  if (!selector || selector === '#') {\n    let hrefAttribute = element.getAttribute('href')\n\n    // The only valid content that could double as a selector are IDs or classes,\n    // so everything starting with `#` or `.`. If a \"real\" URL is used as the selector,\n    // `document.querySelector` will rightfully complain it is invalid.\n    // See https://github.com/twbs/bootstrap/issues/32273\n    if (!hrefAttribute || (!hrefAttribute.includes('#') && !hrefAttribute.startsWith('.'))) {\n      return null\n    }\n\n    // Just in case some CMS puts out a full URL with the anchor appended\n    if (hrefAttribute.includes('#') && !hrefAttribute.startsWith('#')) {\n      hrefAttribute = `#${hrefAttribute.split('#')[1]}`\n    }\n\n    selector = hrefAttribute && hrefAttribute !== '#' ? hrefAttribute.trim() : null\n  }\n\n  return selector ? selector.split(',').map(sel => parseSelector(sel)).join(',') : null\n}\n\nconst SelectorEngine = {\n  find(selector, element = document.documentElement) {\n    return [].concat(...Element.prototype.querySelectorAll.call(element, selector))\n  },\n\n  findOne(selector, element = document.documentElement) {\n    return Element.prototype.querySelector.call(element, selector)\n  },\n\n  children(element, selector) {\n    return [].concat(...element.children).filter(child => child.matches(selector))\n  },\n\n  parents(element, selector) {\n    const parents = []\n    let ancestor = element.parentNode.closest(selector)\n\n    while (ancestor) {\n      parents.push(ancestor)\n      ancestor = ancestor.parentNode.closest(selector)\n    }\n\n    return parents\n  },\n\n  prev(element, selector) {\n    let previous = element.previousElementSibling\n\n    while (previous) {\n      if (previous.matches(selector)) {\n        return [previous]\n      }\n\n      previous = previous.previousElementSibling\n    }\n\n    return []\n  },\n  // TODO: this is now unused; remove later along with prev()\n  next(element, selector) {\n    let next = element.nextElementSibling\n\n    while (next) {\n      if (next.matches(selector)) {\n        return [next]\n      }\n\n      next = next.nextElementSibling\n    }\n\n    return []\n  },\n\n  focusableChildren(element) {\n    const focusables = [\n      'a',\n      'button',\n      'input',\n      'textarea',\n      'select',\n      'details',\n      '[tabindex]',\n      '[contenteditable=\"true\"]'\n    ].map(selector => `${selector}:not([tabindex^=\"-\"])`).join(',')\n\n    return this.find(focusables, element).filter(el => !isDisabled(el) && isVisible(el))\n  },\n\n  getSelectorFromElement(element) {\n    const selector = getSelector(element)\n\n    if (selector) {\n      return SelectorEngine.findOne(selector) ? selector : null\n    }\n\n    return null\n  },\n\n  getElementFromSelector(element) {\n    const selector = getSelector(element)\n\n    return selector ? SelectorEngine.findOne(selector) : null\n  },\n\n  getMultipleElementsFromSelector(element) {\n    const selector = getSelector(element)\n\n    return selector ? SelectorEngine.find(selector) : []\n  }\n}\n\nexport default SelectorEngine\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap util/component-functions.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport EventHandler from '../dom/event-handler.js'\nimport SelectorEngine from '../dom/selector-engine.js'\nimport { isDisabled } from './index.js'\n\nconst enableDismissTrigger = (component, method = 'hide') => {\n  const clickEvent = `click.dismiss${component.EVENT_KEY}`\n  const name = component.NAME\n\n  EventHandler.on(document, clickEvent, `[data-bs-dismiss=\"${name}\"]`, function (event) {\n    if (['A', 'AREA'].includes(this.tagName)) {\n      event.preventDefault()\n    }\n\n    if (isDisabled(this)) {\n      return\n    }\n\n    const target = SelectorEngine.getElementFromSelector(this) || this.closest(`.${name}`)\n    const instance = component.getOrCreateInstance(target)\n\n    // Method argument is left, for Alert and only, as it doesn't implement the 'hide' method\n    instance[method]()\n  })\n}\n\nexport {\n  enableDismissTrigger\n}\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap alert.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport BaseComponent from './base-component.js'\nimport EventHandler from './dom/event-handler.js'\nimport { enableDismissTrigger } from './util/component-functions.js'\nimport { defineJQueryPlugin } from './util/index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'alert'\nconst DATA_KEY = 'bs.alert'\nconst EVENT_KEY = `.${DATA_KEY}`\n\nconst EVENT_CLOSE = `close${EVENT_KEY}`\nconst EVENT_CLOSED = `closed${EVENT_KEY}`\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_SHOW = 'show'\n\n/**\n * Class definition\n */\n\nclass Alert extends BaseComponent {\n  // Getters\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  close() {\n    const closeEvent = EventHandler.trigger(this._element, EVENT_CLOSE)\n\n    if (closeEvent.defaultPrevented) {\n      return\n    }\n\n    this._element.classList.remove(CLASS_NAME_SHOW)\n\n    const isAnimated = this._element.classList.contains(CLASS_NAME_FADE)\n    this._queueCallback(() => this._destroyElement(), this._element, isAnimated)\n  }\n\n  // Private\n  _destroyElement() {\n    this._element.remove()\n    EventHandler.trigger(this._element, EVENT_CLOSED)\n    this.dispose()\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Alert.getOrCreateInstance(this)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config](this)\n    })\n  }\n}\n\n/**\n * Data API implementation\n */\n\nenableDismissTrigger(Alert, 'close')\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Alert)\n\nexport default Alert\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap button.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport BaseComponent from './base-component.js'\nimport EventHandler from './dom/event-handler.js'\nimport { defineJQueryPlugin } from './util/index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'button'\nconst DATA_KEY = 'bs.button'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst CLASS_NAME_ACTIVE = 'active'\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"button\"]'\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\n/**\n * Class definition\n */\n\nclass Button extends BaseComponent {\n  // Getters\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  toggle() {\n    // Toggle class and sync the `aria-pressed` attribute with the return value of the `.toggle()` method\n    this._element.setAttribute('aria-pressed', this._element.classList.toggle(CLASS_NAME_ACTIVE))\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Button.getOrCreateInstance(this)\n\n      if (config === 'toggle') {\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, event => {\n  event.preventDefault()\n\n  const button = event.target.closest(SELECTOR_DATA_TOGGLE)\n  const data = Button.getOrCreateInstance(button)\n\n  data.toggle()\n})\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Button)\n\nexport default Button\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap util/swipe.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport EventHandler from '../dom/event-handler.js'\nimport Config from './config.js'\nimport { execute } from './index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'swipe'\nconst EVENT_KEY = '.bs.swipe'\nconst EVENT_TOUCHSTART = `touchstart${EVENT_KEY}`\nconst EVENT_TOUCHMOVE = `touchmove${EVENT_KEY}`\nconst EVENT_TOUCHEND = `touchend${EVENT_KEY}`\nconst EVENT_POINTERDOWN = `pointerdown${EVENT_KEY}`\nconst EVENT_POINTERUP = `pointerup${EVENT_KEY}`\nconst POINTER_TYPE_TOUCH = 'touch'\nconst POINTER_TYPE_PEN = 'pen'\nconst CLASS_NAME_POINTER_EVENT = 'pointer-event'\nconst SWIPE_THRESHOLD = 40\n\nconst Default = {\n  endCallback: null,\n  leftCallback: null,\n  rightCallback: null\n}\n\nconst DefaultType = {\n  endCallback: '(function|null)',\n  leftCallback: '(function|null)',\n  rightCallback: '(function|null)'\n}\n\n/**\n * Class definition\n */\n\nclass Swipe extends Config {\n  constructor(element, config) {\n    super()\n    this._element = element\n\n    if (!element || !Swipe.isSupported()) {\n      return\n    }\n\n    this._config = this._getConfig(config)\n    this._deltaX = 0\n    this._supportPointerEvents = Boolean(window.PointerEvent)\n    this._initEvents()\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  dispose() {\n    EventHandler.off(this._element, EVENT_KEY)\n  }\n\n  // Private\n  _start(event) {\n    if (!this._supportPointerEvents) {\n      this._deltaX = event.touches[0].clientX\n\n      return\n    }\n\n    if (this._eventIsPointerPenTouch(event)) {\n      this._deltaX = event.clientX\n    }\n  }\n\n  _end(event) {\n    if (this._eventIsPointerPenTouch(event)) {\n      this._deltaX = event.clientX - this._deltaX\n    }\n\n    this._handleSwipe()\n    execute(this._config.endCallback)\n  }\n\n  _move(event) {\n    this._deltaX = event.touches && event.touches.length > 1 ?\n      0 :\n      event.touches[0].clientX - this._deltaX\n  }\n\n  _handleSwipe() {\n    const absDeltaX = Math.abs(this._deltaX)\n\n    if (absDeltaX <= SWIPE_THRESHOLD) {\n      return\n    }\n\n    const direction = absDeltaX / this._deltaX\n\n    this._deltaX = 0\n\n    if (!direction) {\n      return\n    }\n\n    execute(direction > 0 ? this._config.rightCallback : this._config.leftCallback)\n  }\n\n  _initEvents() {\n    if (this._supportPointerEvents) {\n      EventHandler.on(this._element, EVENT_POINTERDOWN, event => this._start(event))\n      EventHandler.on(this._element, EVENT_POINTERUP, event => this._end(event))\n\n      this._element.classList.add(CLASS_NAME_POINTER_EVENT)\n    } else {\n      EventHandler.on(this._element, EVENT_TOUCHSTART, event => this._start(event))\n      EventHandler.on(this._element, EVENT_TOUCHMOVE, event => this._move(event))\n      EventHandler.on(this._element, EVENT_TOUCHEND, event => this._end(event))\n    }\n  }\n\n  _eventIsPointerPenTouch(event) {\n    return this._supportPointerEvents && (event.pointerType === POINTER_TYPE_PEN || event.pointerType === POINTER_TYPE_TOUCH)\n  }\n\n  // Static\n  static isSupported() {\n    return 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0\n  }\n}\n\nexport default Swipe\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap carousel.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport BaseComponent from './base-component.js'\nimport EventHandler from './dom/event-handler.js'\nimport Manipulator from './dom/manipulator.js'\nimport SelectorEngine from './dom/selector-engine.js'\nimport {\n  defineJQueryPlugin,\n  getNextActiveElement,\n  isRTL,\n  isVisible,\n  reflow,\n  triggerTransitionEnd\n} from './util/index.js'\nimport Swipe from './util/swipe.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'carousel'\nconst DATA_KEY = 'bs.carousel'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst ARROW_LEFT_KEY = 'ArrowLeft'\nconst ARROW_RIGHT_KEY = 'ArrowRight'\nconst TOUCHEVENT_COMPAT_WAIT = 500 // Time for mouse compat events to fire after touch\n\nconst ORDER_NEXT = 'next'\nconst ORDER_PREV = 'prev'\nconst DIRECTION_LEFT = 'left'\nconst DIRECTION_RIGHT = 'right'\n\nconst EVENT_SLIDE = `slide${EVENT_KEY}`\nconst EVENT_SLID = `slid${EVENT_KEY}`\nconst EVENT_KEYDOWN = `keydown${EVENT_KEY}`\nconst EVENT_MOUSEENTER = `mouseenter${EVENT_KEY}`\nconst EVENT_MOUSELEAVE = `mouseleave${EVENT_KEY}`\nconst EVENT_DRAG_START = `dragstart${EVENT_KEY}`\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_CAROUSEL = 'carousel'\nconst CLASS_NAME_ACTIVE = 'active'\nconst CLASS_NAME_SLIDE = 'slide'\nconst CLASS_NAME_END = 'carousel-item-end'\nconst CLASS_NAME_START = 'carousel-item-start'\nconst CLASS_NAME_NEXT = 'carousel-item-next'\nconst CLASS_NAME_PREV = 'carousel-item-prev'\n\nconst SELECTOR_ACTIVE = '.active'\nconst SELECTOR_ITEM = '.carousel-item'\nconst SELECTOR_ACTIVE_ITEM = SELECTOR_ACTIVE + SELECTOR_ITEM\nconst SELECTOR_ITEM_IMG = '.carousel-item img'\nconst SELECTOR_INDICATORS = '.carousel-indicators'\nconst SELECTOR_DATA_SLIDE = '[data-bs-slide], [data-bs-slide-to]'\nconst SELECTOR_DATA_RIDE = '[data-bs-ride=\"carousel\"]'\n\nconst KEY_TO_DIRECTION = {\n  [ARROW_LEFT_KEY]: DIRECTION_RIGHT,\n  [ARROW_RIGHT_KEY]: DIRECTION_LEFT\n}\n\nconst Default = {\n  interval: 5000,\n  keyboard: true,\n  pause: 'hover',\n  ride: false,\n  touch: true,\n  wrap: true\n}\n\nconst DefaultType = {\n  interval: '(number|boolean)', // TODO:v6 remove boolean support\n  keyboard: 'boolean',\n  pause: '(string|boolean)',\n  ride: '(boolean|string)',\n  touch: 'boolean',\n  wrap: 'boolean'\n}\n\n/**\n * Class definition\n */\n\nclass Carousel extends BaseComponent {\n  constructor(element, config) {\n    super(element, config)\n\n    this._interval = null\n    this._activeElement = null\n    this._isSliding = false\n    this.touchTimeout = null\n    this._swipeHelper = null\n\n    this._indicatorsElement = SelectorEngine.findOne(SELECTOR_INDICATORS, this._element)\n    this._addEventListeners()\n\n    if (this._config.ride === CLASS_NAME_CAROUSEL) {\n      this.cycle()\n    }\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  next() {\n    this._slide(ORDER_NEXT)\n  }\n\n  nextWhenVisible() {\n    // FIXME TODO use `document.visibilityState`\n    // Don't call next when the page isn't visible\n    // or the carousel or its parent isn't visible\n    if (!document.hidden && isVisible(this._element)) {\n      this.next()\n    }\n  }\n\n  prev() {\n    this._slide(ORDER_PREV)\n  }\n\n  pause() {\n    if (this._isSliding) {\n      triggerTransitionEnd(this._element)\n    }\n\n    this._clearInterval()\n  }\n\n  cycle() {\n    this._clearInterval()\n    this._updateInterval()\n\n    this._interval = setInterval(() => this.nextWhenVisible(), this._config.interval)\n  }\n\n  _maybeEnableCycle() {\n    if (!this._config.ride) {\n      return\n    }\n\n    if (this._isSliding) {\n      EventHandler.one(this._element, EVENT_SLID, () => this.cycle())\n      return\n    }\n\n    this.cycle()\n  }\n\n  to(index) {\n    const items = this._getItems()\n    if (index > items.length - 1 || index < 0) {\n      return\n    }\n\n    if (this._isSliding) {\n      EventHandler.one(this._element, EVENT_SLID, () => this.to(index))\n      return\n    }\n\n    const activeIndex = this._getItemIndex(this._getActive())\n    if (activeIndex === index) {\n      return\n    }\n\n    const order = index > activeIndex ? ORDER_NEXT : ORDER_PREV\n\n    this._slide(order, items[index])\n  }\n\n  dispose() {\n    if (this._swipeHelper) {\n      this._swipeHelper.dispose()\n    }\n\n    super.dispose()\n  }\n\n  // Private\n  _configAfterMerge(config) {\n    config.defaultInterval = config.interval\n    return config\n  }\n\n  _addEventListeners() {\n    if (this._config.keyboard) {\n      EventHandler.on(this._element, EVENT_KEYDOWN, event => this._keydown(event))\n    }\n\n    if (this._config.pause === 'hover') {\n      EventHandler.on(this._element, EVENT_MOUSEENTER, () => this.pause())\n      EventHandler.on(this._element, EVENT_MOUSELEAVE, () => this._maybeEnableCycle())\n    }\n\n    if (this._config.touch && Swipe.isSupported()) {\n      this._addTouchEventListeners()\n    }\n  }\n\n  _addTouchEventListeners() {\n    for (const img of SelectorEngine.find(SELECTOR_ITEM_IMG, this._element)) {\n      EventHandler.on(img, EVENT_DRAG_START, event => event.preventDefault())\n    }\n\n    const endCallBack = () => {\n      if (this._config.pause !== 'hover') {\n        return\n      }\n\n      // If it's a touch-enabled device, mouseenter/leave are fired as\n      // part of the mouse compatibility events on first tap - the carousel\n      // would stop cycling until user tapped out of it;\n      // here, we listen for touchend, explicitly pause the carousel\n      // (as if it's the second time we tap on it, mouseenter compat event\n      // is NOT fired) and after a timeout (to allow for mouse compatibility\n      // events to fire) we explicitly restart cycling\n\n      this.pause()\n      if (this.touchTimeout) {\n        clearTimeout(this.touchTimeout)\n      }\n\n      this.touchTimeout = setTimeout(() => this._maybeEnableCycle(), TOUCHEVENT_COMPAT_WAIT + this._config.interval)\n    }\n\n    const swipeConfig = {\n      leftCallback: () => this._slide(this._directionToOrder(DIRECTION_LEFT)),\n      rightCallback: () => this._slide(this._directionToOrder(DIRECTION_RIGHT)),\n      endCallback: endCallBack\n    }\n\n    this._swipeHelper = new Swipe(this._element, swipeConfig)\n  }\n\n  _keydown(event) {\n    if (/input|textarea/i.test(event.target.tagName)) {\n      return\n    }\n\n    const direction = KEY_TO_DIRECTION[event.key]\n    if (direction) {\n      event.preventDefault()\n      this._slide(this._directionToOrder(direction))\n    }\n  }\n\n  _getItemIndex(element) {\n    return this._getItems().indexOf(element)\n  }\n\n  _setActiveIndicatorElement(index) {\n    if (!this._indicatorsElement) {\n      return\n    }\n\n    const activeIndicator = SelectorEngine.findOne(SELECTOR_ACTIVE, this._indicatorsElement)\n\n    activeIndicator.classList.remove(CLASS_NAME_ACTIVE)\n    activeIndicator.removeAttribute('aria-current')\n\n    const newActiveIndicator = SelectorEngine.findOne(`[data-bs-slide-to=\"${index}\"]`, this._indicatorsElement)\n\n    if (newActiveIndicator) {\n      newActiveIndicator.classList.add(CLASS_NAME_ACTIVE)\n      newActiveIndicator.setAttribute('aria-current', 'true')\n    }\n  }\n\n  _updateInterval() {\n    const element = this._activeElement || this._getActive()\n\n    if (!element) {\n      return\n    }\n\n    const elementInterval = Number.parseInt(element.getAttribute('data-bs-interval'), 10)\n\n    this._config.interval = elementInterval || this._config.defaultInterval\n  }\n\n  _slide(order, element = null) {\n    if (this._isSliding) {\n      return\n    }\n\n    const activeElement = this._getActive()\n    const isNext = order === ORDER_NEXT\n    const nextElement = element || getNextActiveElement(this._getItems(), activeElement, isNext, this._config.wrap)\n\n    if (nextElement === activeElement) {\n      return\n    }\n\n    const nextElementIndex = this._getItemIndex(nextElement)\n\n    const triggerEvent = eventName => {\n      return EventHandler.trigger(this._element, eventName, {\n        relatedTarget: nextElement,\n        direction: this._orderToDirection(order),\n        from: this._getItemIndex(activeElement),\n        to: nextElementIndex\n      })\n    }\n\n    const slideEvent = triggerEvent(EVENT_SLIDE)\n\n    if (slideEvent.defaultPrevented) {\n      return\n    }\n\n    if (!activeElement || !nextElement) {\n      // Some weirdness is happening, so we bail\n      // TODO: change tests that use empty divs to avoid this check\n      return\n    }\n\n    const isCycling = Boolean(this._interval)\n    this.pause()\n\n    this._isSliding = true\n\n    this._setActiveIndicatorElement(nextElementIndex)\n    this._activeElement = nextElement\n\n    const directionalClassName = isNext ? CLASS_NAME_START : CLASS_NAME_END\n    const orderClassName = isNext ? CLASS_NAME_NEXT : CLASS_NAME_PREV\n\n    nextElement.classList.add(orderClassName)\n\n    reflow(nextElement)\n\n    activeElement.classList.add(directionalClassName)\n    nextElement.classList.add(directionalClassName)\n\n    const completeCallBack = () => {\n      nextElement.classList.remove(directionalClassName, orderClassName)\n      nextElement.classList.add(CLASS_NAME_ACTIVE)\n\n      activeElement.classList.remove(CLASS_NAME_ACTIVE, orderClassName, directionalClassName)\n\n      this._isSliding = false\n\n      triggerEvent(EVENT_SLID)\n    }\n\n    this._queueCallback(completeCallBack, activeElement, this._isAnimated())\n\n    if (isCycling) {\n      this.cycle()\n    }\n  }\n\n  _isAnimated() {\n    return this._element.classList.contains(CLASS_NAME_SLIDE)\n  }\n\n  _getActive() {\n    return SelectorEngine.findOne(SELECTOR_ACTIVE_ITEM, this._element)\n  }\n\n  _getItems() {\n    return SelectorEngine.find(SELECTOR_ITEM, this._element)\n  }\n\n  _clearInterval() {\n    if (this._interval) {\n      clearInterval(this._interval)\n      this._interval = null\n    }\n  }\n\n  _directionToOrder(direction) {\n    if (isRTL()) {\n      return direction === DIRECTION_LEFT ? ORDER_PREV : ORDER_NEXT\n    }\n\n    return direction === DIRECTION_LEFT ? ORDER_NEXT : ORDER_PREV\n  }\n\n  _orderToDirection(order) {\n    if (isRTL()) {\n      return order === ORDER_PREV ? DIRECTION_LEFT : DIRECTION_RIGHT\n    }\n\n    return order === ORDER_PREV ? DIRECTION_RIGHT : DIRECTION_LEFT\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Carousel.getOrCreateInstance(this, config)\n\n      if (typeof config === 'number') {\n        data.to(config)\n        return\n      }\n\n      if (typeof config === 'string') {\n        if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_SLIDE, function (event) {\n  const target = SelectorEngine.getElementFromSelector(this)\n\n  if (!target || !target.classList.contains(CLASS_NAME_CAROUSEL)) {\n    return\n  }\n\n  event.preventDefault()\n\n  const carousel = Carousel.getOrCreateInstance(target)\n  const slideIndex = this.getAttribute('data-bs-slide-to')\n\n  if (slideIndex) {\n    carousel.to(slideIndex)\n    carousel._maybeEnableCycle()\n    return\n  }\n\n  if (Manipulator.getDataAttribute(this, 'slide') === 'next') {\n    carousel.next()\n    carousel._maybeEnableCycle()\n    return\n  }\n\n  carousel.prev()\n  carousel._maybeEnableCycle()\n})\n\nEventHandler.on(window, EVENT_LOAD_DATA_API, () => {\n  const carousels = SelectorEngine.find(SELECTOR_DATA_RIDE)\n\n  for (const carousel of carousels) {\n    Carousel.getOrCreateInstance(carousel)\n  }\n})\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Carousel)\n\nexport default Carousel\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap collapse.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport BaseComponent from './base-component.js'\nimport EventHandler from './dom/event-handler.js'\nimport SelectorEngine from './dom/selector-engine.js'\nimport {\n  defineJQueryPlugin,\n  getElement,\n  reflow\n} from './util/index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'collapse'\nconst DATA_KEY = 'bs.collapse'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_COLLAPSE = 'collapse'\nconst CLASS_NAME_COLLAPSING = 'collapsing'\nconst CLASS_NAME_COLLAPSED = 'collapsed'\nconst CLASS_NAME_DEEPER_CHILDREN = `:scope .${CLASS_NAME_COLLAPSE} .${CLASS_NAME_COLLAPSE}`\nconst CLASS_NAME_HORIZONTAL = 'collapse-horizontal'\n\nconst WIDTH = 'width'\nconst HEIGHT = 'height'\n\nconst SELECTOR_ACTIVES = '.collapse.show, .collapse.collapsing'\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"collapse\"]'\n\nconst Default = {\n  parent: null,\n  toggle: true\n}\n\nconst DefaultType = {\n  parent: '(null|element)',\n  toggle: 'boolean'\n}\n\n/**\n * Class definition\n */\n\nclass Collapse extends BaseComponent {\n  constructor(element, config) {\n    super(element, config)\n\n    this._isTransitioning = false\n    this._triggerArray = []\n\n    const toggleList = SelectorEngine.find(SELECTOR_DATA_TOGGLE)\n\n    for (const elem of toggleList) {\n      const selector = SelectorEngine.getSelectorFromElement(elem)\n      const filterElement = SelectorEngine.find(selector)\n        .filter(foundElement => foundElement === this._element)\n\n      if (selector !== null && filterElement.length) {\n        this._triggerArray.push(elem)\n      }\n    }\n\n    this._initializeChildren()\n\n    if (!this._config.parent) {\n      this._addAriaAndCollapsedClass(this._triggerArray, this._isShown())\n    }\n\n    if (this._config.toggle) {\n      this.toggle()\n    }\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  toggle() {\n    if (this._isShown()) {\n      this.hide()\n    } else {\n      this.show()\n    }\n  }\n\n  show() {\n    if (this._isTransitioning || this._isShown()) {\n      return\n    }\n\n    let activeChildren = []\n\n    // find active children\n    if (this._config.parent) {\n      activeChildren = this._getFirstLevelChildren(SELECTOR_ACTIVES)\n        .filter(element => element !== this._element)\n        .map(element => Collapse.getOrCreateInstance(element, { toggle: false }))\n    }\n\n    if (activeChildren.length && activeChildren[0]._isTransitioning) {\n      return\n    }\n\n    const startEvent = EventHandler.trigger(this._element, EVENT_SHOW)\n    if (startEvent.defaultPrevented) {\n      return\n    }\n\n    for (const activeInstance of activeChildren) {\n      activeInstance.hide()\n    }\n\n    const dimension = this._getDimension()\n\n    this._element.classList.remove(CLASS_NAME_COLLAPSE)\n    this._element.classList.add(CLASS_NAME_COLLAPSING)\n\n    this._element.style[dimension] = 0\n\n    this._addAriaAndCollapsedClass(this._triggerArray, true)\n    this._isTransitioning = true\n\n    const complete = () => {\n      this._isTransitioning = false\n\n      this._element.classList.remove(CLASS_NAME_COLLAPSING)\n      this._element.classList.add(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW)\n\n      this._element.style[dimension] = ''\n\n      EventHandler.trigger(this._element, EVENT_SHOWN)\n    }\n\n    const capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1)\n    const scrollSize = `scroll${capitalizedDimension}`\n\n    this._queueCallback(complete, this._element, true)\n    this._element.style[dimension] = `${this._element[scrollSize]}px`\n  }\n\n  hide() {\n    if (this._isTransitioning || !this._isShown()) {\n      return\n    }\n\n    const startEvent = EventHandler.trigger(this._element, EVENT_HIDE)\n    if (startEvent.defaultPrevented) {\n      return\n    }\n\n    const dimension = this._getDimension()\n\n    this._element.style[dimension] = `${this._element.getBoundingClientRect()[dimension]}px`\n\n    reflow(this._element)\n\n    this._element.classList.add(CLASS_NAME_COLLAPSING)\n    this._element.classList.remove(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW)\n\n    for (const trigger of this._triggerArray) {\n      const element = SelectorEngine.getElementFromSelector(trigger)\n\n      if (element && !this._isShown(element)) {\n        this._addAriaAndCollapsedClass([trigger], false)\n      }\n    }\n\n    this._isTransitioning = true\n\n    const complete = () => {\n      this._isTransitioning = false\n      this._element.classList.remove(CLASS_NAME_COLLAPSING)\n      this._element.classList.add(CLASS_NAME_COLLAPSE)\n      EventHandler.trigger(this._element, EVENT_HIDDEN)\n    }\n\n    this._element.style[dimension] = ''\n\n    this._queueCallback(complete, this._element, true)\n  }\n\n  // Private\n  _isShown(element = this._element) {\n    return element.classList.contains(CLASS_NAME_SHOW)\n  }\n\n  _configAfterMerge(config) {\n    config.toggle = Boolean(config.toggle) // Coerce string values\n    config.parent = getElement(config.parent)\n    return config\n  }\n\n  _getDimension() {\n    return this._element.classList.contains(CLASS_NAME_HORIZONTAL) ? WIDTH : HEIGHT\n  }\n\n  _initializeChildren() {\n    if (!this._config.parent) {\n      return\n    }\n\n    const children = this._getFirstLevelChildren(SELECTOR_DATA_TOGGLE)\n\n    for (const element of children) {\n      const selected = SelectorEngine.getElementFromSelector(element)\n\n      if (selected) {\n        this._addAriaAndCollapsedClass([element], this._isShown(selected))\n      }\n    }\n  }\n\n  _getFirstLevelChildren(selector) {\n    const children = SelectorEngine.find(CLASS_NAME_DEEPER_CHILDREN, this._config.parent)\n    // remove children if greater depth\n    return SelectorEngine.find(selector, this._config.parent).filter(element => !children.includes(element))\n  }\n\n  _addAriaAndCollapsedClass(triggerArray, isOpen) {\n    if (!triggerArray.length) {\n      return\n    }\n\n    for (const element of triggerArray) {\n      element.classList.toggle(CLASS_NAME_COLLAPSED, !isOpen)\n      element.setAttribute('aria-expanded', isOpen)\n    }\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    const _config = {}\n    if (typeof config === 'string' && /show|hide/.test(config)) {\n      _config.toggle = false\n    }\n\n    return this.each(function () {\n      const data = Collapse.getOrCreateInstance(this, _config)\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  // preventDefault only for <a> elements (which change the URL) not inside the collapsible element\n  if (event.target.tagName === 'A' || (event.delegateTarget && event.delegateTarget.tagName === 'A')) {\n    event.preventDefault()\n  }\n\n  for (const element of SelectorEngine.getMultipleElementsFromSelector(this)) {\n    Collapse.getOrCreateInstance(element, { toggle: false }).toggle()\n  }\n})\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Collapse)\n\nexport default Collapse\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap dropdown.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport * as Popper from '@popperjs/core'\nimport BaseComponent from './base-component.js'\nimport EventHandler from './dom/event-handler.js'\nimport Manipulator from './dom/manipulator.js'\nimport SelectorEngine from './dom/selector-engine.js'\nimport {\n  defineJQueryPlugin,\n  execute,\n  getElement,\n  getNextActiveElement,\n  isDisabled,\n  isElement,\n  isRTL,\n  isVisible,\n  noop\n} from './util/index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'dropdown'\nconst DATA_KEY = 'bs.dropdown'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst ESCAPE_KEY = 'Escape'\nconst TAB_KEY = 'Tab'\nconst ARROW_UP_KEY = 'ArrowUp'\nconst ARROW_DOWN_KEY = 'ArrowDown'\nconst RIGHT_MOUSE_BUTTON = 2 // MouseEvent.button value for the secondary button, usually the right button\n\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_KEYDOWN_DATA_API = `keydown${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_KEYUP_DATA_API = `keyup${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_DROPUP = 'dropup'\nconst CLASS_NAME_DROPEND = 'dropend'\nconst CLASS_NAME_DROPSTART = 'dropstart'\nconst CLASS_NAME_DROPUP_CENTER = 'dropup-center'\nconst CLASS_NAME_DROPDOWN_CENTER = 'dropdown-center'\n\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"dropdown\"]:not(.disabled):not(:disabled)'\nconst SELECTOR_DATA_TOGGLE_SHOWN = `${SELECTOR_DATA_TOGGLE}.${CLASS_NAME_SHOW}`\nconst SELECTOR_MENU = '.dropdown-menu'\nconst SELECTOR_NAVBAR = '.navbar'\nconst SELECTOR_NAVBAR_NAV = '.navbar-nav'\nconst SELECTOR_VISIBLE_ITEMS = '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)'\n\nconst PLACEMENT_TOP = isRTL() ? 'top-end' : 'top-start'\nconst PLACEMENT_TOPEND = isRTL() ? 'top-start' : 'top-end'\nconst PLACEMENT_BOTTOM = isRTL() ? 'bottom-end' : 'bottom-start'\nconst PLACEMENT_BOTTOMEND = isRTL() ? 'bottom-start' : 'bottom-end'\nconst PLACEMENT_RIGHT = isRTL() ? 'left-start' : 'right-start'\nconst PLACEMENT_LEFT = isRTL() ? 'right-start' : 'left-start'\nconst PLACEMENT_TOPCENTER = 'top'\nconst PLACEMENT_BOTTOMCENTER = 'bottom'\n\nconst Default = {\n  autoClose: true,\n  boundary: 'clippingParents',\n  display: 'dynamic',\n  offset: [0, 2],\n  popperConfig: null,\n  reference: 'toggle'\n}\n\nconst DefaultType = {\n  autoClose: '(boolean|string)',\n  boundary: '(string|element)',\n  display: 'string',\n  offset: '(array|string|function)',\n  popperConfig: '(null|object|function)',\n  reference: '(string|element|object)'\n}\n\n/**\n * Class definition\n */\n\nclass Dropdown extends BaseComponent {\n  constructor(element, config) {\n    super(element, config)\n\n    this._popper = null\n    this._parent = this._element.parentNode // dropdown wrapper\n    // TODO: v6 revert #37011 & change markup https://getbootstrap.com/docs/5.3/forms/input-group/\n    this._menu = SelectorEngine.next(this._element, SELECTOR_MENU)[0] ||\n      SelectorEngine.prev(this._element, SELECTOR_MENU)[0] ||\n      SelectorEngine.findOne(SELECTOR_MENU, this._parent)\n    this._inNavbar = this._detectNavbar()\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  toggle() {\n    return this._isShown() ? this.hide() : this.show()\n  }\n\n  show() {\n    if (isDisabled(this._element) || this._isShown()) {\n      return\n    }\n\n    const relatedTarget = {\n      relatedTarget: this._element\n    }\n\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW, relatedTarget)\n\n    if (showEvent.defaultPrevented) {\n      return\n    }\n\n    this._createPopper()\n\n    // If this is a touch-enabled device we add extra\n    // empty mouseover listeners to the body's immediate children;\n    // only needed because of broken event delegation on iOS\n    // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n    if ('ontouchstart' in document.documentElement && !this._parent.closest(SELECTOR_NAVBAR_NAV)) {\n      for (const element of [].concat(...document.body.children)) {\n        EventHandler.on(element, 'mouseover', noop)\n      }\n    }\n\n    this._element.focus()\n    this._element.setAttribute('aria-expanded', true)\n\n    this._menu.classList.add(CLASS_NAME_SHOW)\n    this._element.classList.add(CLASS_NAME_SHOW)\n    EventHandler.trigger(this._element, EVENT_SHOWN, relatedTarget)\n  }\n\n  hide() {\n    if (isDisabled(this._element) || !this._isShown()) {\n      return\n    }\n\n    const relatedTarget = {\n      relatedTarget: this._element\n    }\n\n    this._completeHide(relatedTarget)\n  }\n\n  dispose() {\n    if (this._popper) {\n      this._popper.destroy()\n    }\n\n    super.dispose()\n  }\n\n  update() {\n    this._inNavbar = this._detectNavbar()\n    if (this._popper) {\n      this._popper.update()\n    }\n  }\n\n  // Private\n  _completeHide(relatedTarget) {\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE, relatedTarget)\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    // If this is a touch-enabled device we remove the extra\n    // empty mouseover listeners we added for iOS support\n    if ('ontouchstart' in document.documentElement) {\n      for (const element of [].concat(...document.body.children)) {\n        EventHandler.off(element, 'mouseover', noop)\n      }\n    }\n\n    if (this._popper) {\n      this._popper.destroy()\n    }\n\n    this._menu.classList.remove(CLASS_NAME_SHOW)\n    this._element.classList.remove(CLASS_NAME_SHOW)\n    this._element.setAttribute('aria-expanded', 'false')\n    Manipulator.removeDataAttribute(this._menu, 'popper')\n    EventHandler.trigger(this._element, EVENT_HIDDEN, relatedTarget)\n\n    // Explicitly return focus to the trigger element\n    this._element.focus()\n  }\n\n  _getConfig(config) {\n    config = super._getConfig(config)\n\n    if (typeof config.reference === 'object' && !isElement(config.reference) &&\n      typeof config.reference.getBoundingClientRect !== 'function'\n    ) {\n      // Popper virtual elements require a getBoundingClientRect method\n      throw new TypeError(`${NAME.toUpperCase()}: Option \"reference\" provided type \"object\" without a required \"getBoundingClientRect\" method.`)\n    }\n\n    return config\n  }\n\n  _createPopper() {\n    if (typeof Popper === 'undefined') {\n      throw new TypeError('Bootstrap\\'s dropdowns require Popper (https://popper.js.org/docs/v2/)')\n    }\n\n    let referenceElement = this._element\n\n    if (this._config.reference === 'parent') {\n      referenceElement = this._parent\n    } else if (isElement(this._config.reference)) {\n      referenceElement = getElement(this._config.reference)\n    } else if (typeof this._config.reference === 'object') {\n      referenceElement = this._config.reference\n    }\n\n    const popperConfig = this._getPopperConfig()\n    this._popper = Popper.createPopper(referenceElement, this._menu, popperConfig)\n  }\n\n  _isShown() {\n    return this._menu.classList.contains(CLASS_NAME_SHOW)\n  }\n\n  _getPlacement() {\n    const parentDropdown = this._parent\n\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPEND)) {\n      return PLACEMENT_RIGHT\n    }\n\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPSTART)) {\n      return PLACEMENT_LEFT\n    }\n\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPUP_CENTER)) {\n      return PLACEMENT_TOPCENTER\n    }\n\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPDOWN_CENTER)) {\n      return PLACEMENT_BOTTOMCENTER\n    }\n\n    // We need to trim the value because custom properties can also include spaces\n    const isEnd = getComputedStyle(this._menu).getPropertyValue('--bs-position').trim() === 'end'\n\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPUP)) {\n      return isEnd ? PLACEMENT_TOPEND : PLACEMENT_TOP\n    }\n\n    return isEnd ? PLACEMENT_BOTTOMEND : PLACEMENT_BOTTOM\n  }\n\n  _detectNavbar() {\n    return this._element.closest(SELECTOR_NAVBAR) !== null\n  }\n\n  _getOffset() {\n    const { offset } = this._config\n\n    if (typeof offset === 'string') {\n      return offset.split(',').map(value => Number.parseInt(value, 10))\n    }\n\n    if (typeof offset === 'function') {\n      return popperData => offset(popperData, this._element)\n    }\n\n    return offset\n  }\n\n  _getPopperConfig() {\n    const defaultBsPopperConfig = {\n      placement: this._getPlacement(),\n      modifiers: [{\n        name: 'preventOverflow',\n        options: {\n          boundary: this._config.boundary\n        }\n      },\n      {\n        name: 'offset',\n        options: {\n          offset: this._getOffset()\n        }\n      }]\n    }\n\n    // Disable Popper if we have a static display or Dropdown is in Navbar\n    if (this._inNavbar || this._config.display === 'static') {\n      Manipulator.setDataAttribute(this._menu, 'popper', 'static') // TODO: v6 remove\n      defaultBsPopperConfig.modifiers = [{\n        name: 'applyStyles',\n        enabled: false\n      }]\n    }\n\n    return {\n      ...defaultBsPopperConfig,\n      ...execute(this._config.popperConfig, [undefined, defaultBsPopperConfig])\n    }\n  }\n\n  _selectMenuItem({ key, target }) {\n    const items = SelectorEngine.find(SELECTOR_VISIBLE_ITEMS, this._menu).filter(element => isVisible(element))\n\n    if (!items.length) {\n      return\n    }\n\n    // if target isn't included in items (e.g. when expanding the dropdown)\n    // allow cycling to get the last item in case key equals ARROW_UP_KEY\n    getNextActiveElement(items, target, key === ARROW_DOWN_KEY, !items.includes(target)).focus()\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Dropdown.getOrCreateInstance(this, config)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config]()\n    })\n  }\n\n  static clearMenus(event) {\n    if (event.button === RIGHT_MOUSE_BUTTON || (event.type === 'keyup' && event.key !== TAB_KEY)) {\n      return\n    }\n\n    const openToggles = SelectorEngine.find(SELECTOR_DATA_TOGGLE_SHOWN)\n\n    for (const toggle of openToggles) {\n      const context = Dropdown.getInstance(toggle)\n      if (!context || context._config.autoClose === false) {\n        continue\n      }\n\n      const composedPath = event.composedPath()\n      const isMenuTarget = composedPath.includes(context._menu)\n      if (\n        composedPath.includes(context._element) ||\n        (context._config.autoClose === 'inside' && !isMenuTarget) ||\n        (context._config.autoClose === 'outside' && isMenuTarget)\n      ) {\n        continue\n      }\n\n      // Tab navigation through the dropdown menu or events from contained inputs shouldn't close the menu\n      if (context._menu.contains(event.target) && ((event.type === 'keyup' && event.key === TAB_KEY) || /input|select|option|textarea|form/i.test(event.target.tagName))) {\n        continue\n      }\n\n      const relatedTarget = { relatedTarget: context._element }\n\n      if (event.type === 'click') {\n        relatedTarget.clickEvent = event\n      }\n\n      context._completeHide(relatedTarget)\n    }\n  }\n\n  static dataApiKeydownHandler(event) {\n    // If not an UP | DOWN | ESCAPE key => not a dropdown command\n    // If input/textarea && if key is other than ESCAPE => not a dropdown command\n\n    const isInput = /input|textarea/i.test(event.target.tagName)\n    const isEscapeEvent = event.key === ESCAPE_KEY\n    const isUpOrDownEvent = [ARROW_UP_KEY, ARROW_DOWN_KEY].includes(event.key)\n\n    if (!isUpOrDownEvent && !isEscapeEvent) {\n      return\n    }\n\n    if (isInput && !isEscapeEvent) {\n      return\n    }\n\n    event.preventDefault()\n\n    // TODO: v6 revert #37011 & change markup https://getbootstrap.com/docs/5.3/forms/input-group/\n    const getToggleButton = this.matches(SELECTOR_DATA_TOGGLE) ?\n      this :\n      (SelectorEngine.prev(this, SELECTOR_DATA_TOGGLE)[0] ||\n        SelectorEngine.next(this, SELECTOR_DATA_TOGGLE)[0] ||\n        SelectorEngine.findOne(SELECTOR_DATA_TOGGLE, event.delegateTarget.parentNode))\n\n    const instance = Dropdown.getOrCreateInstance(getToggleButton)\n\n    if (isUpOrDownEvent) {\n      event.stopPropagation()\n      instance.show()\n      instance._selectMenuItem(event)\n      return\n    }\n\n    if (instance._isShown()) { // else is escape and we check if it is shown\n      event.stopPropagation()\n      instance.hide()\n      getToggleButton.focus()\n    }\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_DATA_TOGGLE, Dropdown.dataApiKeydownHandler)\nEventHandler.on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_MENU, Dropdown.dataApiKeydownHandler)\nEventHandler.on(document, EVENT_CLICK_DATA_API, Dropdown.clearMenus)\nEventHandler.on(document, EVENT_KEYUP_DATA_API, Dropdown.clearMenus)\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  event.preventDefault()\n  Dropdown.getOrCreateInstance(this).toggle()\n})\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Dropdown)\n\nexport default Dropdown\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap util/backdrop.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport EventHandler from '../dom/event-handler.js'\nimport Config from './config.js'\nimport {\n  execute, executeAfterTransition, getElement, reflow\n} from './index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'backdrop'\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_SHOW = 'show'\nconst EVENT_MOUSEDOWN = `mousedown.bs.${NAME}`\n\nconst Default = {\n  className: 'modal-backdrop',\n  clickCallback: null,\n  isAnimated: false,\n  isVisible: true, // if false, we use the backdrop helper without adding any element to the dom\n  rootElement: 'body' // give the choice to place backdrop under different elements\n}\n\nconst DefaultType = {\n  className: 'string',\n  clickCallback: '(function|null)',\n  isAnimated: 'boolean',\n  isVisible: 'boolean',\n  rootElement: '(element|string)'\n}\n\n/**\n * Class definition\n */\n\nclass Backdrop extends Config {\n  constructor(config) {\n    super()\n    this._config = this._getConfig(config)\n    this._isAppended = false\n    this._element = null\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  show(callback) {\n    if (!this._config.isVisible) {\n      execute(callback)\n      return\n    }\n\n    this._append()\n\n    const element = this._getElement()\n    if (this._config.isAnimated) {\n      reflow(element)\n    }\n\n    element.classList.add(CLASS_NAME_SHOW)\n\n    this._emulateAnimation(() => {\n      execute(callback)\n    })\n  }\n\n  hide(callback) {\n    if (!this._config.isVisible) {\n      execute(callback)\n      return\n    }\n\n    this._getElement().classList.remove(CLASS_NAME_SHOW)\n\n    this._emulateAnimation(() => {\n      this.dispose()\n      execute(callback)\n    })\n  }\n\n  dispose() {\n    if (!this._isAppended) {\n      return\n    }\n\n    EventHandler.off(this._element, EVENT_MOUSEDOWN)\n\n    this._element.remove()\n    this._isAppended = false\n  }\n\n  // Private\n  _getElement() {\n    if (!this._element) {\n      const backdrop = document.createElement('div')\n      backdrop.className = this._config.className\n      if (this._config.isAnimated) {\n        backdrop.classList.add(CLASS_NAME_FADE)\n      }\n\n      this._element = backdrop\n    }\n\n    return this._element\n  }\n\n  _configAfterMerge(config) {\n    // use getElement() with the default \"body\" to get a fresh Element on each instantiation\n    config.rootElement = getElement(config.rootElement)\n    return config\n  }\n\n  _append() {\n    if (this._isAppended) {\n      return\n    }\n\n    const element = this._getElement()\n    this._config.rootElement.append(element)\n\n    EventHandler.on(element, EVENT_MOUSEDOWN, () => {\n      execute(this._config.clickCallback)\n    })\n\n    this._isAppended = true\n  }\n\n  _emulateAnimation(callback) {\n    executeAfterTransition(callback, this._getElement(), this._config.isAnimated)\n  }\n}\n\nexport default Backdrop\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap util/focustrap.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport EventHandler from '../dom/event-handler.js'\nimport SelectorEngine from '../dom/selector-engine.js'\nimport Config from './config.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'focustrap'\nconst DATA_KEY = 'bs.focustrap'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst EVENT_FOCUSIN = `focusin${EVENT_KEY}`\nconst EVENT_KEYDOWN_TAB = `keydown.tab${EVENT_KEY}`\n\nconst TAB_KEY = 'Tab'\nconst TAB_NAV_FORWARD = 'forward'\nconst TAB_NAV_BACKWARD = 'backward'\n\nconst Default = {\n  autofocus: true,\n  trapElement: null // The element to trap focus inside of\n}\n\nconst DefaultType = {\n  autofocus: 'boolean',\n  trapElement: 'element'\n}\n\n/**\n * Class definition\n */\n\nclass FocusTrap extends Config {\n  constructor(config) {\n    super()\n    this._config = this._getConfig(config)\n    this._isActive = false\n    this._lastTabNavDirection = null\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  activate() {\n    if (this._isActive) {\n      return\n    }\n\n    if (this._config.autofocus) {\n      this._config.trapElement.focus()\n    }\n\n    EventHandler.off(document, EVENT_KEY) // guard against infinite focus loop\n    EventHandler.on(document, EVENT_FOCUSIN, event => this._handleFocusin(event))\n    EventHandler.on(document, EVENT_KEYDOWN_TAB, event => this._handleKeydown(event))\n\n    this._isActive = true\n  }\n\n  deactivate() {\n    if (!this._isActive) {\n      return\n    }\n\n    this._isActive = false\n    EventHandler.off(document, EVENT_KEY)\n  }\n\n  // Private\n  _handleFocusin(event) {\n    const { trapElement } = this._config\n\n    if (event.target === document || event.target === trapElement || trapElement.contains(event.target)) {\n      return\n    }\n\n    const elements = SelectorEngine.focusableChildren(trapElement)\n\n    if (elements.length === 0) {\n      trapElement.focus()\n    } else if (this._lastTabNavDirection === TAB_NAV_BACKWARD) {\n      elements[elements.length - 1].focus()\n    } else {\n      elements[0].focus()\n    }\n  }\n\n  _handleKeydown(event) {\n    if (event.key !== TAB_KEY) {\n      return\n    }\n\n    this._lastTabNavDirection = event.shiftKey ? TAB_NAV_BACKWARD : TAB_NAV_FORWARD\n  }\n}\n\nexport default FocusTrap\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap util/scrollBar.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Manipulator from '../dom/manipulator.js'\nimport SelectorEngine from '../dom/selector-engine.js'\nimport { isElement } from './index.js'\n\n/**\n * Constants\n */\n\nconst SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top'\nconst SELECTOR_STICKY_CONTENT = '.sticky-top'\nconst PROPERTY_PADDING = 'padding-right'\nconst PROPERTY_MARGIN = 'margin-right'\n\n/**\n * Class definition\n */\n\nclass ScrollBarHelper {\n  constructor() {\n    this._element = document.body\n  }\n\n  // Public\n  getWidth() {\n    // https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth#usage_notes\n    const documentWidth = document.documentElement.clientWidth\n    return Math.abs(window.innerWidth - documentWidth)\n  }\n\n  hide() {\n    const width = this.getWidth()\n    this._disableOverFlow()\n    // give padding to element to balance the hidden scrollbar width\n    this._setElementAttributes(this._element, PROPERTY_PADDING, calculatedValue => calculatedValue + width)\n    // trick: We adjust positive paddingRight and negative marginRight to sticky-top elements to keep showing fullwidth\n    this._setElementAttributes(SELECTOR_FIXED_CONTENT, PROPERTY_PADDING, calculatedValue => calculatedValue + width)\n    this._setElementAttributes(SELECTOR_STICKY_CONTENT, PROPERTY_MARGIN, calculatedValue => calculatedValue - width)\n  }\n\n  reset() {\n    this._resetElementAttributes(this._element, 'overflow')\n    this._resetElementAttributes(this._element, PROPERTY_PADDING)\n    this._resetElementAttributes(SELECTOR_FIXED_CONTENT, PROPERTY_PADDING)\n    this._resetElementAttributes(SELECTOR_STICKY_CONTENT, PROPERTY_MARGIN)\n  }\n\n  isOverflowing() {\n    return this.getWidth() > 0\n  }\n\n  // Private\n  _disableOverFlow() {\n    this._saveInitialAttribute(this._element, 'overflow')\n    this._element.style.overflow = 'hidden'\n  }\n\n  _setElementAttributes(selector, styleProperty, callback) {\n    const scrollbarWidth = this.getWidth()\n    const manipulationCallBack = element => {\n      if (element !== this._element && window.innerWidth > element.clientWidth + scrollbarWidth) {\n        return\n      }\n\n      this._saveInitialAttribute(element, styleProperty)\n      const calculatedValue = window.getComputedStyle(element).getPropertyValue(styleProperty)\n      element.style.setProperty(styleProperty, `${callback(Number.parseFloat(calculatedValue))}px`)\n    }\n\n    this._applyManipulationCallback(selector, manipulationCallBack)\n  }\n\n  _saveInitialAttribute(element, styleProperty) {\n    const actualValue = element.style.getPropertyValue(styleProperty)\n    if (actualValue) {\n      Manipulator.setDataAttribute(element, styleProperty, actualValue)\n    }\n  }\n\n  _resetElementAttributes(selector, styleProperty) {\n    const manipulationCallBack = element => {\n      const value = Manipulator.getDataAttribute(element, styleProperty)\n      // We only want to remove the property if the value is `null`; the value can also be zero\n      if (value === null) {\n        element.style.removeProperty(styleProperty)\n        return\n      }\n\n      Manipulator.removeDataAttribute(element, styleProperty)\n      element.style.setProperty(styleProperty, value)\n    }\n\n    this._applyManipulationCallback(selector, manipulationCallBack)\n  }\n\n  _applyManipulationCallback(selector, callBack) {\n    if (isElement(selector)) {\n      callBack(selector)\n      return\n    }\n\n    for (const sel of SelectorEngine.find(selector, this._element)) {\n      callBack(sel)\n    }\n  }\n}\n\nexport default ScrollBarHelper\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap modal.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport BaseComponent from './base-component.js'\nimport EventHandler from './dom/event-handler.js'\nimport SelectorEngine from './dom/selector-engine.js'\nimport Backdrop from './util/backdrop.js'\nimport { enableDismissTrigger } from './util/component-functions.js'\nimport FocusTrap from './util/focustrap.js'\nimport {\n  defineJQueryPlugin, isRTL, isVisible, reflow\n} from './util/index.js'\nimport ScrollBarHelper from './util/scrollbar.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'modal'\nconst DATA_KEY = 'bs.modal'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\nconst ESCAPE_KEY = 'Escape'\n\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDE_PREVENTED = `hidePrevented${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\nconst EVENT_RESIZE = `resize${EVENT_KEY}`\nconst EVENT_CLICK_DISMISS = `click.dismiss${EVENT_KEY}`\nconst EVENT_MOUSEDOWN_DISMISS = `mousedown.dismiss${EVENT_KEY}`\nconst EVENT_KEYDOWN_DISMISS = `keydown.dismiss${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_OPEN = 'modal-open'\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_STATIC = 'modal-static'\n\nconst OPEN_SELECTOR = '.modal.show'\nconst SELECTOR_DIALOG = '.modal-dialog'\nconst SELECTOR_MODAL_BODY = '.modal-body'\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"modal\"]'\n\nconst Default = {\n  backdrop: true,\n  focus: true,\n  keyboard: true\n}\n\nconst DefaultType = {\n  backdrop: '(boolean|string)',\n  focus: 'boolean',\n  keyboard: 'boolean'\n}\n\n/**\n * Class definition\n */\n\nclass Modal extends BaseComponent {\n  constructor(element, config) {\n    super(element, config)\n\n    this._dialog = SelectorEngine.findOne(SELECTOR_DIALOG, this._element)\n    this._backdrop = this._initializeBackDrop()\n    this._focustrap = this._initializeFocusTrap()\n    this._isShown = false\n    this._isTransitioning = false\n    this._scrollBar = new ScrollBarHelper()\n\n    this._addEventListeners()\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  toggle(relatedTarget) {\n    return this._isShown ? this.hide() : this.show(relatedTarget)\n  }\n\n  show(relatedTarget) {\n    if (this._isShown || this._isTransitioning) {\n      return\n    }\n\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW, {\n      relatedTarget\n    })\n\n    if (showEvent.defaultPrevented) {\n      return\n    }\n\n    this._isShown = true\n    this._isTransitioning = true\n\n    this._scrollBar.hide()\n\n    document.body.classList.add(CLASS_NAME_OPEN)\n\n    this._adjustDialog()\n\n    this._backdrop.show(() => this._showElement(relatedTarget))\n  }\n\n  hide() {\n    if (!this._isShown || this._isTransitioning) {\n      return\n    }\n\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE)\n\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    this._isShown = false\n    this._isTransitioning = true\n    this._focustrap.deactivate()\n\n    this._element.classList.remove(CLASS_NAME_SHOW)\n\n    this._queueCallback(() => this._hideModal(), this._element, this._isAnimated())\n  }\n\n  dispose() {\n    EventHandler.off(window, EVENT_KEY)\n    EventHandler.off(this._dialog, EVENT_KEY)\n\n    this._backdrop.dispose()\n    this._focustrap.deactivate()\n\n    super.dispose()\n  }\n\n  handleUpdate() {\n    this._adjustDialog()\n  }\n\n  // Private\n  _initializeBackDrop() {\n    return new Backdrop({\n      isVisible: Boolean(this._config.backdrop), // 'static' option will be translated to true, and booleans will keep their value,\n      isAnimated: this._isAnimated()\n    })\n  }\n\n  _initializeFocusTrap() {\n    return new FocusTrap({\n      trapElement: this._element\n    })\n  }\n\n  _showElement(relatedTarget) {\n    // try to append dynamic modal\n    if (!document.body.contains(this._element)) {\n      document.body.append(this._element)\n    }\n\n    this._element.style.display = 'block'\n    this._element.removeAttribute('aria-hidden')\n    this._element.setAttribute('aria-modal', true)\n    this._element.setAttribute('role', 'dialog')\n    this._element.scrollTop = 0\n\n    const modalBody = SelectorEngine.findOne(SELECTOR_MODAL_BODY, this._dialog)\n    if (modalBody) {\n      modalBody.scrollTop = 0\n    }\n\n    reflow(this._element)\n\n    this._element.classList.add(CLASS_NAME_SHOW)\n\n    const transitionComplete = () => {\n      if (this._config.focus) {\n        this._focustrap.activate()\n      }\n\n      this._isTransitioning = false\n      EventHandler.trigger(this._element, EVENT_SHOWN, {\n        relatedTarget\n      })\n    }\n\n    this._queueCallback(transitionComplete, this._dialog, this._isAnimated())\n  }\n\n  _addEventListeners() {\n    EventHandler.on(this._element, EVENT_KEYDOWN_DISMISS, event => {\n      if (event.key !== ESCAPE_KEY) {\n        return\n      }\n\n      if (this._config.keyboard) {\n        this.hide()\n        return\n      }\n\n      this._triggerBackdropTransition()\n    })\n\n    EventHandler.on(window, EVENT_RESIZE, () => {\n      if (this._isShown && !this._isTransitioning) {\n        this._adjustDialog()\n      }\n    })\n\n    EventHandler.on(this._element, EVENT_MOUSEDOWN_DISMISS, event => {\n      // a bad trick to segregate clicks that may start inside dialog but end outside, and avoid listen to scrollbar clicks\n      EventHandler.one(this._element, EVENT_CLICK_DISMISS, event2 => {\n        if (this._element !== event.target || this._element !== event2.target) {\n          return\n        }\n\n        if (this._config.backdrop === 'static') {\n          this._triggerBackdropTransition()\n          return\n        }\n\n        if (this._config.backdrop) {\n          this.hide()\n        }\n      })\n    })\n  }\n\n  _hideModal() {\n    this._element.style.display = 'none'\n    this._element.setAttribute('aria-hidden', true)\n    this._element.removeAttribute('aria-modal')\n    this._element.removeAttribute('role')\n    this._isTransitioning = false\n\n    this._backdrop.hide(() => {\n      document.body.classList.remove(CLASS_NAME_OPEN)\n      this._resetAdjustments()\n      this._scrollBar.reset()\n      EventHandler.trigger(this._element, EVENT_HIDDEN)\n    })\n  }\n\n  _isAnimated() {\n    return this._element.classList.contains(CLASS_NAME_FADE)\n  }\n\n  _triggerBackdropTransition() {\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE_PREVENTED)\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight\n    const initialOverflowY = this._element.style.overflowY\n    // return if the following background transition hasn't yet completed\n    if (initialOverflowY === 'hidden' || this._element.classList.contains(CLASS_NAME_STATIC)) {\n      return\n    }\n\n    if (!isModalOverflowing) {\n      this._element.style.overflowY = 'hidden'\n    }\n\n    this._element.classList.add(CLASS_NAME_STATIC)\n    this._queueCallback(() => {\n      this._element.classList.remove(CLASS_NAME_STATIC)\n      this._queueCallback(() => {\n        this._element.style.overflowY = initialOverflowY\n      }, this._dialog)\n    }, this._dialog)\n\n    this._element.focus()\n  }\n\n  /**\n   * The following methods are used to handle overflowing modals\n   */\n\n  _adjustDialog() {\n    const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight\n    const scrollbarWidth = this._scrollBar.getWidth()\n    const isBodyOverflowing = scrollbarWidth > 0\n\n    if (isBodyOverflowing && !isModalOverflowing) {\n      const property = isRTL() ? 'paddingLeft' : 'paddingRight'\n      this._element.style[property] = `${scrollbarWidth}px`\n    }\n\n    if (!isBodyOverflowing && isModalOverflowing) {\n      const property = isRTL() ? 'paddingRight' : 'paddingLeft'\n      this._element.style[property] = `${scrollbarWidth}px`\n    }\n  }\n\n  _resetAdjustments() {\n    this._element.style.paddingLeft = ''\n    this._element.style.paddingRight = ''\n  }\n\n  // Static\n  static jQueryInterface(config, relatedTarget) {\n    return this.each(function () {\n      const data = Modal.getOrCreateInstance(this, config)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config](relatedTarget)\n    })\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  const target = SelectorEngine.getElementFromSelector(this)\n\n  if (['A', 'AREA'].includes(this.tagName)) {\n    event.preventDefault()\n  }\n\n  EventHandler.one(target, EVENT_SHOW, showEvent => {\n    if (showEvent.defaultPrevented) {\n      // only register focus restorer if modal will actually get shown\n      return\n    }\n\n    EventHandler.one(target, EVENT_HIDDEN, () => {\n      if (isVisible(this)) {\n        this.focus()\n      }\n    })\n  })\n\n  // avoid conflict when clicking modal toggler while another one is open\n  const alreadyOpen = SelectorEngine.findOne(OPEN_SELECTOR)\n  if (alreadyOpen) {\n    Modal.getInstance(alreadyOpen).hide()\n  }\n\n  const data = Modal.getOrCreateInstance(target)\n\n  data.toggle(this)\n})\n\nenableDismissTrigger(Modal)\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Modal)\n\nexport default Modal\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap offcanvas.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport BaseComponent from './base-component.js'\nimport EventHandler from './dom/event-handler.js'\nimport SelectorEngine from './dom/selector-engine.js'\nimport Backdrop from './util/backdrop.js'\nimport { enableDismissTrigger } from './util/component-functions.js'\nimport FocusTrap from './util/focustrap.js'\nimport {\n  defineJQueryPlugin,\n  isDisabled,\n  isVisible\n} from './util/index.js'\nimport ScrollBarHelper from './util/scrollbar.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'offcanvas'\nconst DATA_KEY = 'bs.offcanvas'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`\nconst ESCAPE_KEY = 'Escape'\n\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_SHOWING = 'showing'\nconst CLASS_NAME_HIDING = 'hiding'\nconst CLASS_NAME_BACKDROP = 'offcanvas-backdrop'\nconst OPEN_SELECTOR = '.offcanvas.show'\n\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDE_PREVENTED = `hidePrevented${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_RESIZE = `resize${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_KEYDOWN_DISMISS = `keydown.dismiss${EVENT_KEY}`\n\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"offcanvas\"]'\n\nconst Default = {\n  backdrop: true,\n  keyboard: true,\n  scroll: false\n}\n\nconst DefaultType = {\n  backdrop: '(boolean|string)',\n  keyboard: 'boolean',\n  scroll: 'boolean'\n}\n\n/**\n * Class definition\n */\n\nclass Offcanvas extends BaseComponent {\n  constructor(element, config) {\n    super(element, config)\n\n    this._isShown = false\n    this._backdrop = this._initializeBackDrop()\n    this._focustrap = this._initializeFocusTrap()\n    this._addEventListeners()\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  toggle(relatedTarget) {\n    return this._isShown ? this.hide() : this.show(relatedTarget)\n  }\n\n  show(relatedTarget) {\n    if (this._isShown) {\n      return\n    }\n\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW, { relatedTarget })\n\n    if (showEvent.defaultPrevented) {\n      return\n    }\n\n    this._isShown = true\n    this._backdrop.show()\n\n    if (!this._config.scroll) {\n      new ScrollBarHelper().hide()\n    }\n\n    this._element.setAttribute('aria-modal', true)\n    this._element.setAttribute('role', 'dialog')\n    this._element.classList.add(CLASS_NAME_SHOWING)\n\n    const completeCallBack = () => {\n      if (!this._config.scroll || this._config.backdrop) {\n        this._focustrap.activate()\n      }\n\n      this._element.classList.add(CLASS_NAME_SHOW)\n      this._element.classList.remove(CLASS_NAME_SHOWING)\n      EventHandler.trigger(this._element, EVENT_SHOWN, { relatedTarget })\n    }\n\n    this._queueCallback(completeCallBack, this._element, true)\n  }\n\n  hide() {\n    if (!this._isShown) {\n      return\n    }\n\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE)\n\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    this._focustrap.deactivate()\n    this._element.blur()\n    this._isShown = false\n    this._element.classList.add(CLASS_NAME_HIDING)\n    this._backdrop.hide()\n\n    const completeCallback = () => {\n      this._element.classList.remove(CLASS_NAME_SHOW, CLASS_NAME_HIDING)\n      this._element.removeAttribute('aria-modal')\n      this._element.removeAttribute('role')\n\n      if (!this._config.scroll) {\n        new ScrollBarHelper().reset()\n      }\n\n      EventHandler.trigger(this._element, EVENT_HIDDEN)\n    }\n\n    this._queueCallback(completeCallback, this._element, true)\n  }\n\n  dispose() {\n    this._backdrop.dispose()\n    this._focustrap.deactivate()\n    super.dispose()\n  }\n\n  // Private\n  _initializeBackDrop() {\n    const clickCallback = () => {\n      if (this._config.backdrop === 'static') {\n        EventHandler.trigger(this._element, EVENT_HIDE_PREVENTED)\n        return\n      }\n\n      this.hide()\n    }\n\n    // 'static' option will be translated to true, and booleans will keep their value\n    const isVisible = Boolean(this._config.backdrop)\n\n    return new Backdrop({\n      className: CLASS_NAME_BACKDROP,\n      isVisible,\n      isAnimated: true,\n      rootElement: this._element.parentNode,\n      clickCallback: isVisible ? clickCallback : null\n    })\n  }\n\n  _initializeFocusTrap() {\n    return new FocusTrap({\n      trapElement: this._element\n    })\n  }\n\n  _addEventListeners() {\n    EventHandler.on(this._element, EVENT_KEYDOWN_DISMISS, event => {\n      if (event.key !== ESCAPE_KEY) {\n        return\n      }\n\n      if (this._config.keyboard) {\n        this.hide()\n        return\n      }\n\n      EventHandler.trigger(this._element, EVENT_HIDE_PREVENTED)\n    })\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Offcanvas.getOrCreateInstance(this, config)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config](this)\n    })\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  const target = SelectorEngine.getElementFromSelector(this)\n\n  if (['A', 'AREA'].includes(this.tagName)) {\n    event.preventDefault()\n  }\n\n  if (isDisabled(this)) {\n    return\n  }\n\n  EventHandler.one(target, EVENT_HIDDEN, () => {\n    // focus on trigger when it is closed\n    if (isVisible(this)) {\n      this.focus()\n    }\n  })\n\n  // avoid conflict when clicking a toggler of an offcanvas, while another is open\n  const alreadyOpen = SelectorEngine.findOne(OPEN_SELECTOR)\n  if (alreadyOpen && alreadyOpen !== target) {\n    Offcanvas.getInstance(alreadyOpen).hide()\n  }\n\n  const data = Offcanvas.getOrCreateInstance(target)\n  data.toggle(this)\n})\n\nEventHandler.on(window, EVENT_LOAD_DATA_API, () => {\n  for (const selector of SelectorEngine.find(OPEN_SELECTOR)) {\n    Offcanvas.getOrCreateInstance(selector).show()\n  }\n})\n\nEventHandler.on(window, EVENT_RESIZE, () => {\n  for (const element of SelectorEngine.find('[aria-modal][class*=show][class*=offcanvas-]')) {\n    if (getComputedStyle(element).position !== 'fixed') {\n      Offcanvas.getOrCreateInstance(element).hide()\n    }\n  }\n})\n\nenableDismissTrigger(Offcanvas)\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Offcanvas)\n\nexport default Offcanvas\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap util/sanitizer.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n// js-docs-start allow-list\nconst ARIA_ATTRIBUTE_PATTERN = /^aria-[\\w-]*$/i\n\nexport const DefaultAllowlist = {\n  // Global attributes allowed on any supplied element below.\n  '*': ['class', 'dir', 'id', 'lang', 'role', ARIA_ATTRIBUTE_PATTERN],\n  a: ['target', 'href', 'title', 'rel'],\n  area: [],\n  b: [],\n  br: [],\n  col: [],\n  code: [],\n  dd: [],\n  div: [],\n  dl: [],\n  dt: [],\n  em: [],\n  hr: [],\n  h1: [],\n  h2: [],\n  h3: [],\n  h4: [],\n  h5: [],\n  h6: [],\n  i: [],\n  img: ['src', 'srcset', 'alt', 'title', 'width', 'height'],\n  li: [],\n  ol: [],\n  p: [],\n  pre: [],\n  s: [],\n  small: [],\n  span: [],\n  sub: [],\n  sup: [],\n  strong: [],\n  u: [],\n  ul: []\n}\n// js-docs-end allow-list\n\nconst uriAttributes = new Set([\n  'background',\n  'cite',\n  'href',\n  'itemtype',\n  'longdesc',\n  'poster',\n  'src',\n  'xlink:href'\n])\n\n/**\n * A pattern that recognizes URLs that are safe wrt. XSS in URL navigation\n * contexts.\n *\n * Shout-out to Angular https://github.com/angular/angular/blob/15.2.8/packages/core/src/sanitization/url_sanitizer.ts#L38\n */\nconst SAFE_URL_PATTERN = /^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:/?#]*(?:[/?#]|$))/i\n\nconst allowedAttribute = (attribute, allowedAttributeList) => {\n  const attributeName = attribute.nodeName.toLowerCase()\n\n  if (allowedAttributeList.includes(attributeName)) {\n    if (uriAttributes.has(attributeName)) {\n      return Boolean(SAFE_URL_PATTERN.test(attribute.nodeValue))\n    }\n\n    return true\n  }\n\n  // Check if a regular expression validates the attribute.\n  return allowedAttributeList.filter(attributeRegex => attributeRegex instanceof RegExp)\n    .some(regex => regex.test(attributeName))\n}\n\nexport function sanitizeHtml(unsafeHtml, allowList, sanitizeFunction) {\n  if (!unsafeHtml.length) {\n    return unsafeHtml\n  }\n\n  if (sanitizeFunction && typeof sanitizeFunction === 'function') {\n    return sanitizeFunction(unsafeHtml)\n  }\n\n  const domParser = new window.DOMParser()\n  const createdDocument = domParser.parseFromString(unsafeHtml, 'text/html')\n  const elements = [].concat(...createdDocument.body.querySelectorAll('*'))\n\n  for (const element of elements) {\n    const elementName = element.nodeName.toLowerCase()\n\n    if (!Object.keys(allowList).includes(elementName)) {\n      element.remove()\n      continue\n    }\n\n    const attributeList = [].concat(...element.attributes)\n    const allowedAttributes = [].concat(allowList['*'] || [], allowList[elementName] || [])\n\n    for (const attribute of attributeList) {\n      if (!allowedAttribute(attribute, allowedAttributes)) {\n        element.removeAttribute(attribute.nodeName)\n      }\n    }\n  }\n\n  return createdDocument.body.innerHTML\n}\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap util/template-factory.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport SelectorEngine from '../dom/selector-engine.js'\nimport Config from './config.js'\nimport { DefaultAllowlist, sanitizeHtml } from './sanitizer.js'\nimport { execute, getElement, isElement } from './index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'TemplateFactory'\n\nconst Default = {\n  allowList: DefaultAllowlist,\n  content: {}, // { selector : text ,  selector2 : text2 , }\n  extraClass: '',\n  html: false,\n  sanitize: true,\n  sanitizeFn: null,\n  template: '<div></div>'\n}\n\nconst DefaultType = {\n  allowList: 'object',\n  content: 'object',\n  extraClass: '(string|function)',\n  html: 'boolean',\n  sanitize: 'boolean',\n  sanitizeFn: '(null|function)',\n  template: 'string'\n}\n\nconst DefaultContentType = {\n  entry: '(string|element|function|null)',\n  selector: '(string|element)'\n}\n\n/**\n * Class definition\n */\n\nclass TemplateFactory extends Config {\n  constructor(config) {\n    super()\n    this._config = this._getConfig(config)\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  getContent() {\n    return Object.values(this._config.content)\n      .map(config => this._resolvePossibleFunction(config))\n      .filter(Boolean)\n  }\n\n  hasContent() {\n    return this.getContent().length > 0\n  }\n\n  changeContent(content) {\n    this._checkContent(content)\n    this._config.content = { ...this._config.content, ...content }\n    return this\n  }\n\n  toHtml() {\n    const templateWrapper = document.createElement('div')\n    templateWrapper.innerHTML = this._maybeSanitize(this._config.template)\n\n    for (const [selector, text] of Object.entries(this._config.content)) {\n      this._setContent(templateWrapper, text, selector)\n    }\n\n    const template = templateWrapper.children[0]\n    const extraClass = this._resolvePossibleFunction(this._config.extraClass)\n\n    if (extraClass) {\n      template.classList.add(...extraClass.split(' '))\n    }\n\n    return template\n  }\n\n  // Private\n  _typeCheckConfig(config) {\n    super._typeCheckConfig(config)\n    this._checkContent(config.content)\n  }\n\n  _checkContent(arg) {\n    for (const [selector, content] of Object.entries(arg)) {\n      super._typeCheckConfig({ selector, entry: content }, DefaultContentType)\n    }\n  }\n\n  _setContent(template, content, selector) {\n    const templateElement = SelectorEngine.findOne(selector, template)\n\n    if (!templateElement) {\n      return\n    }\n\n    content = this._resolvePossibleFunction(content)\n\n    if (!content) {\n      templateElement.remove()\n      return\n    }\n\n    if (isElement(content)) {\n      this._putElementInTemplate(getElement(content), templateElement)\n      return\n    }\n\n    if (this._config.html) {\n      templateElement.innerHTML = this._maybeSanitize(content)\n      return\n    }\n\n    templateElement.textContent = content\n  }\n\n  _maybeSanitize(arg) {\n    return this._config.sanitize ? sanitizeHtml(arg, this._config.allowList, this._config.sanitizeFn) : arg\n  }\n\n  _resolvePossibleFunction(arg) {\n    return execute(arg, [undefined, this])\n  }\n\n  _putElementInTemplate(element, templateElement) {\n    if (this._config.html) {\n      templateElement.innerHTML = ''\n      templateElement.append(element)\n      return\n    }\n\n    templateElement.textContent = element.textContent\n  }\n}\n\nexport default TemplateFactory\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap tooltip.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport * as Popper from '@popperjs/core'\nimport BaseComponent from './base-component.js'\nimport EventHandler from './dom/event-handler.js'\nimport Manipulator from './dom/manipulator.js'\nimport {\n  defineJQueryPlugin, execute, findShadowRoot, getElement, getUID, isRTL, noop\n} from './util/index.js'\nimport { DefaultAllowlist } from './util/sanitizer.js'\nimport TemplateFactory from './util/template-factory.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'tooltip'\nconst DISALLOWED_ATTRIBUTES = new Set(['sanitize', 'allowList', 'sanitizeFn'])\n\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_MODAL = 'modal'\nconst CLASS_NAME_SHOW = 'show'\n\nconst SELECTOR_TOOLTIP_INNER = '.tooltip-inner'\nconst SELECTOR_MODAL = `.${CLASS_NAME_MODAL}`\n\nconst EVENT_MODAL_HIDE = 'hide.bs.modal'\n\nconst TRIGGER_HOVER = 'hover'\nconst TRIGGER_FOCUS = 'focus'\nconst TRIGGER_CLICK = 'click'\nconst TRIGGER_MANUAL = 'manual'\n\nconst EVENT_HIDE = 'hide'\nconst EVENT_HIDDEN = 'hidden'\nconst EVENT_SHOW = 'show'\nconst EVENT_SHOWN = 'shown'\nconst EVENT_INSERTED = 'inserted'\nconst EVENT_CLICK = 'click'\nconst EVENT_FOCUSIN = 'focusin'\nconst EVENT_FOCUSOUT = 'focusout'\nconst EVENT_MOUSEENTER = 'mouseenter'\nconst EVENT_MOUSELEAVE = 'mouseleave'\n\nconst AttachmentMap = {\n  AUTO: 'auto',\n  TOP: 'top',\n  RIGHT: isRTL() ? 'left' : 'right',\n  BOTTOM: 'bottom',\n  LEFT: isRTL() ? 'right' : 'left'\n}\n\nconst Default = {\n  allowList: DefaultAllowlist,\n  animation: true,\n  boundary: 'clippingParents',\n  container: false,\n  customClass: '',\n  delay: 0,\n  fallbackPlacements: ['top', 'right', 'bottom', 'left'],\n  html: false,\n  offset: [0, 6],\n  placement: 'top',\n  popperConfig: null,\n  sanitize: true,\n  sanitizeFn: null,\n  selector: false,\n  template: '<div class=\"tooltip\" role=\"tooltip\">' +\n            '<div class=\"tooltip-arrow\"></div>' +\n            '<div class=\"tooltip-inner\"></div>' +\n            '</div>',\n  title: '',\n  trigger: 'hover focus'\n}\n\nconst DefaultType = {\n  allowList: 'object',\n  animation: 'boolean',\n  boundary: '(string|element)',\n  container: '(string|element|boolean)',\n  customClass: '(string|function)',\n  delay: '(number|object)',\n  fallbackPlacements: 'array',\n  html: 'boolean',\n  offset: '(array|string|function)',\n  placement: '(string|function)',\n  popperConfig: '(null|object|function)',\n  sanitize: 'boolean',\n  sanitizeFn: '(null|function)',\n  selector: '(string|boolean)',\n  template: 'string',\n  title: '(string|element|function)',\n  trigger: 'string'\n}\n\n/**\n * Class definition\n */\n\nclass Tooltip extends BaseComponent {\n  constructor(element, config) {\n    if (typeof Popper === 'undefined') {\n      throw new TypeError('Bootstrap\\'s tooltips require Popper (https://popper.js.org/docs/v2/)')\n    }\n\n    super(element, config)\n\n    // Private\n    this._isEnabled = true\n    this._timeout = 0\n    this._isHovered = null\n    this._activeTrigger = {}\n    this._popper = null\n    this._templateFactory = null\n    this._newContent = null\n\n    // Protected\n    this.tip = null\n\n    this._setListeners()\n\n    if (!this._config.selector) {\n      this._fixTitle()\n    }\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  enable() {\n    this._isEnabled = true\n  }\n\n  disable() {\n    this._isEnabled = false\n  }\n\n  toggleEnabled() {\n    this._isEnabled = !this._isEnabled\n  }\n\n  toggle() {\n    if (!this._isEnabled) {\n      return\n    }\n\n    if (this._isShown()) {\n      this._leave()\n      return\n    }\n\n    this._enter()\n  }\n\n  dispose() {\n    clearTimeout(this._timeout)\n\n    EventHandler.off(this._element.closest(SELECTOR_MODAL), EVENT_MODAL_HIDE, this._hideModalHandler)\n\n    if (this._element.getAttribute('data-bs-original-title')) {\n      this._element.setAttribute('title', this._element.getAttribute('data-bs-original-title'))\n    }\n\n    this._disposePopper()\n    super.dispose()\n  }\n\n  show() {\n    if (this._element.style.display === 'none') {\n      throw new Error('Please use show on visible elements')\n    }\n\n    if (!(this._isWithContent() && this._isEnabled)) {\n      return\n    }\n\n    const showEvent = EventHandler.trigger(this._element, this.constructor.eventName(EVENT_SHOW))\n    const shadowRoot = findShadowRoot(this._element)\n    const isInTheDom = (shadowRoot || this._element.ownerDocument.documentElement).contains(this._element)\n\n    if (showEvent.defaultPrevented || !isInTheDom) {\n      return\n    }\n\n    // TODO: v6 remove this or make it optional\n    this._disposePopper()\n\n    const tip = this._getTipElement()\n\n    this._element.setAttribute('aria-describedby', tip.getAttribute('id'))\n\n    const { container } = this._config\n\n    if (!this._element.ownerDocument.documentElement.contains(this.tip)) {\n      container.append(tip)\n      EventHandler.trigger(this._element, this.constructor.eventName(EVENT_INSERTED))\n    }\n\n    this._popper = this._createPopper(tip)\n\n    tip.classList.add(CLASS_NAME_SHOW)\n\n    // If this is a touch-enabled device we add extra\n    // empty mouseover listeners to the body's immediate children;\n    // only needed because of broken event delegation on iOS\n    // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n    if ('ontouchstart' in document.documentElement) {\n      for (const element of [].concat(...document.body.children)) {\n        EventHandler.on(element, 'mouseover', noop)\n      }\n    }\n\n    const complete = () => {\n      EventHandler.trigger(this._element, this.constructor.eventName(EVENT_SHOWN))\n\n      if (this._isHovered === false) {\n        this._leave()\n      }\n\n      this._isHovered = false\n    }\n\n    this._queueCallback(complete, this.tip, this._isAnimated())\n  }\n\n  hide() {\n    if (!this._isShown()) {\n      return\n    }\n\n    const hideEvent = EventHandler.trigger(this._element, this.constructor.eventName(EVENT_HIDE))\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    const tip = this._getTipElement()\n    tip.classList.remove(CLASS_NAME_SHOW)\n\n    // If this is a touch-enabled device we remove the extra\n    // empty mouseover listeners we added for iOS support\n    if ('ontouchstart' in document.documentElement) {\n      for (const element of [].concat(...document.body.children)) {\n        EventHandler.off(element, 'mouseover', noop)\n      }\n    }\n\n    this._activeTrigger[TRIGGER_CLICK] = false\n    this._activeTrigger[TRIGGER_FOCUS] = false\n    this._activeTrigger[TRIGGER_HOVER] = false\n    this._isHovered = null // it is a trick to support manual triggering\n\n    const complete = () => {\n      if (this._isWithActiveTrigger()) {\n        return\n      }\n\n      if (!this._isHovered) {\n        this._disposePopper()\n      }\n\n      this._element.removeAttribute('aria-describedby')\n      EventHandler.trigger(this._element, this.constructor.eventName(EVENT_HIDDEN))\n    }\n\n    this._queueCallback(complete, this.tip, this._isAnimated())\n  }\n\n  update() {\n    if (this._popper) {\n      this._popper.update()\n    }\n  }\n\n  // Protected\n  _isWithContent() {\n    return Boolean(this._getTitle())\n  }\n\n  _getTipElement() {\n    if (!this.tip) {\n      this.tip = this._createTipElement(this._newContent || this._getContentForTemplate())\n    }\n\n    return this.tip\n  }\n\n  _createTipElement(content) {\n    const tip = this._getTemplateFactory(content).toHtml()\n\n    // TODO: remove this check in v6\n    if (!tip) {\n      return null\n    }\n\n    tip.classList.remove(CLASS_NAME_FADE, CLASS_NAME_SHOW)\n    // TODO: v6 the following can be achieved with CSS only\n    tip.classList.add(`bs-${this.constructor.NAME}-auto`)\n\n    const tipId = getUID(this.constructor.NAME).toString()\n\n    tip.setAttribute('id', tipId)\n\n    if (this._isAnimated()) {\n      tip.classList.add(CLASS_NAME_FADE)\n    }\n\n    return tip\n  }\n\n  setContent(content) {\n    this._newContent = content\n    if (this._isShown()) {\n      this._disposePopper()\n      this.show()\n    }\n  }\n\n  _getTemplateFactory(content) {\n    if (this._templateFactory) {\n      this._templateFactory.changeContent(content)\n    } else {\n      this._templateFactory = new TemplateFactory({\n        ...this._config,\n        // the `content` var has to be after `this._config`\n        // to override config.content in case of popover\n        content,\n        extraClass: this._resolvePossibleFunction(this._config.customClass)\n      })\n    }\n\n    return this._templateFactory\n  }\n\n  _getContentForTemplate() {\n    return {\n      [SELECTOR_TOOLTIP_INNER]: this._getTitle()\n    }\n  }\n\n  _getTitle() {\n    return this._resolvePossibleFunction(this._config.title) || this._element.getAttribute('data-bs-original-title')\n  }\n\n  // Private\n  _initializeOnDelegatedTarget(event) {\n    return this.constructor.getOrCreateInstance(event.delegateTarget, this._getDelegateConfig())\n  }\n\n  _isAnimated() {\n    return this._config.animation || (this.tip && this.tip.classList.contains(CLASS_NAME_FADE))\n  }\n\n  _isShown() {\n    return this.tip && this.tip.classList.contains(CLASS_NAME_SHOW)\n  }\n\n  _createPopper(tip) {\n    const placement = execute(this._config.placement, [this, tip, this._element])\n    const attachment = AttachmentMap[placement.toUpperCase()]\n    return Popper.createPopper(this._element, tip, this._getPopperConfig(attachment))\n  }\n\n  _getOffset() {\n    const { offset } = this._config\n\n    if (typeof offset === 'string') {\n      return offset.split(',').map(value => Number.parseInt(value, 10))\n    }\n\n    if (typeof offset === 'function') {\n      return popperData => offset(popperData, this._element)\n    }\n\n    return offset\n  }\n\n  _resolvePossibleFunction(arg) {\n    return execute(arg, [this._element, this._element])\n  }\n\n  _getPopperConfig(attachment) {\n    const defaultBsPopperConfig = {\n      placement: attachment,\n      modifiers: [\n        {\n          name: 'flip',\n          options: {\n            fallbackPlacements: this._config.fallbackPlacements\n          }\n        },\n        {\n          name: 'offset',\n          options: {\n            offset: this._getOffset()\n          }\n        },\n        {\n          name: 'preventOverflow',\n          options: {\n            boundary: this._config.boundary\n          }\n        },\n        {\n          name: 'arrow',\n          options: {\n            element: `.${this.constructor.NAME}-arrow`\n          }\n        },\n        {\n          name: 'preSetPlacement',\n          enabled: true,\n          phase: 'beforeMain',\n          fn: data => {\n            // Pre-set Popper's placement attribute in order to read the arrow sizes properly.\n            // Otherwise, Popper mixes up the width and height dimensions since the initial arrow style is for top placement\n            this._getTipElement().setAttribute('data-popper-placement', data.state.placement)\n          }\n        }\n      ]\n    }\n\n    return {\n      ...defaultBsPopperConfig,\n      ...execute(this._config.popperConfig, [undefined, defaultBsPopperConfig])\n    }\n  }\n\n  _setListeners() {\n    const triggers = this._config.trigger.split(' ')\n\n    for (const trigger of triggers) {\n      if (trigger === 'click') {\n        EventHandler.on(this._element, this.constructor.eventName(EVENT_CLICK), this._config.selector, event => {\n          const context = this._initializeOnDelegatedTarget(event)\n          context._activeTrigger[TRIGGER_CLICK] = !(context._isShown() && context._activeTrigger[TRIGGER_CLICK])\n          context.toggle()\n        })\n      } else if (trigger !== TRIGGER_MANUAL) {\n        const eventIn = trigger === TRIGGER_HOVER ?\n          this.constructor.eventName(EVENT_MOUSEENTER) :\n          this.constructor.eventName(EVENT_FOCUSIN)\n        const eventOut = trigger === TRIGGER_HOVER ?\n          this.constructor.eventName(EVENT_MOUSELEAVE) :\n          this.constructor.eventName(EVENT_FOCUSOUT)\n\n        EventHandler.on(this._element, eventIn, this._config.selector, event => {\n          const context = this._initializeOnDelegatedTarget(event)\n          context._activeTrigger[event.type === 'focusin' ? TRIGGER_FOCUS : TRIGGER_HOVER] = true\n          context._enter()\n        })\n        EventHandler.on(this._element, eventOut, this._config.selector, event => {\n          const context = this._initializeOnDelegatedTarget(event)\n          context._activeTrigger[event.type === 'focusout' ? TRIGGER_FOCUS : TRIGGER_HOVER] =\n            context._element.contains(event.relatedTarget)\n\n          context._leave()\n        })\n      }\n    }\n\n    this._hideModalHandler = () => {\n      if (this._element) {\n        this.hide()\n      }\n    }\n\n    EventHandler.on(this._element.closest(SELECTOR_MODAL), EVENT_MODAL_HIDE, this._hideModalHandler)\n  }\n\n  _fixTitle() {\n    const title = this._element.getAttribute('title')\n\n    if (!title) {\n      return\n    }\n\n    if (!this._element.getAttribute('aria-label') && !this._element.textContent.trim()) {\n      this._element.setAttribute('aria-label', title)\n    }\n\n    this._element.setAttribute('data-bs-original-title', title) // DO NOT USE IT. Is only for backwards compatibility\n    this._element.removeAttribute('title')\n  }\n\n  _enter() {\n    if (this._isShown() || this._isHovered) {\n      this._isHovered = true\n      return\n    }\n\n    this._isHovered = true\n\n    this._setTimeout(() => {\n      if (this._isHovered) {\n        this.show()\n      }\n    }, this._config.delay.show)\n  }\n\n  _leave() {\n    if (this._isWithActiveTrigger()) {\n      return\n    }\n\n    this._isHovered = false\n\n    this._setTimeout(() => {\n      if (!this._isHovered) {\n        this.hide()\n      }\n    }, this._config.delay.hide)\n  }\n\n  _setTimeout(handler, timeout) {\n    clearTimeout(this._timeout)\n    this._timeout = setTimeout(handler, timeout)\n  }\n\n  _isWithActiveTrigger() {\n    return Object.values(this._activeTrigger).includes(true)\n  }\n\n  _getConfig(config) {\n    const dataAttributes = Manipulator.getDataAttributes(this._element)\n\n    for (const dataAttribute of Object.keys(dataAttributes)) {\n      if (DISALLOWED_ATTRIBUTES.has(dataAttribute)) {\n        delete dataAttributes[dataAttribute]\n      }\n    }\n\n    config = {\n      ...dataAttributes,\n      ...(typeof config === 'object' && config ? config : {})\n    }\n    config = this._mergeConfigObj(config)\n    config = this._configAfterMerge(config)\n    this._typeCheckConfig(config)\n    return config\n  }\n\n  _configAfterMerge(config) {\n    config.container = config.container === false ? document.body : getElement(config.container)\n\n    if (typeof config.delay === 'number') {\n      config.delay = {\n        show: config.delay,\n        hide: config.delay\n      }\n    }\n\n    if (typeof config.title === 'number') {\n      config.title = config.title.toString()\n    }\n\n    if (typeof config.content === 'number') {\n      config.content = config.content.toString()\n    }\n\n    return config\n  }\n\n  _getDelegateConfig() {\n    const config = {}\n\n    for (const [key, value] of Object.entries(this._config)) {\n      if (this.constructor.Default[key] !== value) {\n        config[key] = value\n      }\n    }\n\n    config.selector = false\n    config.trigger = 'manual'\n\n    // In the future can be replaced with:\n    // const keysWithDifferentValues = Object.entries(this._config).filter(entry => this.constructor.Default[entry[0]] !== this._config[entry[0]])\n    // `Object.fromEntries(keysWithDifferentValues)`\n    return config\n  }\n\n  _disposePopper() {\n    if (this._popper) {\n      this._popper.destroy()\n      this._popper = null\n    }\n\n    if (this.tip) {\n      this.tip.remove()\n      this.tip = null\n    }\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Tooltip.getOrCreateInstance(this, config)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config]()\n    })\n  }\n}\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Tooltip)\n\nexport default Tooltip\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap popover.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Tooltip from './tooltip.js'\nimport { defineJQueryPlugin } from './util/index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'popover'\n\nconst SELECTOR_TITLE = '.popover-header'\nconst SELECTOR_CONTENT = '.popover-body'\n\nconst Default = {\n  ...Tooltip.Default,\n  content: '',\n  offset: [0, 8],\n  placement: 'right',\n  template: '<div class=\"popover\" role=\"tooltip\">' +\n    '<div class=\"popover-arrow\"></div>' +\n    '<h3 class=\"popover-header\"></h3>' +\n    '<div class=\"popover-body\"></div>' +\n    '</div>',\n  trigger: 'click'\n}\n\nconst DefaultType = {\n  ...Tooltip.DefaultType,\n  content: '(null|string|element|function)'\n}\n\n/**\n * Class definition\n */\n\nclass Popover extends Tooltip {\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Overrides\n  _isWithContent() {\n    return this._getTitle() || this._getContent()\n  }\n\n  // Private\n  _getContentForTemplate() {\n    return {\n      [SELECTOR_TITLE]: this._getTitle(),\n      [SELECTOR_CONTENT]: this._getContent()\n    }\n  }\n\n  _getContent() {\n    return this._resolvePossibleFunction(this._config.content)\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Popover.getOrCreateInstance(this, config)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config]()\n    })\n  }\n}\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Popover)\n\nexport default Popover\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap scrollspy.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport BaseComponent from './base-component.js'\nimport EventHandler from './dom/event-handler.js'\nimport SelectorEngine from './dom/selector-engine.js'\nimport {\n  defineJQueryPlugin, getElement, isDisabled, isVisible\n} from './util/index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'scrollspy'\nconst DATA_KEY = 'bs.scrollspy'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst EVENT_ACTIVATE = `activate${EVENT_KEY}`\nconst EVENT_CLICK = `click${EVENT_KEY}`\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_DROPDOWN_ITEM = 'dropdown-item'\nconst CLASS_NAME_ACTIVE = 'active'\n\nconst SELECTOR_DATA_SPY = '[data-bs-spy=\"scroll\"]'\nconst SELECTOR_TARGET_LINKS = '[href]'\nconst SELECTOR_NAV_LIST_GROUP = '.nav, .list-group'\nconst SELECTOR_NAV_LINKS = '.nav-link'\nconst SELECTOR_NAV_ITEMS = '.nav-item'\nconst SELECTOR_LIST_ITEMS = '.list-group-item'\nconst SELECTOR_LINK_ITEMS = `${SELECTOR_NAV_LINKS}, ${SELECTOR_NAV_ITEMS} > ${SELECTOR_NAV_LINKS}, ${SELECTOR_LIST_ITEMS}`\nconst SELECTOR_DROPDOWN = '.dropdown'\nconst SELECTOR_DROPDOWN_TOGGLE = '.dropdown-toggle'\n\nconst Default = {\n  offset: null, // TODO: v6 @deprecated, keep it for backwards compatibility reasons\n  rootMargin: '0px 0px -25%',\n  smoothScroll: false,\n  target: null,\n  threshold: [0.1, 0.5, 1]\n}\n\nconst DefaultType = {\n  offset: '(number|null)', // TODO v6 @deprecated, keep it for backwards compatibility reasons\n  rootMargin: 'string',\n  smoothScroll: 'boolean',\n  target: 'element',\n  threshold: 'array'\n}\n\n/**\n * Class definition\n */\n\nclass ScrollSpy extends BaseComponent {\n  constructor(element, config) {\n    super(element, config)\n\n    // this._element is the observablesContainer and config.target the menu links wrapper\n    this._targetLinks = new Map()\n    this._observableSections = new Map()\n    this._rootElement = getComputedStyle(this._element).overflowY === 'visible' ? null : this._element\n    this._activeTarget = null\n    this._observer = null\n    this._previousScrollData = {\n      visibleEntryTop: 0,\n      parentScrollTop: 0\n    }\n    this.refresh() // initialize\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  refresh() {\n    this._initializeTargetsAndObservables()\n    this._maybeEnableSmoothScroll()\n\n    if (this._observer) {\n      this._observer.disconnect()\n    } else {\n      this._observer = this._getNewObserver()\n    }\n\n    for (const section of this._observableSections.values()) {\n      this._observer.observe(section)\n    }\n  }\n\n  dispose() {\n    this._observer.disconnect()\n    super.dispose()\n  }\n\n  // Private\n  _configAfterMerge(config) {\n    // TODO: on v6 target should be given explicitly & remove the {target: 'ss-target'} case\n    config.target = getElement(config.target) || document.body\n\n    // TODO: v6 Only for backwards compatibility reasons. Use rootMargin only\n    config.rootMargin = config.offset ? `${config.offset}px 0px -30%` : config.rootMargin\n\n    if (typeof config.threshold === 'string') {\n      config.threshold = config.threshold.split(',').map(value => Number.parseFloat(value))\n    }\n\n    return config\n  }\n\n  _maybeEnableSmoothScroll() {\n    if (!this._config.smoothScroll) {\n      return\n    }\n\n    // unregister any previous listeners\n    EventHandler.off(this._config.target, EVENT_CLICK)\n\n    EventHandler.on(this._config.target, EVENT_CLICK, SELECTOR_TARGET_LINKS, event => {\n      const observableSection = this._observableSections.get(event.target.hash)\n      if (observableSection) {\n        event.preventDefault()\n        const root = this._rootElement || window\n        const height = observableSection.offsetTop - this._element.offsetTop\n        if (root.scrollTo) {\n          root.scrollTo({ top: height, behavior: 'smooth' })\n          return\n        }\n\n        // Chrome 60 doesn't support `scrollTo`\n        root.scrollTop = height\n      }\n    })\n  }\n\n  _getNewObserver() {\n    const options = {\n      root: this._rootElement,\n      threshold: this._config.threshold,\n      rootMargin: this._config.rootMargin\n    }\n\n    return new IntersectionObserver(entries => this._observerCallback(entries), options)\n  }\n\n  // The logic of selection\n  _observerCallback(entries) {\n    const targetElement = entry => this._targetLinks.get(`#${entry.target.id}`)\n    const activate = entry => {\n      this._previousScrollData.visibleEntryTop = entry.target.offsetTop\n      this._process(targetElement(entry))\n    }\n\n    const parentScrollTop = (this._rootElement || document.documentElement).scrollTop\n    const userScrollsDown = parentScrollTop >= this._previousScrollData.parentScrollTop\n    this._previousScrollData.parentScrollTop = parentScrollTop\n\n    for (const entry of entries) {\n      if (!entry.isIntersecting) {\n        this._activeTarget = null\n        this._clearActiveClass(targetElement(entry))\n\n        continue\n      }\n\n      const entryIsLowerThanPrevious = entry.target.offsetTop >= this._previousScrollData.visibleEntryTop\n      // if we are scrolling down, pick the bigger offsetTop\n      if (userScrollsDown && entryIsLowerThanPrevious) {\n        activate(entry)\n        // if parent isn't scrolled, let's keep the first visible item, breaking the iteration\n        if (!parentScrollTop) {\n          return\n        }\n\n        continue\n      }\n\n      // if we are scrolling up, pick the smallest offsetTop\n      if (!userScrollsDown && !entryIsLowerThanPrevious) {\n        activate(entry)\n      }\n    }\n  }\n\n  _initializeTargetsAndObservables() {\n    this._targetLinks = new Map()\n    this._observableSections = new Map()\n\n    const targetLinks = SelectorEngine.find(SELECTOR_TARGET_LINKS, this._config.target)\n\n    for (const anchor of targetLinks) {\n      // ensure that the anchor has an id and is not disabled\n      if (!anchor.hash || isDisabled(anchor)) {\n        continue\n      }\n\n      const observableSection = SelectorEngine.findOne(decodeURI(anchor.hash), this._element)\n\n      // ensure that the observableSection exists & is visible\n      if (isVisible(observableSection)) {\n        this._targetLinks.set(decodeURI(anchor.hash), anchor)\n        this._observableSections.set(anchor.hash, observableSection)\n      }\n    }\n  }\n\n  _process(target) {\n    if (this._activeTarget === target) {\n      return\n    }\n\n    this._clearActiveClass(this._config.target)\n    this._activeTarget = target\n    target.classList.add(CLASS_NAME_ACTIVE)\n    this._activateParents(target)\n\n    EventHandler.trigger(this._element, EVENT_ACTIVATE, { relatedTarget: target })\n  }\n\n  _activateParents(target) {\n    // Activate dropdown parents\n    if (target.classList.contains(CLASS_NAME_DROPDOWN_ITEM)) {\n      SelectorEngine.findOne(SELECTOR_DROPDOWN_TOGGLE, target.closest(SELECTOR_DROPDOWN))\n        .classList.add(CLASS_NAME_ACTIVE)\n      return\n    }\n\n    for (const listGroup of SelectorEngine.parents(target, SELECTOR_NAV_LIST_GROUP)) {\n      // Set triggered links parents as active\n      // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n      for (const item of SelectorEngine.prev(listGroup, SELECTOR_LINK_ITEMS)) {\n        item.classList.add(CLASS_NAME_ACTIVE)\n      }\n    }\n  }\n\n  _clearActiveClass(parent) {\n    parent.classList.remove(CLASS_NAME_ACTIVE)\n\n    const activeNodes = SelectorEngine.find(`${SELECTOR_TARGET_LINKS}.${CLASS_NAME_ACTIVE}`, parent)\n    for (const node of activeNodes) {\n      node.classList.remove(CLASS_NAME_ACTIVE)\n    }\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = ScrollSpy.getOrCreateInstance(this, config)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config]()\n    })\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(window, EVENT_LOAD_DATA_API, () => {\n  for (const spy of SelectorEngine.find(SELECTOR_DATA_SPY)) {\n    ScrollSpy.getOrCreateInstance(spy)\n  }\n})\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(ScrollSpy)\n\nexport default ScrollSpy\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap tab.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport BaseComponent from './base-component.js'\nimport EventHandler from './dom/event-handler.js'\nimport SelectorEngine from './dom/selector-engine.js'\nimport { defineJQueryPlugin, getNextActiveElement, isDisabled } from './util/index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'tab'\nconst DATA_KEY = 'bs.tab'\nconst EVENT_KEY = `.${DATA_KEY}`\n\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}`\nconst EVENT_KEYDOWN = `keydown${EVENT_KEY}`\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}`\n\nconst ARROW_LEFT_KEY = 'ArrowLeft'\nconst ARROW_RIGHT_KEY = 'ArrowRight'\nconst ARROW_UP_KEY = 'ArrowUp'\nconst ARROW_DOWN_KEY = 'ArrowDown'\nconst HOME_KEY = 'Home'\nconst END_KEY = 'End'\n\nconst CLASS_NAME_ACTIVE = 'active'\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_DROPDOWN = 'dropdown'\n\nconst SELECTOR_DROPDOWN_TOGGLE = '.dropdown-toggle'\nconst SELECTOR_DROPDOWN_MENU = '.dropdown-menu'\nconst NOT_SELECTOR_DROPDOWN_TOGGLE = `:not(${SELECTOR_DROPDOWN_TOGGLE})`\n\nconst SELECTOR_TAB_PANEL = '.list-group, .nav, [role=\"tablist\"]'\nconst SELECTOR_OUTER = '.nav-item, .list-group-item'\nconst SELECTOR_INNER = `.nav-link${NOT_SELECTOR_DROPDOWN_TOGGLE}, .list-group-item${NOT_SELECTOR_DROPDOWN_TOGGLE}, [role=\"tab\"]${NOT_SELECTOR_DROPDOWN_TOGGLE}`\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"tab\"], [data-bs-toggle=\"pill\"], [data-bs-toggle=\"list\"]' // TODO: could only be `tab` in v6\nconst SELECTOR_INNER_ELEM = `${SELECTOR_INNER}, ${SELECTOR_DATA_TOGGLE}`\n\nconst SELECTOR_DATA_TOGGLE_ACTIVE = `.${CLASS_NAME_ACTIVE}[data-bs-toggle=\"tab\"], .${CLASS_NAME_ACTIVE}[data-bs-toggle=\"pill\"], .${CLASS_NAME_ACTIVE}[data-bs-toggle=\"list\"]`\n\n/**\n * Class definition\n */\n\nclass Tab extends BaseComponent {\n  constructor(element) {\n    super(element)\n    this._parent = this._element.closest(SELECTOR_TAB_PANEL)\n\n    if (!this._parent) {\n      return\n      // TODO: should throw exception in v6\n      // throw new TypeError(`${element.outerHTML} has not a valid parent ${SELECTOR_INNER_ELEM}`)\n    }\n\n    // Set up initial aria attributes\n    this._setInitialAttributes(this._parent, this._getChildren())\n\n    EventHandler.on(this._element, EVENT_KEYDOWN, event => this._keydown(event))\n  }\n\n  // Getters\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  show() { // Shows this elem and deactivate the active sibling if exists\n    const innerElem = this._element\n    if (this._elemIsActive(innerElem)) {\n      return\n    }\n\n    // Search for active tab on same parent to deactivate it\n    const active = this._getActiveElem()\n\n    const hideEvent = active ?\n      EventHandler.trigger(active, EVENT_HIDE, { relatedTarget: innerElem }) :\n      null\n\n    const showEvent = EventHandler.trigger(innerElem, EVENT_SHOW, { relatedTarget: active })\n\n    if (showEvent.defaultPrevented || (hideEvent && hideEvent.defaultPrevented)) {\n      return\n    }\n\n    this._deactivate(active, innerElem)\n    this._activate(innerElem, active)\n  }\n\n  // Private\n  _activate(element, relatedElem) {\n    if (!element) {\n      return\n    }\n\n    element.classList.add(CLASS_NAME_ACTIVE)\n\n    this._activate(SelectorEngine.getElementFromSelector(element)) // Search and activate/show the proper section\n\n    const complete = () => {\n      if (element.getAttribute('role') !== 'tab') {\n        element.classList.add(CLASS_NAME_SHOW)\n        return\n      }\n\n      element.removeAttribute('tabindex')\n      element.setAttribute('aria-selected', true)\n      this._toggleDropDown(element, true)\n      EventHandler.trigger(element, EVENT_SHOWN, {\n        relatedTarget: relatedElem\n      })\n    }\n\n    this._queueCallback(complete, element, element.classList.contains(CLASS_NAME_FADE))\n  }\n\n  _deactivate(element, relatedElem) {\n    if (!element) {\n      return\n    }\n\n    element.classList.remove(CLASS_NAME_ACTIVE)\n    element.blur()\n\n    this._deactivate(SelectorEngine.getElementFromSelector(element)) // Search and deactivate the shown section too\n\n    const complete = () => {\n      if (element.getAttribute('role') !== 'tab') {\n        element.classList.remove(CLASS_NAME_SHOW)\n        return\n      }\n\n      element.setAttribute('aria-selected', false)\n      element.setAttribute('tabindex', '-1')\n      this._toggleDropDown(element, false)\n      EventHandler.trigger(element, EVENT_HIDDEN, { relatedTarget: relatedElem })\n    }\n\n    this._queueCallback(complete, element, element.classList.contains(CLASS_NAME_FADE))\n  }\n\n  _keydown(event) {\n    if (!([ARROW_LEFT_KEY, ARROW_RIGHT_KEY, ARROW_UP_KEY, ARROW_DOWN_KEY, HOME_KEY, END_KEY].includes(event.key))) {\n      return\n    }\n\n    event.stopPropagation()// stopPropagation/preventDefault both added to support up/down keys without scrolling the page\n    event.preventDefault()\n\n    const children = this._getChildren().filter(element => !isDisabled(element))\n    let nextActiveElement\n\n    if ([HOME_KEY, END_KEY].includes(event.key)) {\n      nextActiveElement = children[event.key === HOME_KEY ? 0 : children.length - 1]\n    } else {\n      const isNext = [ARROW_RIGHT_KEY, ARROW_DOWN_KEY].includes(event.key)\n      nextActiveElement = getNextActiveElement(children, event.target, isNext, true)\n    }\n\n    if (nextActiveElement) {\n      nextActiveElement.focus({ preventScroll: true })\n      Tab.getOrCreateInstance(nextActiveElement).show()\n    }\n  }\n\n  _getChildren() { // collection of inner elements\n    return SelectorEngine.find(SELECTOR_INNER_ELEM, this._parent)\n  }\n\n  _getActiveElem() {\n    return this._getChildren().find(child => this._elemIsActive(child)) || null\n  }\n\n  _setInitialAttributes(parent, children) {\n    this._setAttributeIfNotExists(parent, 'role', 'tablist')\n\n    for (const child of children) {\n      this._setInitialAttributesOnChild(child)\n    }\n  }\n\n  _setInitialAttributesOnChild(child) {\n    child = this._getInnerElement(child)\n    const isActive = this._elemIsActive(child)\n    const outerElem = this._getOuterElement(child)\n    child.setAttribute('aria-selected', isActive)\n\n    if (outerElem !== child) {\n      this._setAttributeIfNotExists(outerElem, 'role', 'presentation')\n    }\n\n    if (!isActive) {\n      child.setAttribute('tabindex', '-1')\n    }\n\n    this._setAttributeIfNotExists(child, 'role', 'tab')\n\n    // set attributes to the related panel too\n    this._setInitialAttributesOnTargetPanel(child)\n  }\n\n  _setInitialAttributesOnTargetPanel(child) {\n    const target = SelectorEngine.getElementFromSelector(child)\n\n    if (!target) {\n      return\n    }\n\n    this._setAttributeIfNotExists(target, 'role', 'tabpanel')\n\n    if (child.id) {\n      this._setAttributeIfNotExists(target, 'aria-labelledby', `${child.id}`)\n    }\n  }\n\n  _toggleDropDown(element, open) {\n    const outerElem = this._getOuterElement(element)\n    if (!outerElem.classList.contains(CLASS_DROPDOWN)) {\n      return\n    }\n\n    const toggle = (selector, className) => {\n      const element = SelectorEngine.findOne(selector, outerElem)\n      if (element) {\n        element.classList.toggle(className, open)\n      }\n    }\n\n    toggle(SELECTOR_DROPDOWN_TOGGLE, CLASS_NAME_ACTIVE)\n    toggle(SELECTOR_DROPDOWN_MENU, CLASS_NAME_SHOW)\n    outerElem.setAttribute('aria-expanded', open)\n  }\n\n  _setAttributeIfNotExists(element, attribute, value) {\n    if (!element.hasAttribute(attribute)) {\n      element.setAttribute(attribute, value)\n    }\n  }\n\n  _elemIsActive(elem) {\n    return elem.classList.contains(CLASS_NAME_ACTIVE)\n  }\n\n  // Try to get the inner element (usually the .nav-link)\n  _getInnerElement(elem) {\n    return elem.matches(SELECTOR_INNER_ELEM) ? elem : SelectorEngine.findOne(SELECTOR_INNER_ELEM, elem)\n  }\n\n  // Try to get the outer element (usually the .nav-item)\n  _getOuterElement(elem) {\n    return elem.closest(SELECTOR_OUTER) || elem\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Tab.getOrCreateInstance(this)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config]()\n    })\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  if (['A', 'AREA'].includes(this.tagName)) {\n    event.preventDefault()\n  }\n\n  if (isDisabled(this)) {\n    return\n  }\n\n  Tab.getOrCreateInstance(this).show()\n})\n\n/**\n * Initialize on focus\n */\nEventHandler.on(window, EVENT_LOAD_DATA_API, () => {\n  for (const element of SelectorEngine.find(SELECTOR_DATA_TOGGLE_ACTIVE)) {\n    Tab.getOrCreateInstance(element)\n  }\n})\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Tab)\n\nexport default Tab\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap toast.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport BaseComponent from './base-component.js'\nimport EventHandler from './dom/event-handler.js'\nimport { enableDismissTrigger } from './util/component-functions.js'\nimport { defineJQueryPlugin, reflow } from './util/index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'toast'\nconst DATA_KEY = 'bs.toast'\nconst EVENT_KEY = `.${DATA_KEY}`\n\nconst EVENT_MOUSEOVER = `mouseover${EVENT_KEY}`\nconst EVENT_MOUSEOUT = `mouseout${EVENT_KEY}`\nconst EVENT_FOCUSIN = `focusin${EVENT_KEY}`\nconst EVENT_FOCUSOUT = `focusout${EVENT_KEY}`\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\n\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_HIDE = 'hide' // @deprecated - kept here only for backwards compatibility\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_SHOWING = 'showing'\n\nconst DefaultType = {\n  animation: 'boolean',\n  autohide: 'boolean',\n  delay: 'number'\n}\n\nconst Default = {\n  animation: true,\n  autohide: true,\n  delay: 5000\n}\n\n/**\n * Class definition\n */\n\nclass Toast extends BaseComponent {\n  constructor(element, config) {\n    super(element, config)\n\n    this._timeout = null\n    this._hasMouseInteraction = false\n    this._hasKeyboardInteraction = false\n    this._setListeners()\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  show() {\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW)\n\n    if (showEvent.defaultPrevented) {\n      return\n    }\n\n    this._clearTimeout()\n\n    if (this._config.animation) {\n      this._element.classList.add(CLASS_NAME_FADE)\n    }\n\n    const complete = () => {\n      this._element.classList.remove(CLASS_NAME_SHOWING)\n      EventHandler.trigger(this._element, EVENT_SHOWN)\n\n      this._maybeScheduleHide()\n    }\n\n    this._element.classList.remove(CLASS_NAME_HIDE) // @deprecated\n    reflow(this._element)\n    this._element.classList.add(CLASS_NAME_SHOW, CLASS_NAME_SHOWING)\n\n    this._queueCallback(complete, this._element, this._config.animation)\n  }\n\n  hide() {\n    if (!this.isShown()) {\n      return\n    }\n\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE)\n\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    const complete = () => {\n      this._element.classList.add(CLASS_NAME_HIDE) // @deprecated\n      this._element.classList.remove(CLASS_NAME_SHOWING, CLASS_NAME_SHOW)\n      EventHandler.trigger(this._element, EVENT_HIDDEN)\n    }\n\n    this._element.classList.add(CLASS_NAME_SHOWING)\n    this._queueCallback(complete, this._element, this._config.animation)\n  }\n\n  dispose() {\n    this._clearTimeout()\n\n    if (this.isShown()) {\n      this._element.classList.remove(CLASS_NAME_SHOW)\n    }\n\n    super.dispose()\n  }\n\n  isShown() {\n    return this._element.classList.contains(CLASS_NAME_SHOW)\n  }\n\n  // Private\n  _maybeScheduleHide() {\n    if (!this._config.autohide) {\n      return\n    }\n\n    if (this._hasMouseInteraction || this._hasKeyboardInteraction) {\n      return\n    }\n\n    this._timeout = setTimeout(() => {\n      this.hide()\n    }, this._config.delay)\n  }\n\n  _onInteraction(event, isInteracting) {\n    switch (event.type) {\n      case 'mouseover':\n      case 'mouseout': {\n        this._hasMouseInteraction = isInteracting\n        break\n      }\n\n      case 'focusin':\n      case 'focusout': {\n        this._hasKeyboardInteraction = isInteracting\n        break\n      }\n\n      default: {\n        break\n      }\n    }\n\n    if (isInteracting) {\n      this._clearTimeout()\n      return\n    }\n\n    const nextElement = event.relatedTarget\n    if (this._element === nextElement || this._element.contains(nextElement)) {\n      return\n    }\n\n    this._maybeScheduleHide()\n  }\n\n  _setListeners() {\n    EventHandler.on(this._element, EVENT_MOUSEOVER, event => this._onInteraction(event, true))\n    EventHandler.on(this._element, EVENT_MOUSEOUT, event => this._onInteraction(event, false))\n    EventHandler.on(this._element, EVENT_FOCUSIN, event => this._onInteraction(event, true))\n    EventHandler.on(this._element, EVENT_FOCUSOUT, event => this._onInteraction(event, false))\n  }\n\n  _clearTimeout() {\n    clearTimeout(this._timeout)\n    this._timeout = null\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Toast.getOrCreateInstance(this, config)\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n\n        data[config](this)\n      }\n    })\n  }\n}\n\n/**\n * Data API implementation\n */\n\nenableDismissTrigger(Toast)\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Toast)\n\nexport default Toast\n","export * from \"./enums.js\";\nexport * from \"./modifiers/index.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport { popperGenerator, detectOverflow, createPopper as createPopperBase } from \"./createPopper.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport { createPopper } from \"./popper.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport { createPopper as createPopperLite } from \"./popper-lite.js\";","export var top = 'top';\nexport var bottom = 'bottom';\nexport var right = 'right';\nexport var left = 'left';\nexport var auto = 'auto';\nexport var basePlacements = [top, bottom, right, left];\nexport var start = 'start';\nexport var end = 'end';\nexport var clippingParents = 'clippingParents';\nexport var viewport = 'viewport';\nexport var popper = 'popper';\nexport var reference = 'reference';\nexport var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {\n  return acc.concat([placement + \"-\" + start, placement + \"-\" + end]);\n}, []);\nexport var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {\n  return acc.concat([placement, placement + \"-\" + start, placement + \"-\" + end]);\n}, []); // modifiers that need to read the DOM\n\nexport var beforeRead = 'beforeRead';\nexport var read = 'read';\nexport var afterRead = 'afterRead'; // pure-logic modifiers\n\nexport var beforeMain = 'beforeMain';\nexport var main = 'main';\nexport var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)\n\nexport var beforeWrite = 'beforeWrite';\nexport var write = 'write';\nexport var afterWrite = 'afterWrite';\nexport var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];","export { default as applyStyles } from \"./applyStyles.js\";\nexport { default as arrow } from \"./arrow.js\";\nexport { default as computeStyles } from \"./computeStyles.js\";\nexport { default as eventListeners } from \"./eventListeners.js\";\nexport { default as flip } from \"./flip.js\";\nexport { default as hide } from \"./hide.js\";\nexport { default as offset } from \"./offset.js\";\nexport { default as popperOffsets } from \"./popperOffsets.js\";\nexport { default as preventOverflow } from \"./preventOverflow.js\";","import getNodeName from \"../dom-utils/getNodeName.js\";\nimport { isHTMLElement } from \"../dom-utils/instanceOf.js\"; // This modifier takes the styles prepared by the `computeStyles` modifier\n// and applies them to the HTMLElements such as popper and arrow\n\nfunction applyStyles(_ref) {\n  var state = _ref.state;\n  Object.keys(state.elements).forEach(function (name) {\n    var style = state.styles[name] || {};\n    var attributes = state.attributes[name] || {};\n    var element = state.elements[name]; // arrow is optional + virtual elements\n\n    if (!isHTMLElement(element) || !getNodeName(element)) {\n      return;\n    } // Flow doesn't support to extend this property, but it's the most\n    // effective way to apply styles to an HTMLElement\n    // $FlowFixMe[cannot-write]\n\n\n    Object.assign(element.style, style);\n    Object.keys(attributes).forEach(function (name) {\n      var value = attributes[name];\n\n      if (value === false) {\n        element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, value === true ? '' : value);\n      }\n    });\n  });\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state;\n  var initialStyles = {\n    popper: {\n      position: state.options.strategy,\n      left: '0',\n      top: '0',\n      margin: '0'\n    },\n    arrow: {\n      position: 'absolute'\n    },\n    reference: {}\n  };\n  Object.assign(state.elements.popper.style, initialStyles.popper);\n  state.styles = initialStyles;\n\n  if (state.elements.arrow) {\n    Object.assign(state.elements.arrow.style, initialStyles.arrow);\n  }\n\n  return function () {\n    Object.keys(state.elements).forEach(function (name) {\n      var element = state.elements[name];\n      var attributes = state.attributes[name] || {};\n      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them\n\n      var style = styleProperties.reduce(function (style, property) {\n        style[property] = '';\n        return style;\n      }, {}); // arrow is optional + virtual elements\n\n      if (!isHTMLElement(element) || !getNodeName(element)) {\n        return;\n      }\n\n      Object.assign(element.style, style);\n      Object.keys(attributes).forEach(function (attribute) {\n        element.removeAttribute(attribute);\n      });\n    });\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'applyStyles',\n  enabled: true,\n  phase: 'write',\n  fn: applyStyles,\n  effect: effect,\n  requires: ['computeStyles']\n};","export default function getNodeName(element) {\n  return element ? (element.nodeName || '').toLowerCase() : null;\n}","import getWindow from \"./getWindow.js\";\n\nfunction isElement(node) {\n  var OwnElement = getWindow(node).Element;\n  return node instanceof OwnElement || node instanceof Element;\n}\n\nfunction isHTMLElement(node) {\n  var OwnElement = getWindow(node).HTMLElement;\n  return node instanceof OwnElement || node instanceof HTMLElement;\n}\n\nfunction isShadowRoot(node) {\n  // IE 11 has no ShadowRoot\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  var OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\nexport { isElement, isHTMLElement, isShadowRoot };","export default function getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (node.toString() !== '[object Window]') {\n    var ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}","import getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\nimport contains from \"../dom-utils/contains.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\nimport { within } from \"../utils/within.js\";\nimport mergePaddingObject from \"../utils/mergePaddingObject.js\";\nimport expandToHashMap from \"../utils/expandToHashMap.js\";\nimport { left, right, basePlacements, top, bottom } from \"../enums.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar toPaddingObject = function toPaddingObject(padding, state) {\n  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : padding;\n  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n};\n\nfunction arrow(_ref) {\n  var _state$modifiersData$;\n\n  var state = _ref.state,\n      name = _ref.name,\n      options = _ref.options;\n  var arrowElement = state.elements.arrow;\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var basePlacement = getBasePlacement(state.placement);\n  var axis = getMainAxisFromPlacement(basePlacement);\n  var isVertical = [left, right].indexOf(basePlacement) >= 0;\n  var len = isVertical ? 'height' : 'width';\n\n  if (!arrowElement || !popperOffsets) {\n    return;\n  }\n\n  var paddingObject = toPaddingObject(options.padding, state);\n  var arrowRect = getLayoutRect(arrowElement);\n  var minProp = axis === 'y' ? top : left;\n  var maxProp = axis === 'y' ? bottom : right;\n  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n  var startDiff = popperOffsets[axis] - state.rects.reference[axis];\n  var arrowOffsetParent = getOffsetParent(arrowElement);\n  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is\n  // outside of the popper bounds\n\n  var min = paddingObject[minProp];\n  var max = clientSize - arrowRect[len] - paddingObject[maxProp];\n  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n  var offset = within(min, center, max); // Prevents breaking syntax highlighting...\n\n  var axisProp = axis;\n  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options;\n  var _options$element = options.element,\n      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;\n\n  if (arrowElement == null) {\n    return;\n  } // CSS selector\n\n\n  if (typeof arrowElement === 'string') {\n    arrowElement = state.elements.popper.querySelector(arrowElement);\n\n    if (!arrowElement) {\n      return;\n    }\n  }\n\n  if (!contains(state.elements.popper, arrowElement)) {\n    return;\n  }\n\n  state.elements.arrow = arrowElement;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'arrow',\n  enabled: true,\n  phase: 'main',\n  fn: arrow,\n  effect: effect,\n  requires: ['popperOffsets'],\n  requiresIfExists: ['preventOverflow']\n};","import { auto } from \"../enums.js\";\nexport default function getBasePlacement(placement) {\n  return placement.split('-')[0];\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\"; // Returns the layout rect of an element relative to its offsetParent. Layout\n// means it doesn't take into account transforms.\n\nexport default function getLayoutRect(element) {\n  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.\n  // Fixes https://github.com/popperjs/popper-core/issues/1223\n\n  var width = element.offsetWidth;\n  var height = element.offsetHeight;\n\n  if (Math.abs(clientRect.width - width) <= 1) {\n    width = clientRect.width;\n  }\n\n  if (Math.abs(clientRect.height - height) <= 1) {\n    height = clientRect.height;\n  }\n\n  return {\n    x: element.offsetLeft,\n    y: element.offsetTop,\n    width: width,\n    height: height\n  };\n}","import { isElement, isHTMLElement } from \"./instanceOf.js\";\nimport { round } from \"../utils/math.js\";\nimport getWindow from \"./getWindow.js\";\nimport isLayoutViewport from \"./isLayoutViewport.js\";\nexport default function getBoundingClientRect(element, includeScale, isFixedStrategy) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n\n  var clientRect = element.getBoundingClientRect();\n  var scaleX = 1;\n  var scaleY = 1;\n\n  if (includeScale && isHTMLElement(element)) {\n    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;\n    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;\n  }\n\n  var _ref = isElement(element) ? getWindow(element) : window,\n      visualViewport = _ref.visualViewport;\n\n  var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;\n  var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;\n  var width = clientRect.width / scaleX;\n  var height = clientRect.height / scaleY;\n  return {\n    width: width,\n    height: height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x: x,\n    y: y\n  };\n}","export var max = Math.max;\nexport var min = Math.min;\nexport var round = Math.round;","import getUAString from \"../utils/userAgent.js\";\nexport default function isLayoutViewport() {\n  return !/^((?!chrome|android).)*safari/i.test(getUAString());\n}","export default function getUAString() {\n  var uaData = navigator.userAgentData;\n\n  if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) {\n    return uaData.brands.map(function (item) {\n      return item.brand + \"/\" + item.version;\n    }).join(' ');\n  }\n\n  return navigator.userAgent;\n}","import { isShadowRoot } from \"./instanceOf.js\";\nexport default function contains(parent, child) {\n  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && isShadowRoot(rootNode)) {\n      var next = child;\n\n      do {\n        if (next && parent.isSameNode(next)) {\n          return true;\n        } // $FlowFixMe[prop-missing]: need a better way to handle this...\n\n\n        next = next.parentNode || next.host;\n      } while (next);\n    } // Give up, the result is false\n\n\n  return false;\n}","import getWindow from \"./getWindow.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isHTMLElement, isShadowRoot } from \"./instanceOf.js\";\nimport isTableElement from \"./isTableElement.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport getUAString from \"../utils/userAgent.js\";\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n  getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\n\n\nfunction getContainingBlock(element) {\n  var isFirefox = /firefox/i.test(getUAString());\n  var isIE = /Trident/i.test(getUAString());\n\n  if (isIE && isHTMLElement(element)) {\n    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\n    var elementCss = getComputedStyle(element);\n\n    if (elementCss.position === 'fixed') {\n      return null;\n    }\n  }\n\n  var currentNode = getParentNode(element);\n\n  if (isShadowRoot(currentNode)) {\n    currentNode = currentNode.host;\n  }\n\n  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {\n    var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n    // create a containing block.\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nexport default function getOffsetParent(element) {\n  var window = getWindow(element);\n  var offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static')) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}","import getWindow from \"./getWindow.js\";\nexport default function getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}","import getNodeName from \"./getNodeName.js\";\nexport default function isTableElement(element) {\n  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;\n}","import getNodeName from \"./getNodeName.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport { isShadowRoot } from \"./instanceOf.js\";\nexport default function getParentNode(element) {\n  if (getNodeName(element) === 'html') {\n    return element;\n  }\n\n  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // $FlowFixMe[incompatible-return]\n    // $FlowFixMe[prop-missing]\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || ( // DOM Element detected\n    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected\n    // $FlowFixMe[incompatible-call]: HTMLElement is a Node\n    getDocumentElement(element) // fallback\n\n  );\n}","import { isElement } from \"./instanceOf.js\";\nexport default function getDocumentElement(element) {\n  // $FlowFixMe[incompatible-return]: assume body is always available\n  return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]\n  element.document) || window.document).documentElement;\n}","export default function getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';\n}","import { max as mathMax, min as mathMin } from \"./math.js\";\nexport function within(min, value, max) {\n  return mathMax(min, mathMin(value, max));\n}\nexport function withinMaxClamp(min, value, max) {\n  var v = within(min, value, max);\n  return v > max ? max : v;\n}","import getFreshSideObject from \"./getFreshSideObject.js\";\nexport default function mergePaddingObject(paddingObject) {\n  return Object.assign({}, getFreshSideObject(), paddingObject);\n}","export default function getFreshSideObject() {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  };\n}","export default function expandToHashMap(value, keys) {\n  return keys.reduce(function (hashMap, key) {\n    hashMap[key] = value;\n    return hashMap;\n  }, {});\n}","import { top, left, right, bottom, end } from \"../enums.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport getWindow from \"../dom-utils/getWindow.js\";\nimport getDocumentElement from \"../dom-utils/getDocumentElement.js\";\nimport getComputedStyle from \"../dom-utils/getComputedStyle.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getVariation from \"../utils/getVariation.js\";\nimport { round } from \"../utils/math.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar unsetSides = {\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto'\n}; // Round the offsets to the nearest suitable subpixel based on the DPR.\n// Zooming can change the DPR, but it seems to report a value that will\n// cleanly divide the values into the appropriate subpixels.\n\nfunction roundOffsetsByDPR(_ref, win) {\n  var x = _ref.x,\n      y = _ref.y;\n  var dpr = win.devicePixelRatio || 1;\n  return {\n    x: round(x * dpr) / dpr || 0,\n    y: round(y * dpr) / dpr || 0\n  };\n}\n\nexport function mapToStyles(_ref2) {\n  var _Object$assign2;\n\n  var popper = _ref2.popper,\n      popperRect = _ref2.popperRect,\n      placement = _ref2.placement,\n      variation = _ref2.variation,\n      offsets = _ref2.offsets,\n      position = _ref2.position,\n      gpuAcceleration = _ref2.gpuAcceleration,\n      adaptive = _ref2.adaptive,\n      roundOffsets = _ref2.roundOffsets,\n      isFixed = _ref2.isFixed;\n  var _offsets$x = offsets.x,\n      x = _offsets$x === void 0 ? 0 : _offsets$x,\n      _offsets$y = offsets.y,\n      y = _offsets$y === void 0 ? 0 : _offsets$y;\n\n  var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({\n    x: x,\n    y: y\n  }) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref3.x;\n  y = _ref3.y;\n  var hasX = offsets.hasOwnProperty('x');\n  var hasY = offsets.hasOwnProperty('y');\n  var sideX = left;\n  var sideY = top;\n  var win = window;\n\n  if (adaptive) {\n    var offsetParent = getOffsetParent(popper);\n    var heightProp = 'clientHeight';\n    var widthProp = 'clientWidth';\n\n    if (offsetParent === getWindow(popper)) {\n      offsetParent = getDocumentElement(popper);\n\n      if (getComputedStyle(offsetParent).position !== 'static' && position === 'absolute') {\n        heightProp = 'scrollHeight';\n        widthProp = 'scrollWidth';\n      }\n    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\n\n\n    offsetParent = offsetParent;\n\n    if (placement === top || (placement === left || placement === right) && variation === end) {\n      sideY = bottom;\n      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]\n      offsetParent[heightProp];\n      y -= offsetY - popperRect.height;\n      y *= gpuAcceleration ? 1 : -1;\n    }\n\n    if (placement === left || (placement === top || placement === bottom) && variation === end) {\n      sideX = right;\n      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]\n      offsetParent[widthProp];\n      x -= offsetX - popperRect.width;\n      x *= gpuAcceleration ? 1 : -1;\n    }\n  }\n\n  var commonStyles = Object.assign({\n    position: position\n  }, adaptive && unsetSides);\n\n  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({\n    x: x,\n    y: y\n  }, getWindow(popper)) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref4.x;\n  y = _ref4.y;\n\n  if (gpuAcceleration) {\n    var _Object$assign;\n\n    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? \"translate(\" + x + \"px, \" + y + \"px)\" : \"translate3d(\" + x + \"px, \" + y + \"px, 0)\", _Object$assign));\n  }\n\n  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + \"px\" : '', _Object$assign2[sideX] = hasX ? x + \"px\" : '', _Object$assign2.transform = '', _Object$assign2));\n}\n\nfunction computeStyles(_ref5) {\n  var state = _ref5.state,\n      options = _ref5.options;\n  var _options$gpuAccelerat = options.gpuAcceleration,\n      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,\n      _options$adaptive = options.adaptive,\n      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,\n      _options$roundOffsets = options.roundOffsets,\n      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;\n  var commonStyles = {\n    placement: getBasePlacement(state.placement),\n    variation: getVariation(state.placement),\n    popper: state.elements.popper,\n    popperRect: state.rects.popper,\n    gpuAcceleration: gpuAcceleration,\n    isFixed: state.options.strategy === 'fixed'\n  };\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.popperOffsets,\n      position: state.options.strategy,\n      adaptive: adaptive,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  if (state.modifiersData.arrow != null) {\n    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.arrow,\n      position: 'absolute',\n      adaptive: false,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-placement': state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'computeStyles',\n  enabled: true,\n  phase: 'beforeWrite',\n  fn: computeStyles,\n  data: {}\n};","export default function getVariation(placement) {\n  return placement.split('-')[1];\n}","import getWindow from \"../dom-utils/getWindow.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar passive = {\n  passive: true\n};\n\nfunction effect(_ref) {\n  var state = _ref.state,\n      instance = _ref.instance,\n      options = _ref.options;\n  var _options$scroll = options.scroll,\n      scroll = _options$scroll === void 0 ? true : _options$scroll,\n      _options$resize = options.resize,\n      resize = _options$resize === void 0 ? true : _options$resize;\n  var window = getWindow(state.elements.popper);\n  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);\n\n  if (scroll) {\n    scrollParents.forEach(function (scrollParent) {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n\n  return function () {\n    if (scroll) {\n      scrollParents.forEach(function (scrollParent) {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: function fn() {},\n  effect: effect,\n  data: {}\n};","import getOppositePlacement from \"../utils/getOppositePlacement.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getOppositeVariationPlacement from \"../utils/getOppositeVariationPlacement.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\nimport computeAutoPlacement from \"../utils/computeAutoPlacement.js\";\nimport { bottom, top, start, right, left, auto } from \"../enums.js\";\nimport getVariation from \"../utils/getVariation.js\"; // eslint-disable-next-line import/no-unused-modules\n\nfunction getExpandedFallbackPlacements(placement) {\n  if (getBasePlacement(placement) === auto) {\n    return [];\n  }\n\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];\n}\n\nfunction flip(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n\n  if (state.modifiersData[name]._skip) {\n    return;\n  }\n\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,\n      specifiedFallbackPlacements = options.fallbackPlacements,\n      padding = options.padding,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      _options$flipVariatio = options.flipVariations,\n      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,\n      allowedAutoPlacements = options.allowedAutoPlacements;\n  var preferredPlacement = state.options.placement;\n  var basePlacement = getBasePlacement(preferredPlacement);\n  var isBasePlacement = basePlacement === preferredPlacement;\n  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));\n  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {\n    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding,\n      flipVariations: flipVariations,\n      allowedAutoPlacements: allowedAutoPlacements\n    }) : placement);\n  }, []);\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var checksMap = new Map();\n  var makeFallbackChecks = true;\n  var firstFittingPlacement = placements[0];\n\n  for (var i = 0; i < placements.length; i++) {\n    var placement = placements[i];\n\n    var _basePlacement = getBasePlacement(placement);\n\n    var isStartVariation = getVariation(placement) === start;\n    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;\n    var len = isVertical ? 'width' : 'height';\n    var overflow = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      altBoundary: altBoundary,\n      padding: padding\n    });\n    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;\n\n    if (referenceRect[len] > popperRect[len]) {\n      mainVariationSide = getOppositePlacement(mainVariationSide);\n    }\n\n    var altVariationSide = getOppositePlacement(mainVariationSide);\n    var checks = [];\n\n    if (checkMainAxis) {\n      checks.push(overflow[_basePlacement] <= 0);\n    }\n\n    if (checkAltAxis) {\n      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n    }\n\n    if (checks.every(function (check) {\n      return check;\n    })) {\n      firstFittingPlacement = placement;\n      makeFallbackChecks = false;\n      break;\n    }\n\n    checksMap.set(placement, checks);\n  }\n\n  if (makeFallbackChecks) {\n    // `2` may be desired in some cases – research later\n    var numberOfChecks = flipVariations ? 3 : 1;\n\n    var _loop = function _loop(_i) {\n      var fittingPlacement = placements.find(function (placement) {\n        var checks = checksMap.get(placement);\n\n        if (checks) {\n          return checks.slice(0, _i).every(function (check) {\n            return check;\n          });\n        }\n      });\n\n      if (fittingPlacement) {\n        firstFittingPlacement = fittingPlacement;\n        return \"break\";\n      }\n    };\n\n    for (var _i = numberOfChecks; _i > 0; _i--) {\n      var _ret = _loop(_i);\n\n      if (_ret === \"break\") break;\n    }\n  }\n\n  if (state.placement !== firstFittingPlacement) {\n    state.modifiersData[name]._skip = true;\n    state.placement = firstFittingPlacement;\n    state.reset = true;\n  }\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'flip',\n  enabled: true,\n  phase: 'main',\n  fn: flip,\n  requiresIfExists: ['offset'],\n  data: {\n    _skip: false\n  }\n};","var hash = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nexport default function getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}","var hash = {\n  start: 'end',\n  end: 'start'\n};\nexport default function getOppositeVariationPlacement(placement) {\n  return placement.replace(/start|end/g, function (matched) {\n    return hash[matched];\n  });\n}","import getClippingRect from \"../dom-utils/getClippingRect.js\";\nimport getDocumentElement from \"../dom-utils/getDocumentElement.js\";\nimport getBoundingClientRect from \"../dom-utils/getBoundingClientRect.js\";\nimport computeOffsets from \"./computeOffsets.js\";\nimport rectToClientRect from \"./rectToClientRect.js\";\nimport { clippingParents, reference, popper, bottom, top, right, basePlacements, viewport } from \"../enums.js\";\nimport { isElement } from \"../dom-utils/instanceOf.js\";\nimport mergePaddingObject from \"./mergePaddingObject.js\";\nimport expandToHashMap from \"./expandToHashMap.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport default function detectOverflow(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$placement = _options.placement,\n      placement = _options$placement === void 0 ? state.placement : _options$placement,\n      _options$strategy = _options.strategy,\n      strategy = _options$strategy === void 0 ? state.strategy : _options$strategy,\n      _options$boundary = _options.boundary,\n      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,\n      _options$rootBoundary = _options.rootBoundary,\n      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,\n      _options$elementConte = _options.elementContext,\n      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,\n      _options$altBoundary = _options.altBoundary,\n      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,\n      _options$padding = _options.padding,\n      padding = _options$padding === void 0 ? 0 : _options$padding;\n  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n  var altContext = elementContext === popper ? reference : popper;\n  var popperRect = state.rects.popper;\n  var element = state.elements[altBoundary ? altContext : elementContext];\n  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);\n  var referenceClientRect = getBoundingClientRect(state.elements.reference);\n  var popperOffsets = computeOffsets({\n    reference: referenceClientRect,\n    element: popperRect,\n    strategy: 'absolute',\n    placement: placement\n  });\n  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));\n  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n\n  var overflowOffsets = {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n\n  if (elementContext === popper && offsetData) {\n    var offset = offsetData[placement];\n    Object.keys(overflowOffsets).forEach(function (key) {\n      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;\n      var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';\n      overflowOffsets[key] += offset[axis] * multiply;\n    });\n  }\n\n  return overflowOffsets;\n}","import { viewport } from \"../enums.js\";\nimport getViewportRect from \"./getViewportRect.js\";\nimport getDocumentRect from \"./getDocumentRect.js\";\nimport listScrollParents from \"./listScrollParents.js\";\nimport getOffsetParent from \"./getOffsetParent.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isElement, isHTMLElement } from \"./instanceOf.js\";\nimport getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport contains from \"./contains.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport rectToClientRect from \"../utils/rectToClientRect.js\";\nimport { max, min } from \"../utils/math.js\";\n\nfunction getInnerBoundingClientRect(element, strategy) {\n  var rect = getBoundingClientRect(element, false, strategy === 'fixed');\n  rect.top = rect.top + element.clientTop;\n  rect.left = rect.left + element.clientLeft;\n  rect.bottom = rect.top + element.clientHeight;\n  rect.right = rect.left + element.clientWidth;\n  rect.width = element.clientWidth;\n  rect.height = element.clientHeight;\n  rect.x = rect.left;\n  rect.y = rect.top;\n  return rect;\n}\n\nfunction getClientRectFromMixedType(element, clippingParent, strategy) {\n  return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping parent\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingParents(element) {\n  var clippingParents = listScrollParents(getParentNode(element));\n  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;\n  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414\n\n\n  return clippingParents.filter(function (clippingParent) {\n    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';\n  });\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping parents\n\n\nexport default function getClippingRect(element, boundary, rootBoundary, strategy) {\n  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);\n  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);\n  var firstClippingParent = clippingParents[0];\n  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {\n    var rect = getClientRectFromMixedType(element, clippingParent, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromMixedType(element, firstClippingParent, strategy));\n  clippingRect.width = clippingRect.right - clippingRect.left;\n  clippingRect.height = clippingRect.bottom - clippingRect.top;\n  clippingRect.x = clippingRect.left;\n  clippingRect.y = clippingRect.top;\n  return clippingRect;\n}","import getWindow from \"./getWindow.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport isLayoutViewport from \"./isLayoutViewport.js\";\nexport default function getViewportRect(element, strategy) {\n  var win = getWindow(element);\n  var html = getDocumentElement(element);\n  var visualViewport = win.visualViewport;\n  var width = html.clientWidth;\n  var height = html.clientHeight;\n  var x = 0;\n  var y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    var layoutViewport = isLayoutViewport();\n\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x + getWindowScrollBarX(element),\n    y: y\n  };\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getWindowScroll from \"./getWindowScroll.js\";\nexport default function getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  // Popper 1 is broken in this case and never had a bug report so let's assume\n  // it's not an issue. I don't think anyone ever specifies width on <html>\n  // anyway.\n  // Browsers where the left scrollbar doesn't cause an issue report `0` for\n  // this (e.g. Edge 2019, IE11, Safari)\n  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;\n}","import getWindow from \"./getWindow.js\";\nexport default function getWindowScroll(node) {\n  var win = getWindow(node);\n  var scrollLeft = win.pageXOffset;\n  var scrollTop = win.pageYOffset;\n  return {\n    scrollLeft: scrollLeft,\n    scrollTop: scrollTop\n  };\n}","import getDocumentElement from \"./getDocumentElement.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getWindowScroll from \"./getWindowScroll.js\";\nimport { max } from \"../utils/math.js\"; // Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nexport default function getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  var html = getDocumentElement(element);\n  var winScroll = getWindowScroll(element);\n  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n  var y = -winScroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n}","import getScrollParent from \"./getScrollParent.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport getWindow from \"./getWindow.js\";\nimport isScrollParent from \"./isScrollParent.js\";\n/*\ngiven a DOM element, return the list of all scroll parents, up the list of ancesors\nuntil we get to the top window object. This list is what we attach scroll listeners\nto, because if any of these parent elements scroll, we'll need to re-calculate the\nreference element's position.\n*/\n\nexport default function listScrollParents(element, list) {\n  var _element$ownerDocumen;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  var scrollParent = getScrollParent(element);\n  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);\n  var win = getWindow(scrollParent);\n  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;\n  var updatedList = list.concat(target);\n  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here\n  updatedList.concat(listScrollParents(getParentNode(target)));\n}","import getParentNode from \"./getParentNode.js\";\nimport isScrollParent from \"./isScrollParent.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nexport default function getScrollParent(node) {\n  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {\n    // $FlowFixMe[incompatible-return]: assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(node) && isScrollParent(node)) {\n    return node;\n  }\n\n  return getScrollParent(getParentNode(node));\n}","import getComputedStyle from \"./getComputedStyle.js\";\nexport default function isScrollParent(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  var _getComputedStyle = getComputedStyle(element),\n      overflow = _getComputedStyle.overflow,\n      overflowX = _getComputedStyle.overflowX,\n      overflowY = _getComputedStyle.overflowY;\n\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}","export default function rectToClientRect(rect) {\n  return Object.assign({}, rect, {\n    left: rect.x,\n    top: rect.y,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}","import getBasePlacement from \"./getBasePlacement.js\";\nimport getVariation from \"./getVariation.js\";\nimport getMainAxisFromPlacement from \"./getMainAxisFromPlacement.js\";\nimport { top, right, bottom, left, start, end } from \"../enums.js\";\nexport default function computeOffsets(_ref) {\n  var reference = _ref.reference,\n      element = _ref.element,\n      placement = _ref.placement;\n  var basePlacement = placement ? getBasePlacement(placement) : null;\n  var variation = placement ? getVariation(placement) : null;\n  var commonX = reference.x + reference.width / 2 - element.width / 2;\n  var commonY = reference.y + reference.height / 2 - element.height / 2;\n  var offsets;\n\n  switch (basePlacement) {\n    case top:\n      offsets = {\n        x: commonX,\n        y: reference.y - element.height\n      };\n      break;\n\n    case bottom:\n      offsets = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case right:\n      offsets = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case left:\n      offsets = {\n        x: reference.x - element.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      offsets = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;\n\n  if (mainAxis != null) {\n    var len = mainAxis === 'y' ? 'height' : 'width';\n\n    switch (variation) {\n      case start:\n        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);\n        break;\n\n      case end:\n        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);\n        break;\n\n      default:\n    }\n  }\n\n  return offsets;\n}","import getVariation from \"./getVariation.js\";\nimport { variationPlacements, basePlacements, placements as allPlacements } from \"../enums.js\";\nimport detectOverflow from \"./detectOverflow.js\";\nimport getBasePlacement from \"./getBasePlacement.js\";\nexport default function computeAutoPlacement(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      placement = _options.placement,\n      boundary = _options.boundary,\n      rootBoundary = _options.rootBoundary,\n      padding = _options.padding,\n      flipVariations = _options.flipVariations,\n      _options$allowedAutoP = _options.allowedAutoPlacements,\n      allowedAutoPlacements = _options$allowedAutoP === void 0 ? allPlacements : _options$allowedAutoP;\n  var variation = getVariation(placement);\n  var placements = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {\n    return getVariation(placement) === variation;\n  }) : basePlacements;\n  var allowedPlacements = placements.filter(function (placement) {\n    return allowedAutoPlacements.indexOf(placement) >= 0;\n  });\n\n  if (allowedPlacements.length === 0) {\n    allowedPlacements = placements;\n  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n\n\n  var overflows = allowedPlacements.reduce(function (acc, placement) {\n    acc[placement] = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding\n    })[getBasePlacement(placement)];\n    return acc;\n  }, {});\n  return Object.keys(overflows).sort(function (a, b) {\n    return overflows[a] - overflows[b];\n  });\n}","import { top, bottom, left, right } from \"../enums.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\n\nfunction getSideOffsets(overflow, rect, preventedOffsets) {\n  if (preventedOffsets === void 0) {\n    preventedOffsets = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  return {\n    top: overflow.top - rect.height - preventedOffsets.y,\n    right: overflow.right - rect.width + preventedOffsets.x,\n    bottom: overflow.bottom - rect.height + preventedOffsets.y,\n    left: overflow.left - rect.width - preventedOffsets.x\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return [top, right, bottom, left].some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n\nfunction hide(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var preventedOffsets = state.modifiersData.preventOverflow;\n  var referenceOverflow = detectOverflow(state, {\n    elementContext: 'reference'\n  });\n  var popperAltOverflow = detectOverflow(state, {\n    altBoundary: true\n  });\n  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n  state.modifiersData[name] = {\n    referenceClippingOffsets: referenceClippingOffsets,\n    popperEscapeOffsets: popperEscapeOffsets,\n    isReferenceHidden: isReferenceHidden,\n    hasPopperEscaped: hasPopperEscaped\n  };\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-reference-hidden': isReferenceHidden,\n    'data-popper-escaped': hasPopperEscaped\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'hide',\n  enabled: true,\n  phase: 'main',\n  requiresIfExists: ['preventOverflow'],\n  fn: hide\n};","import getBasePlacement from \"../utils/getBasePlacement.js\";\nimport { top, left, right, placements } from \"../enums.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport function distanceAndSkiddingToXY(placement, rects, offset) {\n  var basePlacement = getBasePlacement(placement);\n  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;\n\n  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {\n    placement: placement\n  })) : offset,\n      skidding = _ref[0],\n      distance = _ref[1];\n\n  skidding = skidding || 0;\n  distance = (distance || 0) * invertDistance;\n  return [left, right].indexOf(basePlacement) >= 0 ? {\n    x: distance,\n    y: skidding\n  } : {\n    x: skidding,\n    y: distance\n  };\n}\n\nfunction offset(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options,\n      name = _ref2.name;\n  var _options$offset = options.offset,\n      offset = _options$offset === void 0 ? [0, 0] : _options$offset;\n  var data = placements.reduce(function (acc, placement) {\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n    return acc;\n  }, {});\n  var _data$state$placement = data[state.placement],\n      x = _data$state$placement.x,\n      y = _data$state$placement.y;\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.modifiersData.popperOffsets.x += x;\n    state.modifiersData.popperOffsets.y += y;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'offset',\n  enabled: true,\n  phase: 'main',\n  requires: ['popperOffsets'],\n  fn: offset\n};","import computeOffsets from \"../utils/computeOffsets.js\";\n\nfunction popperOffsets(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  // Offsets are the actual position the popper needs to have to be\n  // properly positioned near its reference element\n  // This is the most basic placement, and will be adjusted by\n  // the modifiers in the next step\n  state.modifiersData[name] = computeOffsets({\n    reference: state.rects.reference,\n    element: state.rects.popper,\n    strategy: 'absolute',\n    placement: state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'popperOffsets',\n  enabled: true,\n  phase: 'read',\n  fn: popperOffsets,\n  data: {}\n};","import { top, left, right, bottom, start } from \"../enums.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\nimport getAltAxis from \"../utils/getAltAxis.js\";\nimport { within, withinMaxClamp } from \"../utils/within.js\";\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\nimport getVariation from \"../utils/getVariation.js\";\nimport getFreshSideObject from \"../utils/getFreshSideObject.js\";\nimport { min as mathMin, max as mathMax } from \"../utils/math.js\";\n\nfunction preventOverflow(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      padding = options.padding,\n      _options$tether = options.tether,\n      tether = _options$tether === void 0 ? true : _options$tether,\n      _options$tetherOffset = options.tetherOffset,\n      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n  var overflow = detectOverflow(state, {\n    boundary: boundary,\n    rootBoundary: rootBoundary,\n    padding: padding,\n    altBoundary: altBoundary\n  });\n  var basePlacement = getBasePlacement(state.placement);\n  var variation = getVariation(state.placement);\n  var isBasePlacement = !variation;\n  var mainAxis = getMainAxisFromPlacement(basePlacement);\n  var altAxis = getAltAxis(mainAxis);\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : tetherOffset;\n  var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {\n    mainAxis: tetherOffsetValue,\n    altAxis: tetherOffsetValue\n  } : Object.assign({\n    mainAxis: 0,\n    altAxis: 0\n  }, tetherOffsetValue);\n  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;\n  var data = {\n    x: 0,\n    y: 0\n  };\n\n  if (!popperOffsets) {\n    return;\n  }\n\n  if (checkMainAxis) {\n    var _offsetModifierState$;\n\n    var mainSide = mainAxis === 'y' ? top : left;\n    var altSide = mainAxis === 'y' ? bottom : right;\n    var len = mainAxis === 'y' ? 'height' : 'width';\n    var offset = popperOffsets[mainAxis];\n    var min = offset + overflow[mainSide];\n    var max = offset - overflow[altSide];\n    var additive = tether ? -popperRect[len] / 2 : 0;\n    var minLen = variation === start ? referenceRect[len] : popperRect[len];\n    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go\n    // outside the reference bounds\n\n    var arrowElement = state.elements.arrow;\n    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {\n      width: 0,\n      height: 0\n    };\n    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();\n    var arrowPaddingMin = arrowPaddingObject[mainSide];\n    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want\n    // to include its full size in the calculation. If the reference is small\n    // and near the edge of a boundary, the popper can overflow even if the\n    // reference is not overflowing as well (e.g. virtual elements with no\n    // width or height)\n\n    var arrowLen = within(0, referenceRect[len], arrowRect[len]);\n    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;\n    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;\n    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);\n    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;\n    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;\n    var tetherMax = offset + maxOffset - offsetModifierValue;\n    var preventedOffset = within(tether ? mathMin(min, tetherMin) : min, offset, tether ? mathMax(max, tetherMax) : max);\n    popperOffsets[mainAxis] = preventedOffset;\n    data[mainAxis] = preventedOffset - offset;\n  }\n\n  if (checkAltAxis) {\n    var _offsetModifierState$2;\n\n    var _mainSide = mainAxis === 'x' ? top : left;\n\n    var _altSide = mainAxis === 'x' ? bottom : right;\n\n    var _offset = popperOffsets[altAxis];\n\n    var _len = altAxis === 'y' ? 'height' : 'width';\n\n    var _min = _offset + overflow[_mainSide];\n\n    var _max = _offset - overflow[_altSide];\n\n    var isOriginSide = [top, left].indexOf(basePlacement) !== -1;\n\n    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;\n\n    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;\n\n    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;\n\n    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);\n\n    popperOffsets[altAxis] = _preventedOffset;\n    data[altAxis] = _preventedOffset - _offset;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'preventOverflow',\n  enabled: true,\n  phase: 'main',\n  fn: preventOverflow,\n  requiresIfExists: ['offset']\n};","export default function getAltAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}","import getCompositeRect from \"./dom-utils/getCompositeRect.js\";\nimport getLayoutRect from \"./dom-utils/getLayoutRect.js\";\nimport listScrollParents from \"./dom-utils/listScrollParents.js\";\nimport getOffsetParent from \"./dom-utils/getOffsetParent.js\";\nimport orderModifiers from \"./utils/orderModifiers.js\";\nimport debounce from \"./utils/debounce.js\";\nimport mergeByName from \"./utils/mergeByName.js\";\nimport detectOverflow from \"./utils/detectOverflow.js\";\nimport { isElement } from \"./dom-utils/instanceOf.js\";\nvar DEFAULT_OPTIONS = {\n  placement: 'bottom',\n  modifiers: [],\n  strategy: 'absolute'\n};\n\nfunction areValidElements() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return !args.some(function (element) {\n    return !(element && typeof element.getBoundingClientRect === 'function');\n  });\n}\n\nexport function popperGenerator(generatorOptions) {\n  if (generatorOptions === void 0) {\n    generatorOptions = {};\n  }\n\n  var _generatorOptions = generatorOptions,\n      _generatorOptions$def = _generatorOptions.defaultModifiers,\n      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,\n      _generatorOptions$def2 = _generatorOptions.defaultOptions,\n      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;\n  return function createPopper(reference, popper, options) {\n    if (options === void 0) {\n      options = defaultOptions;\n    }\n\n    var state = {\n      placement: 'bottom',\n      orderedModifiers: [],\n      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),\n      modifiersData: {},\n      elements: {\n        reference: reference,\n        popper: popper\n      },\n      attributes: {},\n      styles: {}\n    };\n    var effectCleanupFns = [];\n    var isDestroyed = false;\n    var instance = {\n      state: state,\n      setOptions: function setOptions(setOptionsAction) {\n        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;\n        cleanupModifierEffects();\n        state.options = Object.assign({}, defaultOptions, state.options, options);\n        state.scrollParents = {\n          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],\n          popper: listScrollParents(popper)\n        }; // Orders the modifiers based on their dependencies and `phase`\n        // properties\n\n        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers\n\n        state.orderedModifiers = orderedModifiers.filter(function (m) {\n          return m.enabled;\n        });\n        runModifierEffects();\n        return instance.update();\n      },\n      // Sync update – it will always be executed, even if not necessary. This\n      // is useful for low frequency updates where sync behavior simplifies the\n      // logic.\n      // For high frequency updates (e.g. `resize` and `scroll` events), always\n      // prefer the async Popper#update method\n      forceUpdate: function forceUpdate() {\n        if (isDestroyed) {\n          return;\n        }\n\n        var _state$elements = state.elements,\n            reference = _state$elements.reference,\n            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements\n        // anymore\n\n        if (!areValidElements(reference, popper)) {\n          return;\n        } // Store the reference and popper rects to be read by modifiers\n\n\n        state.rects = {\n          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),\n          popper: getLayoutRect(popper)\n        }; // Modifiers have the ability to reset the current update cycle. The\n        // most common use case for this is the `flip` modifier changing the\n        // placement, which then needs to re-run all the modifiers, because the\n        // logic was previously ran for the previous placement and is therefore\n        // stale/incorrect\n\n        state.reset = false;\n        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier\n        // is filled with the initial data specified by the modifier. This means\n        // it doesn't persist and is fresh on each update.\n        // To ensure persistent data, use `${name}#persistent`\n\n        state.orderedModifiers.forEach(function (modifier) {\n          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);\n        });\n\n        for (var index = 0; index < state.orderedModifiers.length; index++) {\n          if (state.reset === true) {\n            state.reset = false;\n            index = -1;\n            continue;\n          }\n\n          var _state$orderedModifie = state.orderedModifiers[index],\n              fn = _state$orderedModifie.fn,\n              _state$orderedModifie2 = _state$orderedModifie.options,\n              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,\n              name = _state$orderedModifie.name;\n\n          if (typeof fn === 'function') {\n            state = fn({\n              state: state,\n              options: _options,\n              name: name,\n              instance: instance\n            }) || state;\n          }\n        }\n      },\n      // Async and optimistically optimized update – it will not be executed if\n      // not necessary (debounced to run at most once-per-tick)\n      update: debounce(function () {\n        return new Promise(function (resolve) {\n          instance.forceUpdate();\n          resolve(state);\n        });\n      }),\n      destroy: function destroy() {\n        cleanupModifierEffects();\n        isDestroyed = true;\n      }\n    };\n\n    if (!areValidElements(reference, popper)) {\n      return instance;\n    }\n\n    instance.setOptions(options).then(function (state) {\n      if (!isDestroyed && options.onFirstUpdate) {\n        options.onFirstUpdate(state);\n      }\n    }); // Modifiers have the ability to execute arbitrary code before the first\n    // update cycle runs. They will be executed in the same order as the update\n    // cycle. This is useful when a modifier adds some persistent data that\n    // other modifiers need to use, but the modifier is run after the dependent\n    // one.\n\n    function runModifierEffects() {\n      state.orderedModifiers.forEach(function (_ref) {\n        var name = _ref.name,\n            _ref$options = _ref.options,\n            options = _ref$options === void 0 ? {} : _ref$options,\n            effect = _ref.effect;\n\n        if (typeof effect === 'function') {\n          var cleanupFn = effect({\n            state: state,\n            name: name,\n            instance: instance,\n            options: options\n          });\n\n          var noopFn = function noopFn() {};\n\n          effectCleanupFns.push(cleanupFn || noopFn);\n        }\n      });\n    }\n\n    function cleanupModifierEffects() {\n      effectCleanupFns.forEach(function (fn) {\n        return fn();\n      });\n      effectCleanupFns = [];\n    }\n\n    return instance;\n  };\n}\nexport var createPopper = /*#__PURE__*/popperGenerator(); // eslint-disable-next-line import/no-unused-modules\n\nexport { detectOverflow };","import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getNodeScroll from \"./getNodeScroll.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport isScrollParent from \"./isScrollParent.js\";\nimport { round } from \"../utils/math.js\";\n\nfunction isElementScaled(element) {\n  var rect = element.getBoundingClientRect();\n  var scaleX = round(rect.width) / element.offsetWidth || 1;\n  var scaleY = round(rect.height) / element.offsetHeight || 1;\n  return scaleX !== 1 || scaleY !== 1;\n} // Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\n\n\nexport default function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n\n  var isOffsetParentAnElement = isHTMLElement(offsetParent);\n  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);\n  var documentElement = getDocumentElement(offsetParent);\n  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078\n    isScrollParent(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      offsets = getBoundingClientRect(offsetParent, true);\n      offsets.x += offsetParent.clientLeft;\n      offsets.y += offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}","import getWindowScroll from \"./getWindowScroll.js\";\nimport getWindow from \"./getWindow.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getHTMLElementScroll from \"./getHTMLElementScroll.js\";\nexport default function getNodeScroll(node) {\n  if (node === getWindow(node) || !isHTMLElement(node)) {\n    return getWindowScroll(node);\n  } else {\n    return getHTMLElementScroll(node);\n  }\n}","export default function getHTMLElementScroll(element) {\n  return {\n    scrollLeft: element.scrollLeft,\n    scrollTop: element.scrollTop\n  };\n}","import { modifierPhases } from \"../enums.js\"; // source: https://stackoverflow.com/questions/49875255\n\nfunction order(modifiers) {\n  var map = new Map();\n  var visited = new Set();\n  var result = [];\n  modifiers.forEach(function (modifier) {\n    map.set(modifier.name, modifier);\n  }); // On visiting object, check for its dependencies and visit them recursively\n\n  function sort(modifier) {\n    visited.add(modifier.name);\n    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);\n    requires.forEach(function (dep) {\n      if (!visited.has(dep)) {\n        var depModifier = map.get(dep);\n\n        if (depModifier) {\n          sort(depModifier);\n        }\n      }\n    });\n    result.push(modifier);\n  }\n\n  modifiers.forEach(function (modifier) {\n    if (!visited.has(modifier.name)) {\n      // check for visited object\n      sort(modifier);\n    }\n  });\n  return result;\n}\n\nexport default function orderModifiers(modifiers) {\n  // order based on dependencies\n  var orderedModifiers = order(modifiers); // order based on phase\n\n  return modifierPhases.reduce(function (acc, phase) {\n    return acc.concat(orderedModifiers.filter(function (modifier) {\n      return modifier.phase === phase;\n    }));\n  }, []);\n}","export default function debounce(fn) {\n  var pending;\n  return function () {\n    if (!pending) {\n      pending = new Promise(function (resolve) {\n        Promise.resolve().then(function () {\n          pending = undefined;\n          resolve(fn());\n        });\n      });\n    }\n\n    return pending;\n  };\n}","export default function mergeByName(modifiers) {\n  var merged = modifiers.reduce(function (merged, current) {\n    var existing = merged[current.name];\n    merged[current.name] = existing ? Object.assign({}, existing, current, {\n      options: Object.assign({}, existing.options, current.options),\n      data: Object.assign({}, existing.data, current.data)\n    }) : current;\n    return merged;\n  }, {}); // IE11 does not support Object.values\n\n  return Object.keys(merged).map(function (key) {\n    return merged[key];\n  });\n}","import { popperGenerator, detectOverflow } from \"./createPopper.js\";\nimport eventListeners from \"./modifiers/eventListeners.js\";\nimport popperOffsets from \"./modifiers/popperOffsets.js\";\nimport computeStyles from \"./modifiers/computeStyles.js\";\nimport applyStyles from \"./modifiers/applyStyles.js\";\nimport offset from \"./modifiers/offset.js\";\nimport flip from \"./modifiers/flip.js\";\nimport preventOverflow from \"./modifiers/preventOverflow.js\";\nimport arrow from \"./modifiers/arrow.js\";\nimport hide from \"./modifiers/hide.js\";\nvar defaultModifiers = [eventListeners, popperOffsets, computeStyles, applyStyles, offset, flip, preventOverflow, arrow, hide];\nvar createPopper = /*#__PURE__*/popperGenerator({\n  defaultModifiers: defaultModifiers\n}); // eslint-disable-next-line import/no-unused-modules\n\nexport { createPopper, popperGenerator, defaultModifiers, detectOverflow }; // eslint-disable-next-line import/no-unused-modules\n\nexport { createPopper as createPopperLite } from \"./popper-lite.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport * from \"./modifiers/index.js\";","import { popperGenerator, detectOverflow } from \"./createPopper.js\";\nimport eventListeners from \"./modifiers/eventListeners.js\";\nimport popperOffsets from \"./modifiers/popperOffsets.js\";\nimport computeStyles from \"./modifiers/computeStyles.js\";\nimport applyStyles from \"./modifiers/applyStyles.js\";\nvar defaultModifiers = [eventListeners, popperOffsets, computeStyles, applyStyles];\nvar createPopper = /*#__PURE__*/popperGenerator({\n  defaultModifiers: defaultModifiers\n}); // eslint-disable-next-line import/no-unused-modules\n\nexport { createPopper, popperGenerator, defaultModifiers, detectOverflow };","/**\n * Componente de Autocomplete reutilizável\n * Usado para campos de busca com HTMX\n */\nclass AutocompleteField {\n    constructor(options) {\n        this.searchInput = options.searchInput;\n        this.hiddenInput = options.hiddenInput;\n        this.resultsContainer = options.resultsContainer;\n        this.selectedDisplay = options.selectedDisplay;\n        this.selectedText = options.selectedText;\n        this.clearButton = options.clearButton;\n        this.onSelect = options.onSelect || this.defaultOnSelect.bind(this);\n        \n        this.isOpen = false;\n        this.init();\n    }\n    \n    init() {\n        this.bindEvents();\n    }\n    \n    bindEvents() {\n        // Mostrar/esconder resultados baseado no foco e conteúdo\n        this.searchInput.addEventListener('focus', () => {\n            if (this.searchInput.value.length >= 2) {\n                this.showResults();\n            }\n        });\n\n        this.searchInput.addEventListener('input', () => {\n            if (this.searchInput.value.length >= 2) {\n                this.showResults();\n                // Limpa seleção anterior se o usuário digitar novamente\n                if (this.hiddenInput.value) {\n                    this.clearSelection();\n                }\n            } else {\n                this.hideResults();\n            }\n        });\n\n        // Fechar autocomplete ao clicar fora\n        document.addEventListener('click', (e) => {\n            if (!this.searchInput.contains(e.target) && !this.resultsContainer.contains(e.target)) {\n                this.hideResults();\n            }\n        });\n\n        // Delegação de evento para clique nos itens\n        this.resultsContainer.addEventListener('click', (e) => {\n            const item = e.target.closest('.autocomplete-item');\n            if (item && item.dataset.pessoaId) {\n                this.selectItem(item);\n            }\n        });\n\n        // Hover nos itens\n        this.resultsContainer.addEventListener('mouseover', (e) => {\n            const item = e.target.closest('.autocomplete-item');\n            if (item) {\n                this.clearHover();\n                item.classList.add('bg-light');\n            }\n        });\n\n        this.resultsContainer.addEventListener('mouseout', (e) => {\n            const item = e.target.closest('.autocomplete-item');\n            if (item) {\n                item.classList.remove('bg-light');\n            }\n        });\n\n        // Botão de limpar seleção\n        if (this.clearButton) {\n            this.clearButton.addEventListener('click', () => {\n                this.clearSelection();\n            });\n        }\n    }\n    \n    showResults() {\n        this.resultsContainer.style.display = 'block';\n        this.isOpen = true;\n    }\n    \n    hideResults() {\n        this.resultsContainer.style.display = 'none';\n        this.isOpen = false;\n    }\n    \n    clearHover() {\n        this.resultsContainer.querySelectorAll('.autocomplete-item').forEach(item => {\n            item.classList.remove('bg-light');\n        });\n    }\n    \n    selectItem(item) {\n        const pessoaId = item.dataset.pessoaId;\n        const pessoaNome = item.dataset.pessoaNome;\n        const pessoaDoc = item.dataset.pessoaDoc;\n        \n        this.onSelect(pessoaId, pessoaNome, pessoaDoc);\n        this.hideResults();\n    }\n    \n    defaultOnSelect(pessoaId, pessoaNome, pessoaDoc) {\n        // Define os valores nos campos\n        this.hiddenInput.value = pessoaId;\n        this.searchInput.value = `${pessoaNome} - ${pessoaDoc}`;\n        \n        // Mostra a seleção se os elementos existirem\n        if (this.selectedText) {\n            this.selectedText.textContent = `${pessoaNome} - ${pessoaDoc}`;\n        }\n        if (this.selectedDisplay) {\n            this.selectedDisplay.style.display = 'block';\n        }\n    }\n    \n    clearSelection() {\n        this.hiddenInput.value = '';\n        this.searchInput.value = '';\n        \n        if (this.selectedDisplay) {\n            this.selectedDisplay.style.display = 'none';\n        }\n        \n        this.hideResults();\n    }\n}\n\n// Função global para compatibilidade com templates existentes\nwindow.selecionarPessoa = function(pessoaId, pessoaNome, pessoaDoc) {\n    // Esta função será sobrescrita pelo autocomplete específico de cada modal\n    console.warn('selecionarPessoa não foi inicializada corretamente');\n};\n\nwindow.limparSelecaoPessoa = function() {\n    // Esta função será sobrescrita pelo autocomplete específico de cada modal  \n    console.warn('limparSelecaoPessoa não foi inicializada corretamente');\n};\n\n// Exporta a classe para uso em módulos\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = AutocompleteField;\n}\n\n// Disponibiliza globalmente\nwindow.AutocompleteField = AutocompleteField;"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$exportWildcard","dest","source","keys","forEach","key","prototype","hasOwnProperty","call","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","err","Error","code","register","parcelRegister","$609bbda3516a49df$export$2e2bcd8739ae039","htmx","onLoad","process","on","off","trigger","ajax","find","findAll","closest","values","elt","type","inputValues","getInputValues","remove","addClass","removeClass","toggleClass","takeClass","swap","defineExtension","removeExtension","logAll","logNone","logger","config","historyEnabled","historyCacheSize","refreshOnHistoryMiss","defaultSwapStyle","defaultSwapDelay","defaultSettleDelay","includeIndicatorStyles","indicatorClass","requestClass","addedClass","settlingClass","swappingClass","allowEval","allowScriptTags","inlineScriptNonce","inlineStyleNonce","attributesToSettle","withCredentials","timeout","wsReconnectDelay","wsBinaryType","disableSelector","scrollBehavior","defaultFocusScroll","getCacheBusterParam","globalViewTransitions","methodsThatUseUrlParams","selfRequestsOnly","ignoreTitle","scrollIntoViewOnBoost","triggerSpecsCache","disableInheritance","responseHandling","error","allowNestedOobSwaps","historyRestoreAsHxRequest","parseInterval","location","_","version","onLoadHelper","processNode","addEventListenerImpl","removeEventListenerImpl","triggerEvent","ajaxHelper","removeElement","addClassToElement","removeClassFromElement","toggleClassOnElement","takeClassForElement","internalEval","internalAPI","addTriggerHandler","bodyContains","canAccessLocalStorage","findThisElement","filterValues","hasAttribute","getAttributeValue","getClosestAttributeValue","getClosestMatch","getExpressionVars","getHeaders","getInternalData","getSwapSpecification","getTriggerSpecs","getTarget","makeFragment","mergeObjects","makeSettleInfo","oobSwap","querySelectorExt","settleImmediately","shouldCancel","triggerErrorEvent","withExtensions","VERBS","VERB_SELECTOR","map","verb","join","str","undefined","interval","NaN","isNaN","slice","parseFloat","getRawAttribute","name","Element","getAttribute","qualifiedName","parentElt","parent","parentElement","parentNode","ShadowRoot","getDocument","document","getRootNode","global","composed","condition","getAttributeValueWithDisinheritance","initialElement","ancestor","attributeName","attributeValue","disinherit","inherit","split","indexOf","closestAttr","asElement","matches","selector","getStartTag","match","tagMatcher","exec","toLowerCase","parseHTML","resp","parser","DOMParser","parseFromString","takeChildrenFor","fragment","childNodes","length","append","duplicateScript","script","newScript","createElement","attributes","attr","setAttribute","value","textContent","async","nonce","isJavaScriptScriptNode","normalizeScriptTags","Array","from","querySelectorAll","insertBefore","logError","response","responseWithNoHead","replace","startTag","DocumentFragment","doc","body","title","querySelector","content","titleElement","innerText","maybeCall","func","isType","o","toString","isFunction","isRawObject","dataProp","data","toArray","arr","returnArr","i","push","isScrolledIntoView","el","rect","getBoundingClientRect","elemTop","top","elemBottom","bottom","window","innerHeight","splitOnWhitespace","trim","obj1","obj2","parseJSON","jString","JSON","parse","test","sessionStorage","setItem","removeItem","normalizePath","path","url","URL","pathname","search","maybeEval","eval","callback","evt","detail","event","console","log","eltOrSelector","getWindow","delay","resolveTarget","setTimeout","removeChild","asHtmlElement","HTMLElement","asString","asParentNode","Document","clazz","classList","add","node","removeAttribute","toggle","children","child","startsWith","prefix","substring","endsWith","suffix","normalizeSelector","trimmedSelector","querySelectorAllExt","parts","chevronsCount","offset","char","result","unprocessedParts","item","shift","nextElementSibling","scanForwardQuery","previousElementSibling","scanBackwardsQuery","host","standardSelector","rootNode","start","results","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","DOCUMENT_POSITION_FOLLOWING","context","processEventArgs","arg1","arg2","arg3","arg4","target","listener","options","ready","eventArgs","addEventListener","b","removeEventListener","DUMMY_ELT","findAttributeTargets","attrName","attrTarget","eltToInheritFrom","attribute","targetStr","boosted","shouldSettleAttribute","includes","cloneAttributes","mergeTo","mergeFrom","isInlineSwap","swapStyle","extensions","getExtensions","extension","oobValue","oobElement","settleInfo","CSS","escape","targets","oobElementClone","cloneNode","createDocumentFragment","appendChild","beforeSwapDetails","shouldSwap","handlePreservedElements","swapWithStyle","restorePreservedElements","elts","pantry","preservedElt","existingElement","moveBefore","getElementById","insertAdjacentHTML","replaceChild","handleAttributes","newNode","normalizedId","normalizedTag","tagName","oldNode","newAttributes","tasks","makeAjaxLoadTask","processFocus","autofocus","autoFocusedElt","focus","insertNodesBefore","firstChild","nodeType","TEXT_NODE","COMMENT_NODE","stringHash","string","hash","charCodeAt","attributeHash","deInitOnHandlers","internalData","onHandlers","handlerInfo","deInitNode","element","clearTimeout","listenerInfos","info","cleanUpElement","swapOuterHTML","newElt","swapInnerHTML","eltBeforeNewContent","previousSibling","nextSibling","filter","swapAfterBegin","swapBeforeBegin","swapBeforeEnd","swapAfterEnd","swapDelete","ext","newElements","handleSwap","isArray","j","findAndSwapOobElements","oobElts","swapSpec","swapOptions","settleResolve","settleReject","doSwap","beforeSwapCallback","contextElement","activeElt","activeElement","selectionInfo","selectionStart","end","selectionEnd","historyRequest","selectOOB","oobSelectValues","oobSelectValue","template","select","newFragment","newActiveElt","focusOptions","preventScroll","focusScroll","setSelectionRange","eventInfo","afterSwapCallback","handleTitle","doSettle","task","anchor","anchorTarget","scrollIntoView","block","behavior","updateScrollState","afterSettleCallback","settleDelay","shouldTransition","transition","Promise","startViewTransition","settlePromise","_resolve","_reject","innerDoSwap","swapDelay","handleTriggerHeader","xhr","header","triggerBody","getResponseHeader","triggers","eventName","eventNames","WHITESPACE","WHITESPACE_OR_COMMA","SYMBOL_START","SYMBOL_CONT","STRINGISH_START","NOT_WHITESPACE","COMBINED_SELECTOR_START","COMBINED_SELECTOR_END","tokenizeString","tokens","position","charAt","startPosition","startChar","symbol","isPossibleRelativeReference","token","last","paramName","maybeGenerateConditional","bracketCount","conditionalSource","conditionFunction","Function","consumeUntil","consumeCSSSelector","INPUT_SELECTOR","parseAndCacheTrigger","explicitTrigger","cache","triggerSpecs","initialLength","every","pollInterval","eventFilter","triggerSpec","changed","once","consume","from_arg","throttle","queue","cancelPolling","cancelled","processPolling","handler","spec","nodeData","maybeFilterEvent","makeEvent","isLocalLink","hostname","eltIsDisabled","boostElement","HTMLAnchorElement","String","rawAttribute","href","issueAjaxRequest","form","ignoreBoostedAnchorCtrlClick","ctrlKey","metaKey","explicitCancel","eltsToListenOn","elementData","lastValue","WeakMap","eltToListenOn","has","eventListener","preventDefault","eventData","handledFor","stopPropagation","triggeredOnce","delayed","windowIsScrolling","scrollHandler","initScrollHandler","setInterval","maybeReveal","initHash","loadImmediately","load","loaded","processVerbs","explicitAction","observerOptions","root","threshold","observer","IntersectionObserver","entries","entry","isIntersecting","observe","firstInitCompleted","polling","shouldProcessHxOn","HX_ON_QUERY","XPathEvaluator","createExpression","processHXOnRoot","elements","iter","evaluate","iterateNext","findHxOnWildcardElements","findElementsToProcess","boostedSelector","extensionSelectors","getSelectors","selectors","flat","maybeSetLastButtonClicked","getTargetButton","getRelatedFormData","lastButtonClicked","maybeUnsetLastButtonClicked","getRelatedForm","initButtonTracking","addHxOnEventHandler","processHxOnWildcard","afterOnPosition","nextChar","initNode","maybeDeInitAndHash","elementsToInit","kebabEventName","CustomEvent","bubbles","cancelable","ignoreEventForLogging","toDo","extensionsToIgnore","msg","errorInfo","eventResult","dispatchEvent","kebabName","kebabedEvent","onEvent","defaultPrevented","currentPathForHistory","setCurrentPathForHistory","getHistoryElement","historyElt","saveToHistoryCache","rootElt","innerHTML","cleanInnerHtmlForHistory","scroll","scrollY","historyCache","getItem","splice","newHistoryItem","stringify","cause","getCachedHistory","className","clone","saveCurrentPageToHistory","history","replaceState","pushUrlIntoHistory","pushState","replaceUrlInHistory","loadHistoryFromServer","request","XMLHttpRequest","details","open","setRequestHeader","onload","status","cacheMiss","serverResponse","send","restoreHistory","cached","reload","addRequestIndicatorClasses","indicators","ic","requestCount","disableElements","disabledElts","disabledElement","removeRequestIndicators","disabled","concat","ele","haveSeenNode","processed","isSameNode","shouldInclude","checked","addValueToFormData","formData","removeValueFromFormData","getAll","delete","getValueFromInput","HTMLSelectElement","multiple","HTMLInputElement","files","processInputValue","errors","validate","validateElement","HTMLFormElement","input","FormData","File","willValidate","checkValidity","message","validationMessage","validity","overrideFormData","receiver","donor","priorityFormData","noValidate","formNoValidate","button","descendant","formDataProxy","appendParam","returnStr","realValue","encodeURIComponent","urlEncode","formDataFromObject","prompt1","headers","getValuesForElement","paramsValue","newValues","isAnchorLink","swapInfoOverride","swapInfo","show","splitSpec","scrollSpec","scrollVal","pop","selectorVal","scrollTarget","showSpec","showVal","showTarget","focusScrollVal","usesFormData","encodeParamsForBody","filteredParameters","encodedParameters","encodeParameters","first","scrollTop","scrollHeight","scrollTo","evalAsDefault","varsValues","evaluateValue","toEval","defaultVal","getHXVarsForElement","expressionVars","getHXValsForElement","safelySetHeaderValue","headerValue","getPathFromResponse","responseURL","hasHeader","regexp","getAllResponseHeaders","returnPromise","targetOverride","resolvedTarget","swapOverride","hierarchyForElt","verifyPath","requestConfig","protocol","origin","sameHost","obj","Blob","formDataArrayProxy","array","Proxy","apply","arguments","index","Reflect","fromEntries","deleteProperty","ownKeys","getOwnPropertyDescriptor","prop","etc","confirmed","resolve","reject","promise","responseHandler","handleAjaxResponse","eltData","submitter","buttonPath","buttonVerb","confirmQuestion","issueRequest","skipConfirmation","confirmDetails","triggeringEvent","question","syncElt","syncStrategy","queueStrategy","abortable","syncStrings","queueStrArray","queuedRequests","endRequestLock","queuedRequest","promptQuestion","promptResponse","prompt","confirm","rawFormData","allFormData","filteredFormData","requestAttrValues","eltIsBoosted","useUrlParams","parameters","unfilteredFormData","unfilteredParameters","credentials","splitPath","pathNoAnchor","finalPath","next","done","toUpperCase","overrideMimeType","noHeaders","responseInfo","pathInfo","requestPath","finalRequestPath","responsePath","hierarchy","keepIndicators","disableElts","secondaryTriggerElt","parentEltInHierarchy","onerror","onabort","ontimeout","upload","lengthComputable","total","params","determineHistoryUpdates","pathFromHeaders","typeFromHeaders","pushUrl","replaceUrl","elementIsBoosted","saveType","codeMatches","responseHandlingConfig","regExp","RegExp","resolveResponseHandling","responseHandlingElement","titleElt","resolveRetarget","responseInfoSelect","redirectSwapSpec","redirectPath","then","shouldRefresh","historyUpdate","isError","selectOverride","failed","successful","transformResponse","finalElt","extensionBase","api","text","extensionsToReturn","extensionsForElement","extensionName","isReady","fn","readyState","insertIndicatorStyles","nonceAttribute","head","getMetaConfig","mergeMetaConfig","metaConfig","restoredElts","abort","originalPopstate","onpopstate","bind","state","$91ca15859685b28b$exports","$91ca15859685b28b$export$caec2af78bcc877f","$91ca15859685b28b$export$353f5b6fc5456de1","$91ca15859685b28b$export$144901db2ea8e967","$91ca15859685b28b$export$78768a9af065a7b","$91ca15859685b28b$export$931cbfb6bfb85fc","$91ca15859685b28b$export$2b77a92f1a5ad772","$91ca15859685b28b$export$591ca0244c9dfcd4","$91ca15859685b28b$export$28c660c63b792dea","$91ca15859685b28b$export$5b6b19405a83ff9d","$91ca15859685b28b$export$a6472a5298a374be","$91ca15859685b28b$export$3e41faf802a29e71","$91ca15859685b28b$export$8d8dc7d5f743331b","$d37552697cc5ea39$exports","$b3c2fd6800546b4b$export$ed5e13716264f202","$f765731200b57f98$export$2e2bcd8739ae039","$b3c2fd6800546b4b$export$8f7491d57c8f97a9","$1bf0bf541303046d$export$8f7491d57c8f97a9","$cff5cce2532d9fa1$export$8f7491d57c8f97a9","$f5c54167a3c62105$exports","$f5c54167a3c62105$export$1e95b668f3b82d","$f5c54167a3c62105$export$40e543e69a8b3fbb","$f5c54167a3c62105$export$79ffe56a765070d2","$f5c54167a3c62105$export$eabcd2c8791e7bf4","$f5c54167a3c62105$export$dfb5619354ba860","$f5c54167a3c62105$export$aec2ce47c367b8c3","$f5c54167a3c62105$export$b3571188c770cc5a","$f5c54167a3c62105$export$bd5df0f255a350f8","$f5c54167a3c62105$export$390fd549c5303b4d","$f5c54167a3c62105$export$d7b7311ec04a3e8f","$f5c54167a3c62105$export$ae5ab1c730825774","$f5c54167a3c62105$export$ca50aac9f3ba507f","$f5c54167a3c62105$export$368f9a87e87fa4e1","$f5c54167a3c62105$export$803cd8101b6c182b","$f5c54167a3c62105$export$421679a7c3d56e","$f5c54167a3c62105$export$aafa59e2e03f2942","$f5c54167a3c62105$export$6964f6c886723980","$f5c54167a3c62105$export$c65e99957a05207c","$f5c54167a3c62105$export$f22da7240b7add18","$f5c54167a3c62105$export$bab79516f2d662fe","$f5c54167a3c62105$export$8d4d2d70e7d46032","$f5c54167a3c62105$export$68d8715fc104d294","$f5c54167a3c62105$export$70a6e5159acce2e6","$f5c54167a3c62105$export$d087d3878fdf71d5","reduce","acc","placement","$1341d386dda6ba3e$exports","$4f30cf0ce50e075e$export$2e2bcd8739ae039","nodeName","$df9341392e6ed7b1$export$2e2bcd8739ae039","ownerDocument","defaultView","$d98cb23738a6d9d0$export$45a5e7f76e0caa8d","OwnElement","$d98cb23738a6d9d0$export$1b3bfaa9684536aa","$d98cb23738a6d9d0$export$af51f0f06c0f328a","$83c1fc4c4e58d7dd$var$applyStyles","_ref","style","styles","assign","$83c1fc4c4e58d7dd$var$effect","_ref2","initialStyles","popper","strategy","left","margin","arrow","reference","styleProperties","property","$83c1fc4c4e58d7dd$export$2e2bcd8739ae039","$1992f2d714808ab6$export$2e2bcd8739ae039","$c8f8eadcf7685dc5$export$2e2bcd8739ae039","$ff355aafd082b0cd$export$2e2bcd8739ae039","$b1f32a1d9525a032$export$2e2bcd8739ae039","$174d14927bb4f43b$export$2e2bcd8739ae039","$7c04da2e958a3fe8$export$2e2bcd8739ae039","$e92fb10df1450f31$export$2e2bcd8739ae039","$3295dac8746ffe59$export$2e2bcd8739ae039","enabled","phase","effect","requires","$afe288682115fde3$export$2e2bcd8739ae039","$7e23bad950468b82$export$8960430cfd85939f","Math","max","$7e23bad950468b82$export$96ec731ed4dcb222","min","$7e23bad950468b82$export$2077e0241d6afd3c","round","$90ccbd5892233dd2$export$2e2bcd8739ae039","uaData","navigator","userAgentData","brands","brand","userAgent","$993d40d65cc118cd$export$2e2bcd8739ae039","$84019ab652aa921b$export$2e2bcd8739ae039","includeScale","isFixedStrategy","clientRect","scaleX","scaleY","offsetWidth","width","offsetHeight","height","visualViewport","addVisualOffsets","x","offsetLeft","y","offsetTop","right","$30ced62b744c6cfe$export$2e2bcd8739ae039","abs","$d63950b756706495$export$2e2bcd8739ae039","contains","$41cae7042543c5d5$export$2e2bcd8739ae039","getComputedStyle","$6829c22fb01dde5a$export$2e2bcd8739ae039","$433af39bc2fae35d$export$2e2bcd8739ae039","documentElement","$17f6a21d28fc02f5$export$2e2bcd8739ae039","assignedSlot","$a56b734280245ffb$var$getTrueOffsetParent","offsetParent","$a56b734280245ffb$var$getContainingBlock","isFirefox","isIE","elementCss","currentNode","css","transform","perspective","contain","willChange","$a56b734280245ffb$export$2e2bcd8739ae039","$b518c35b71cf930f$export$2e2bcd8739ae039","$b6f0b0266e764faa$export$f28d906d67a997f3","$b6f0b0266e764faa$export$86c8af6d3ef0b4a","$683c5e26d5f8bfe5$export$2e2bcd8739ae039","$387b887da02b7e69$export$2e2bcd8739ae039","paddingObject","$4d11a6decde23bf9$export$2e2bcd8739ae039","hashMap","$1992f2d714808ab6$var$toPaddingObject","padding","rects","$1992f2d714808ab6$var$arrow","_state$modifiersData$","arrowElement","popperOffsets","modifiersData","basePlacement","axis","len","isVertical","arrowRect","minProp","maxProp","endDiff","startDiff","arrowOffsetParent","clientSize","clientHeight","clientWidth","centerToReference","center","axisProp","centerOffset","$1992f2d714808ab6$var$effect","_options$element","requiresIfExists","$7b08f0526e425773$export$2e2bcd8739ae039","$c8f8eadcf7685dc5$var$unsetSides","$c8f8eadcf7685dc5$var$roundOffsetsByDPR","win","dpr","devicePixelRatio","$c8f8eadcf7685dc5$export$378fa78a8fea596f","_Object$assign2","_Object$assign","popperRect","variation","offsets","gpuAcceleration","adaptive","roundOffsets","isFixed","_offsets$x","_offsets$y","_ref3","hasX","hasY","sideX","sideY","heightProp","widthProp","offsetY","offsetX","commonStyles","_ref4","$c8f8eadcf7685dc5$var$computeStyles","_ref5","_options$gpuAccelerat","_options$adaptive","_options$roundOffsets","$ff355aafd082b0cd$var$passive","passive","$ff355aafd082b0cd$var$effect","instance","_options$scroll","_options$resize","resize","scrollParents","scrollParent","update","$825ae98fe4f5d029$var$hash","$825ae98fe4f5d029$export$2e2bcd8739ae039","matched","$76c023b5f4bd6339$var$hash","$76c023b5f4bd6339$export$2e2bcd8739ae039","$68a584be1dc90596$export$2e2bcd8739ae039","scrollLeft","pageXOffset","pageYOffset","$943aee5c7065ad53$export$2e2bcd8739ae039","$7b0a0ce1fa68929f$export$2e2bcd8739ae039","html","layoutViewport","$3e70615fb3e74824$export$2e2bcd8739ae039","_element$ownerDocumen","winScroll","scrollWidth","direction","$18583dfdff147fd4$export$2e2bcd8739ae039","_getComputedStyle","overflow","overflowX","overflowY","$3eb5703c925e0e5d$export$2e2bcd8739ae039","$a621d360f1a81b88$export$2e2bcd8739ae039","list","isBody","updatedList","$b0d5f0927fb8bf5c$export$2e2bcd8739ae039","$631049efb60e96c6$var$getInnerBoundingClientRect","clientTop","clientLeft","$631049efb60e96c6$var$getClientRectFromMixedType","clippingParent","$631049efb60e96c6$var$getClippingParents","clippingParents","clipperElement","canEscapeClipping","$631049efb60e96c6$export$2e2bcd8739ae039","boundary","rootBoundary","firstClippingParent","clippingRect","accRect","$03cba2f7a1498b5f$export$2e2bcd8739ae039","commonX","commonY","mainAxis","_options","_options$placement","_options$strategy","_options$boundary","_options$rootBoundary","_options$elementConte","elementContext","_options$altBoundary","altBoundary","_options$padding","altContext","clippingClientRect","referenceClientRect","popperClientRect","elementClientRect","overflowOffsets","offsetData","multiply","$dbd70d4ba9902caa$export$2e2bcd8739ae039","flipVariations","_options$allowedAutoP","allowedAutoPlacements","placements","allowedPlacements","overflows","sort","a","$b1f32a1d9525a032$var$getExpandedFallbackPlacements","oppositePlacement","$b1f32a1d9525a032$var$flip","_skip","_options$mainAxis","checkMainAxis","_options$altAxis","altAxis","checkAltAxis","specifiedFallbackPlacements","fallbackPlacements","_options$flipVariatio","preferredPlacement","isBasePlacement","referenceRect","checksMap","Map","makeFallbackChecks","firstFittingPlacement","_basePlacement","isStartVariation","mainVariationSide","altVariationSide","checks","check","numberOfChecks","_loop","_i","fittingPlacement","_ret","reset","$174d14927bb4f43b$var$getSideOffsets","preventedOffsets","$174d14927bb4f43b$var$isAnySideFullyClipped","some","side","$174d14927bb4f43b$var$hide","preventOverflow","referenceOverflow","popperAltOverflow","referenceClippingOffsets","popperEscapeOffsets","isReferenceHidden","hasPopperEscaped","$7c04da2e958a3fe8$export$7fa02d8595b015ed","invertDistance","skidding","distance","$7c04da2e958a3fe8$var$offset","_options$offset","_data$state$placement","$e92fb10df1450f31$var$popperOffsets","$d8b68132b61080af$export$2e2bcd8739ae039","$3295dac8746ffe59$var$preventOverflow","_options$tether","tether","_options$tetherOffset","tetherOffset","tetherOffsetValue","normalizedTetherOffsetValue","offsetModifierState","_offsetModifierState$","mainSide","altSide","additive","minLen","maxLen","arrowPaddingObject","arrowPaddingMin","arrowPaddingMax","arrowLen","minOffset","maxOffset","clientOffset","offsetModifierValue","tetherMin","tetherMax","preventedOffset","_offsetModifierState$2","_mainSide","_altSide","_offset","_len","_min","_max","isOriginSide","_offsetModifierValue","_tetherMin","_tetherMax","_preventedOffset","$9102221f9e13ae54$export$2e2bcd8739ae039","$ca14c6927ef497ac$export$2e2bcd8739ae039","$34abf65a06d63352$var$isElementScaled","$34abf65a06d63352$export$2e2bcd8739ae039","elementOrVirtualElement","isOffsetParentAnElement","offsetParentIsScaled","$0baf5472b5ad4a5a$var$order","modifiers","visited","Set","modifier","dep","depModifier","$0baf5472b5ad4a5a$export$2e2bcd8739ae039","orderedModifiers","$9b65b878009bf47f$export$2e2bcd8739ae039","pending","$46d929ffbbd3136a$export$2e2bcd8739ae039","merged","current","existing","$b3c2fd6800546b4b$var$DEFAULT_OPTIONS","$b3c2fd6800546b4b$var$areValidElements","args","_key","generatorOptions","_generatorOptions","_generatorOptions$def","defaultModifiers","_generatorOptions$def2","defaultOptions","effectCleanupFns","isDestroyed","setOptions","setOptionsAction","cleanupModifierEffects","m","runModifierEffects","forceUpdate","_state$elements","_state$orderedModifie","_state$orderedModifie2","destroy","_ref$options","cleanupFn","noopFn","onFirstUpdate","$1bf0bf541303046d$export$d34966752335dd47","$cff5cce2532d9fa1$export$d34966752335dd47","$91ca15859685b28b$var$elementMap","$91ca15859685b28b$var$Data","instanceMap","size","$91ca15859685b28b$var$MAX_UID","$91ca15859685b28b$var$MILLISECONDS_MULTIPLIER","$91ca15859685b28b$var$TRANSITION_END","$91ca15859685b28b$var$parseSelector","$91ca15859685b28b$var$toType","object","$91ca15859685b28b$var$getUID","floor","random","$91ca15859685b28b$var$getTransitionDurationFromElement","transitionDuration","transitionDelay","floatTransitionDuration","Number","floatTransitionDelay","$91ca15859685b28b$var$triggerTransitionEnd","Event","$91ca15859685b28b$var$isElement","jquery","$91ca15859685b28b$var$getElement","$91ca15859685b28b$var$isVisible","getClientRects","elementIsVisible","getPropertyValue","closedDetails","summary","$91ca15859685b28b$var$isDisabled","ELEMENT_NODE","$91ca15859685b28b$var$findShadowRoot","attachShadow","$91ca15859685b28b$var$noop","$91ca15859685b28b$var$reflow","$91ca15859685b28b$var$getjQuery","jQuery","$91ca15859685b28b$var$DOMContentLoadedCallbacks","$91ca15859685b28b$var$onDOMContentLoaded","$91ca15859685b28b$var$isRTL","dir","$91ca15859685b28b$var$defineJQueryPlugin","plugin","$","NAME","JQUERY_NO_CONFLICT","jQueryInterface","Constructor","noConflict","$91ca15859685b28b$var$execute","possibleCallback","defaultValue","$91ca15859685b28b$var$executeAfterTransition","transitionElement","waitForTransition","durationPadding","emulatedDuration","called","$91ca15859685b28b$var$getNextActiveElement","shouldGetNext","isCycleAllowed","listLength","$91ca15859685b28b$var$namespaceRegex","$91ca15859685b28b$var$stripNameRegex","$91ca15859685b28b$var$stripUidRegex","$91ca15859685b28b$var$eventRegistry","$91ca15859685b28b$var$uidEvent","$91ca15859685b28b$var$customEvents","mouseenter","mouseleave","$91ca15859685b28b$var$nativeEvents","$91ca15859685b28b$var$makeEventUid","uid","uidEvent","$91ca15859685b28b$var$getElementEvents","$91ca15859685b28b$var$bootstrapHandler","$91ca15859685b28b$var$hydrateObj","delegateTarget","oneOff","$91ca15859685b28b$var$EventHandler","$91ca15859685b28b$var$bootstrapDelegationHandler","domElements","domElement","$91ca15859685b28b$var$findHandler","events","callable","delegationSelector","$91ca15859685b28b$var$normalizeParameters","originalTypeEvent","delegationFunction","isDelegated","typeEvent","$91ca15859685b28b$var$getTypeEvent","$91ca15859685b28b$var$addHandler","relatedTarget","handlers","previousFunction","$91ca15859685b28b$var$removeHandler","Boolean","$91ca15859685b28b$var$removeNamespacedHandlers","namespace","handlerKey","one","inNamespace","storeElementEvent","isNamespace","elementEvent","keyHandlers","jQueryEvent","nativeDispatch","isPropagationStopped","isImmediatePropagationStopped","isDefaultPrevented","meta","_unused","$91ca15859685b28b$var$normalizeData","decodeURIComponent","$91ca15859685b28b$var$normalizeDataKey","chr","$91ca15859685b28b$var$Manipulator","setDataAttribute","removeDataAttribute","getDataAttributes","dataset","pureKey","getDataAttribute","$91ca15859685b28b$var$Config","Default","DefaultType","_getConfig","_mergeConfigObj","_configAfterMerge","_typeCheckConfig","jsonConfig","configTypes","expectedTypes","valueType","TypeError","$91ca15859685b28b$var$VERSION","$91ca15859685b28b$var$BaseComponent","_element","_config","DATA_KEY","dispose","propertyName","EVENT_KEY","getOwnPropertyNames","_queueCallback","isAnimated","getInstance","getOrCreateInstance","VERSION","$91ca15859685b28b$var$getSelector","hrefAttribute","sel","$91ca15859685b28b$var$SelectorEngine","findOne","parents","prev","previous","focusableChildren","focusables","getSelectorFromElement","getElementFromSelector","getMultipleElementsFromSelector","$91ca15859685b28b$var$enableDismissTrigger","component","method","clickEvent","$91ca15859685b28b$var$NAME$f","$91ca15859685b28b$var$DATA_KEY$a","$91ca15859685b28b$var$EVENT_KEY$b","$91ca15859685b28b$var$EVENT_CLOSE","$91ca15859685b28b$var$EVENT_CLOSED","$91ca15859685b28b$var$CLASS_NAME_FADE$5","$91ca15859685b28b$var$CLASS_NAME_SHOW$8","close","closeEvent","_destroyElement","each","$91ca15859685b28b$var$NAME$e","$91ca15859685b28b$var$DATA_KEY$9","$91ca15859685b28b$var$EVENT_KEY$a","$91ca15859685b28b$var$DATA_API_KEY$6","$91ca15859685b28b$var$CLASS_NAME_ACTIVE$3","$91ca15859685b28b$var$SELECTOR_DATA_TOGGLE$5","$91ca15859685b28b$var$EVENT_CLICK_DATA_API$6","$91ca15859685b28b$var$NAME$d","$91ca15859685b28b$var$EVENT_KEY$9","$91ca15859685b28b$var$EVENT_TOUCHSTART","$91ca15859685b28b$var$EVENT_TOUCHMOVE","$91ca15859685b28b$var$EVENT_TOUCHEND","$91ca15859685b28b$var$EVENT_POINTERDOWN","$91ca15859685b28b$var$EVENT_POINTERUP","$91ca15859685b28b$var$POINTER_TYPE_TOUCH","$91ca15859685b28b$var$POINTER_TYPE_PEN","$91ca15859685b28b$var$CLASS_NAME_POINTER_EVENT","$91ca15859685b28b$var$SWIPE_THRESHOLD","$91ca15859685b28b$var$Default$c","endCallback","leftCallback","rightCallback","$91ca15859685b28b$var$DefaultType$c","$91ca15859685b28b$var$Swipe","isSupported","_deltaX","_supportPointerEvents","PointerEvent","_initEvents","_start","touches","clientX","_eventIsPointerPenTouch","_end","_handleSwipe","_move","absDeltaX","pointerType","maxTouchPoints","$91ca15859685b28b$var$NAME$c","$91ca15859685b28b$var$DATA_KEY$8","$91ca15859685b28b$var$EVENT_KEY$8","$91ca15859685b28b$var$DATA_API_KEY$5","$91ca15859685b28b$var$ARROW_LEFT_KEY$1","$91ca15859685b28b$var$ARROW_RIGHT_KEY$1","$91ca15859685b28b$var$TOUCHEVENT_COMPAT_WAIT","$91ca15859685b28b$var$ORDER_NEXT","$91ca15859685b28b$var$ORDER_PREV","$91ca15859685b28b$var$DIRECTION_LEFT","$91ca15859685b28b$var$DIRECTION_RIGHT","$91ca15859685b28b$var$EVENT_SLIDE","$91ca15859685b28b$var$EVENT_SLID","$91ca15859685b28b$var$EVENT_KEYDOWN$1","$91ca15859685b28b$var$EVENT_MOUSEENTER$1","$91ca15859685b28b$var$EVENT_MOUSELEAVE$1","$91ca15859685b28b$var$EVENT_DRAG_START","$91ca15859685b28b$var$EVENT_LOAD_DATA_API$3","$91ca15859685b28b$var$EVENT_CLICK_DATA_API$5","$91ca15859685b28b$var$CLASS_NAME_CAROUSEL","$91ca15859685b28b$var$CLASS_NAME_ACTIVE$2","$91ca15859685b28b$var$CLASS_NAME_SLIDE","$91ca15859685b28b$var$CLASS_NAME_END","$91ca15859685b28b$var$CLASS_NAME_START","$91ca15859685b28b$var$CLASS_NAME_NEXT","$91ca15859685b28b$var$CLASS_NAME_PREV","$91ca15859685b28b$var$SELECTOR_ACTIVE","$91ca15859685b28b$var$SELECTOR_ITEM","$91ca15859685b28b$var$SELECTOR_ACTIVE_ITEM","$91ca15859685b28b$var$SELECTOR_ITEM_IMG","$91ca15859685b28b$var$SELECTOR_INDICATORS","$91ca15859685b28b$var$SELECTOR_DATA_SLIDE","$91ca15859685b28b$var$SELECTOR_DATA_RIDE","$91ca15859685b28b$var$KEY_TO_DIRECTION","$91ca15859685b28b$var$Default$b","keyboard","pause","ride","touch","wrap","$91ca15859685b28b$var$DefaultType$b","_interval","_activeElement","_isSliding","touchTimeout","_swipeHelper","_indicatorsElement","_addEventListeners","cycle","_slide","nextWhenVisible","hidden","_clearInterval","_updateInterval","_maybeEnableCycle","to","items","_getItems","activeIndex","_getItemIndex","_getActive","order","defaultInterval","_keydown","_addTouchEventListeners","img","swipeConfig","_directionToOrder","_setActiveIndicatorElement","activeIndicator","newActiveIndicator","elementInterval","parseInt","isNext","nextElement","nextElementIndex","_orderToDirection","slideEvent","isCycling","directionalClassName","orderClassName","completeCallBack","_isAnimated","clearInterval","carousel","slideIndex","$91ca15859685b28b$var$NAME$b","$91ca15859685b28b$var$DATA_KEY$7","$91ca15859685b28b$var$EVENT_KEY$7","$91ca15859685b28b$var$DATA_API_KEY$4","$91ca15859685b28b$var$EVENT_SHOW$6","$91ca15859685b28b$var$EVENT_SHOWN$6","$91ca15859685b28b$var$EVENT_HIDE$6","$91ca15859685b28b$var$EVENT_HIDDEN$6","$91ca15859685b28b$var$EVENT_CLICK_DATA_API$4","$91ca15859685b28b$var$CLASS_NAME_SHOW$7","$91ca15859685b28b$var$CLASS_NAME_COLLAPSE","$91ca15859685b28b$var$CLASS_NAME_COLLAPSING","$91ca15859685b28b$var$CLASS_NAME_COLLAPSED","$91ca15859685b28b$var$CLASS_NAME_DEEPER_CHILDREN","$91ca15859685b28b$var$CLASS_NAME_HORIZONTAL","$91ca15859685b28b$var$WIDTH","$91ca15859685b28b$var$HEIGHT","$91ca15859685b28b$var$SELECTOR_ACTIVES","$91ca15859685b28b$var$SELECTOR_DATA_TOGGLE$4","$91ca15859685b28b$var$Default$a","$91ca15859685b28b$var$DefaultType$a","elem","_isTransitioning","_triggerArray","filterElement","foundElement","_initializeChildren","_addAriaAndCollapsedClass","_isShown","hide","activeChildren","_getFirstLevelChildren","startEvent","activeInstance","dimension","_getDimension","complete","capitalizedDimension","scrollSize","selected","triggerArray","isOpen","$91ca15859685b28b$var$NAME$a","$91ca15859685b28b$var$DATA_KEY$6","$91ca15859685b28b$var$EVENT_KEY$6","$91ca15859685b28b$var$DATA_API_KEY$3","$91ca15859685b28b$var$ESCAPE_KEY$2","$91ca15859685b28b$var$TAB_KEY$1","$91ca15859685b28b$var$ARROW_UP_KEY$1","$91ca15859685b28b$var$ARROW_DOWN_KEY$1","$91ca15859685b28b$var$RIGHT_MOUSE_BUTTON","$91ca15859685b28b$var$EVENT_HIDE$5","$91ca15859685b28b$var$EVENT_HIDDEN$5","$91ca15859685b28b$var$EVENT_SHOW$5","$91ca15859685b28b$var$EVENT_SHOWN$5","$91ca15859685b28b$var$EVENT_CLICK_DATA_API$3","$91ca15859685b28b$var$EVENT_KEYDOWN_DATA_API","$91ca15859685b28b$var$EVENT_KEYUP_DATA_API","$91ca15859685b28b$var$CLASS_NAME_SHOW$6","$91ca15859685b28b$var$CLASS_NAME_DROPUP","$91ca15859685b28b$var$CLASS_NAME_DROPEND","$91ca15859685b28b$var$CLASS_NAME_DROPSTART","$91ca15859685b28b$var$CLASS_NAME_DROPUP_CENTER","$91ca15859685b28b$var$CLASS_NAME_DROPDOWN_CENTER","$91ca15859685b28b$var$SELECTOR_DATA_TOGGLE$3","$91ca15859685b28b$var$SELECTOR_DATA_TOGGLE_SHOWN","$91ca15859685b28b$var$SELECTOR_MENU","$91ca15859685b28b$var$SELECTOR_NAVBAR","$91ca15859685b28b$var$SELECTOR_NAVBAR_NAV","$91ca15859685b28b$var$SELECTOR_VISIBLE_ITEMS","$91ca15859685b28b$var$PLACEMENT_TOP","$91ca15859685b28b$var$PLACEMENT_TOPEND","$91ca15859685b28b$var$PLACEMENT_BOTTOM","$91ca15859685b28b$var$PLACEMENT_BOTTOMEND","$91ca15859685b28b$var$PLACEMENT_RIGHT","$91ca15859685b28b$var$PLACEMENT_LEFT","$91ca15859685b28b$var$PLACEMENT_TOPCENTER","$91ca15859685b28b$var$PLACEMENT_BOTTOMCENTER","$91ca15859685b28b$var$Default$9","autoClose","display","popperConfig","$91ca15859685b28b$var$DefaultType$9","_popper","_parent","_menu","_inNavbar","_detectNavbar","showEvent","_createPopper","_completeHide","hideEvent","referenceElement","_getPopperConfig","createPopper","_getPlacement","parentDropdown","isEnd","_getOffset","popperData","defaultBsPopperConfig","_selectMenuItem","clearMenus","composedPath","isMenuTarget","dataApiKeydownHandler","isInput","isEscapeEvent","isUpOrDownEvent","getToggleButton","$91ca15859685b28b$var$NAME$9","$91ca15859685b28b$var$CLASS_NAME_FADE$4","$91ca15859685b28b$var$CLASS_NAME_SHOW$5","$91ca15859685b28b$var$EVENT_MOUSEDOWN","$91ca15859685b28b$var$Default$8","clickCallback","isVisible","rootElement","$91ca15859685b28b$var$DefaultType$8","$91ca15859685b28b$var$Backdrop","_isAppended","_append","_getElement","_emulateAnimation","backdrop","$91ca15859685b28b$var$NAME$8","$91ca15859685b28b$var$DATA_KEY$5","$91ca15859685b28b$var$EVENT_KEY$5","$91ca15859685b28b$var$EVENT_FOCUSIN$2","$91ca15859685b28b$var$EVENT_KEYDOWN_TAB","$91ca15859685b28b$var$TAB_KEY","$91ca15859685b28b$var$TAB_NAV_FORWARD","$91ca15859685b28b$var$TAB_NAV_BACKWARD","$91ca15859685b28b$var$Default$7","trapElement","$91ca15859685b28b$var$DefaultType$7","$91ca15859685b28b$var$FocusTrap","_isActive","_lastTabNavDirection","activate","_handleFocusin","_handleKeydown","deactivate","shiftKey","$91ca15859685b28b$var$SELECTOR_FIXED_CONTENT","$91ca15859685b28b$var$SELECTOR_STICKY_CONTENT","$91ca15859685b28b$var$PROPERTY_PADDING","$91ca15859685b28b$var$PROPERTY_MARGIN","$91ca15859685b28b$var$ScrollBarHelper","getWidth","documentWidth","innerWidth","_disableOverFlow","_setElementAttributes","calculatedValue","_resetElementAttributes","isOverflowing","_saveInitialAttribute","styleProperty","scrollbarWidth","manipulationCallBack","setProperty","_applyManipulationCallback","actualValue","removeProperty","callBack","$91ca15859685b28b$var$NAME$7","$91ca15859685b28b$var$DATA_KEY$4","$91ca15859685b28b$var$EVENT_KEY$4","$91ca15859685b28b$var$DATA_API_KEY$2","$91ca15859685b28b$var$ESCAPE_KEY$1","$91ca15859685b28b$var$EVENT_HIDE$4","$91ca15859685b28b$var$EVENT_HIDE_PREVENTED$1","$91ca15859685b28b$var$EVENT_HIDDEN$4","$91ca15859685b28b$var$EVENT_SHOW$4","$91ca15859685b28b$var$EVENT_SHOWN$4","$91ca15859685b28b$var$EVENT_RESIZE$1","$91ca15859685b28b$var$EVENT_CLICK_DISMISS","$91ca15859685b28b$var$EVENT_MOUSEDOWN_DISMISS","$91ca15859685b28b$var$EVENT_KEYDOWN_DISMISS$1","$91ca15859685b28b$var$EVENT_CLICK_DATA_API$2","$91ca15859685b28b$var$CLASS_NAME_OPEN","$91ca15859685b28b$var$CLASS_NAME_FADE$3","$91ca15859685b28b$var$CLASS_NAME_SHOW$4","$91ca15859685b28b$var$CLASS_NAME_STATIC","$91ca15859685b28b$var$OPEN_SELECTOR$1","$91ca15859685b28b$var$SELECTOR_DIALOG","$91ca15859685b28b$var$SELECTOR_MODAL_BODY","$91ca15859685b28b$var$SELECTOR_DATA_TOGGLE$2","$91ca15859685b28b$var$Default$6","$91ca15859685b28b$var$DefaultType$6","_dialog","_backdrop","_initializeBackDrop","_focustrap","_initializeFocusTrap","_scrollBar","_adjustDialog","_showElement","_hideModal","handleUpdate","modalBody","transitionComplete","_triggerBackdropTransition","event2","_resetAdjustments","isModalOverflowing","initialOverflowY","isBodyOverflowing","paddingLeft","paddingRight","alreadyOpen","$91ca15859685b28b$var$NAME$6","$91ca15859685b28b$var$DATA_KEY$3","$91ca15859685b28b$var$EVENT_KEY$3","$91ca15859685b28b$var$DATA_API_KEY$1","$91ca15859685b28b$var$EVENT_LOAD_DATA_API$2","$91ca15859685b28b$var$ESCAPE_KEY","$91ca15859685b28b$var$CLASS_NAME_SHOW$3","$91ca15859685b28b$var$CLASS_NAME_SHOWING$1","$91ca15859685b28b$var$CLASS_NAME_HIDING","$91ca15859685b28b$var$CLASS_NAME_BACKDROP","$91ca15859685b28b$var$OPEN_SELECTOR","$91ca15859685b28b$var$EVENT_SHOW$3","$91ca15859685b28b$var$EVENT_SHOWN$3","$91ca15859685b28b$var$EVENT_HIDE$3","$91ca15859685b28b$var$EVENT_HIDE_PREVENTED","$91ca15859685b28b$var$EVENT_HIDDEN$3","$91ca15859685b28b$var$EVENT_RESIZE","$91ca15859685b28b$var$EVENT_CLICK_DATA_API$1","$91ca15859685b28b$var$EVENT_KEYDOWN_DISMISS","$91ca15859685b28b$var$SELECTOR_DATA_TOGGLE$1","$91ca15859685b28b$var$Default$5","$91ca15859685b28b$var$DefaultType$5","blur","completeCallback","$91ca15859685b28b$var$ARIA_ATTRIBUTE_PATTERN","$91ca15859685b28b$var$DefaultAllowlist","area","br","col","dd","div","dl","dt","em","hr","h1","h2","h3","h4","h5","h6","li","ol","p","pre","small","span","sub","sup","strong","u","ul","$91ca15859685b28b$var$uriAttributes","$91ca15859685b28b$var$SAFE_URL_PATTERN","$91ca15859685b28b$var$allowedAttribute","allowedAttributeList","nodeValue","attributeRegex","regex","$91ca15859685b28b$var$sanitizeHtml","unsafeHtml","allowList","sanitizeFunction","createdDocument","domParser","elementName","attributeList","allowedAttributes","$91ca15859685b28b$var$NAME$5","$91ca15859685b28b$var$Default$4","extraClass","sanitize","sanitizeFn","$91ca15859685b28b$var$DefaultType$4","$91ca15859685b28b$var$DefaultContentType","$91ca15859685b28b$var$TemplateFactory","getContent","_resolvePossibleFunction","hasContent","changeContent","_checkContent","toHtml","templateWrapper","_maybeSanitize","_setContent","arg","templateElement","_putElementInTemplate","$91ca15859685b28b$var$NAME$4","$91ca15859685b28b$var$DISALLOWED_ATTRIBUTES","$91ca15859685b28b$var$CLASS_NAME_FADE$2","$91ca15859685b28b$var$CLASS_NAME_MODAL","$91ca15859685b28b$var$CLASS_NAME_SHOW$2","$91ca15859685b28b$var$SELECTOR_TOOLTIP_INNER","$91ca15859685b28b$var$SELECTOR_MODAL","$91ca15859685b28b$var$EVENT_MODAL_HIDE","$91ca15859685b28b$var$TRIGGER_HOVER","$91ca15859685b28b$var$TRIGGER_FOCUS","$91ca15859685b28b$var$TRIGGER_CLICK","$91ca15859685b28b$var$TRIGGER_MANUAL","$91ca15859685b28b$var$EVENT_HIDE$2","$91ca15859685b28b$var$EVENT_HIDDEN$2","$91ca15859685b28b$var$EVENT_SHOW$2","$91ca15859685b28b$var$EVENT_SHOWN$2","$91ca15859685b28b$var$EVENT_INSERTED","$91ca15859685b28b$var$EVENT_CLICK$1","$91ca15859685b28b$var$EVENT_FOCUSIN$1","$91ca15859685b28b$var$EVENT_FOCUSOUT$1","$91ca15859685b28b$var$EVENT_MOUSEENTER","$91ca15859685b28b$var$EVENT_MOUSELEAVE","$91ca15859685b28b$var$AttachmentMap","AUTO","TOP","RIGHT","BOTTOM","LEFT","$91ca15859685b28b$var$Default$3","animation","container","customClass","$91ca15859685b28b$var$DefaultType$3","_isEnabled","_timeout","_isHovered","_activeTrigger","_templateFactory","_newContent","tip","_setListeners","_fixTitle","enable","disable","toggleEnabled","_leave","_enter","_hideModalHandler","_disposePopper","_isWithContent","isInTheDom","shadowRoot","_getTipElement","_isWithActiveTrigger","_getTitle","_createTipElement","_getContentForTemplate","_getTemplateFactory","tipId","setContent","_initializeOnDelegatedTarget","_getDelegateConfig","attachment","eventIn","eventOut","_setTimeout","dataAttributes","dataAttribute","$91ca15859685b28b$var$NAME$3","$91ca15859685b28b$var$SELECTOR_TITLE","$91ca15859685b28b$var$SELECTOR_CONTENT","$91ca15859685b28b$var$Default$2","$91ca15859685b28b$var$DefaultType$2","_getContent","$91ca15859685b28b$var$NAME$2","$91ca15859685b28b$var$DATA_KEY$2","$91ca15859685b28b$var$EVENT_KEY$2","$91ca15859685b28b$var$DATA_API_KEY","$91ca15859685b28b$var$EVENT_ACTIVATE","$91ca15859685b28b$var$EVENT_CLICK","$91ca15859685b28b$var$EVENT_LOAD_DATA_API$1","$91ca15859685b28b$var$CLASS_NAME_DROPDOWN_ITEM","$91ca15859685b28b$var$CLASS_NAME_ACTIVE$1","$91ca15859685b28b$var$SELECTOR_DATA_SPY","$91ca15859685b28b$var$SELECTOR_TARGET_LINKS","$91ca15859685b28b$var$SELECTOR_NAV_LIST_GROUP","$91ca15859685b28b$var$SELECTOR_NAV_LINKS","$91ca15859685b28b$var$SELECTOR_NAV_ITEMS","$91ca15859685b28b$var$SELECTOR_LIST_ITEMS","$91ca15859685b28b$var$SELECTOR_LINK_ITEMS","$91ca15859685b28b$var$SELECTOR_DROPDOWN","$91ca15859685b28b$var$SELECTOR_DROPDOWN_TOGGLE$1","$91ca15859685b28b$var$Default$1","rootMargin","smoothScroll","$91ca15859685b28b$var$DefaultType$1","_targetLinks","_observableSections","_rootElement","_activeTarget","_observer","_previousScrollData","visibleEntryTop","parentScrollTop","refresh","section","_initializeTargetsAndObservables","_maybeEnableSmoothScroll","disconnect","_getNewObserver","observableSection","_observerCallback","targetElement","_process","userScrollsDown","_clearActiveClass","entryIsLowerThanPrevious","decodeURI","_activateParents","listGroup","spy","$91ca15859685b28b$var$NAME$1","$91ca15859685b28b$var$DATA_KEY$1","$91ca15859685b28b$var$EVENT_KEY$1","$91ca15859685b28b$var$EVENT_HIDE$1","$91ca15859685b28b$var$EVENT_HIDDEN$1","$91ca15859685b28b$var$EVENT_SHOW$1","$91ca15859685b28b$var$EVENT_SHOWN$1","$91ca15859685b28b$var$EVENT_CLICK_DATA_API","$91ca15859685b28b$var$EVENT_KEYDOWN","$91ca15859685b28b$var$EVENT_LOAD_DATA_API","$91ca15859685b28b$var$ARROW_LEFT_KEY","$91ca15859685b28b$var$ARROW_RIGHT_KEY","$91ca15859685b28b$var$ARROW_UP_KEY","$91ca15859685b28b$var$ARROW_DOWN_KEY","$91ca15859685b28b$var$HOME_KEY","$91ca15859685b28b$var$END_KEY","$91ca15859685b28b$var$CLASS_NAME_ACTIVE","$91ca15859685b28b$var$CLASS_NAME_FADE$1","$91ca15859685b28b$var$CLASS_NAME_SHOW$1","$91ca15859685b28b$var$CLASS_DROPDOWN","$91ca15859685b28b$var$SELECTOR_DROPDOWN_TOGGLE","$91ca15859685b28b$var$SELECTOR_DROPDOWN_MENU","$91ca15859685b28b$var$NOT_SELECTOR_DROPDOWN_TOGGLE","$91ca15859685b28b$var$SELECTOR_TAB_PANEL","$91ca15859685b28b$var$SELECTOR_OUTER","$91ca15859685b28b$var$SELECTOR_INNER","$91ca15859685b28b$var$SELECTOR_DATA_TOGGLE","$91ca15859685b28b$var$SELECTOR_INNER_ELEM","$91ca15859685b28b$var$SELECTOR_DATA_TOGGLE_ACTIVE","_setInitialAttributes","_getChildren","innerElem","_elemIsActive","active","_getActiveElem","_deactivate","_activate","relatedElem","_toggleDropDown","nextActiveElement","_setAttributeIfNotExists","_setInitialAttributesOnChild","_getInnerElement","isActive","outerElem","_getOuterElement","_setInitialAttributesOnTargetPanel","$91ca15859685b28b$var$NAME","$91ca15859685b28b$var$DATA_KEY","$91ca15859685b28b$var$EVENT_KEY","$91ca15859685b28b$var$EVENT_MOUSEOVER","$91ca15859685b28b$var$EVENT_MOUSEOUT","$91ca15859685b28b$var$EVENT_FOCUSIN","$91ca15859685b28b$var$EVENT_FOCUSOUT","$91ca15859685b28b$var$EVENT_HIDE","$91ca15859685b28b$var$EVENT_HIDDEN","$91ca15859685b28b$var$EVENT_SHOW","$91ca15859685b28b$var$EVENT_SHOWN","$91ca15859685b28b$var$CLASS_NAME_FADE","$91ca15859685b28b$var$CLASS_NAME_HIDE","$91ca15859685b28b$var$CLASS_NAME_SHOW","$91ca15859685b28b$var$CLASS_NAME_SHOWING","$91ca15859685b28b$var$DefaultType","autohide","$91ca15859685b28b$var$Default","_hasMouseInteraction","_hasKeyboardInteraction","_clearTimeout","_maybeScheduleHide","isShown","_onInteraction","isInteracting","$8if87","$1dc9569bcdd0b469$exports","$1dc9569bcdd0b469$var$AutocompleteField","searchInput","hiddenInput","resultsContainer","selectedDisplay","selectedText","clearButton","onSelect","defaultOnSelect","bindEvents","showResults","clearSelection","hideResults","pessoaId","selectItem","clearHover","pessoaNome","pessoaDoc","selecionarPessoa","warn","limparSelecaoPessoa","AutocompleteField","bootstrap","default","tooltipTriggerEl","Tooltip","popoverTriggerEl","Popover","elementMap","MAX_UID","MILLISECONDS_MULTIPLIER","TRANSITION_END","parseSelector","toType","getUID","getTransitionDurationFromElement","triggerTransitionEnd","isElement","getElement","isDisabled","findShadowRoot","noop","reflow","getjQuery","DOMContentLoadedCallbacks","onDOMContentLoaded","isRTL","defineJQueryPlugin","execute","executeAfterTransition","getNextActiveElement","namespaceRegex","stripNameRegex","stripUidRegex","eventRegistry","customEvents","nativeEvents","makeEventUid","getElementEvents","bootstrapHandler","hydrateObj","EventHandler","bootstrapDelegationHandler","findHandler","normalizeParameters","getTypeEvent","addHandler","wrapFunction","removeHandler","removeNamespacedHandlers","normalizeData","normalizeDataKey","Manipulator","bsKeys","Config","constructor","BaseComponent","Data","getSelector","SelectorEngine","enableDismissTrigger","EVENT_CLOSE","EVENT_CLOSED","CLASS_NAME_FADE","CLASS_NAME_SHOW","Alert","DATA_API_KEY","CLASS_NAME_ACTIVE","SELECTOR_DATA_TOGGLE","EVENT_CLICK_DATA_API","Button","EVENT_TOUCHSTART","EVENT_TOUCHMOVE","EVENT_TOUCHEND","EVENT_POINTERDOWN","EVENT_POINTERUP","POINTER_TYPE_TOUCH","POINTER_TYPE_PEN","CLASS_NAME_POINTER_EVENT","SWIPE_THRESHOLD","Swipe","ARROW_LEFT_KEY","ARROW_RIGHT_KEY","TOUCHEVENT_COMPAT_WAIT","ORDER_NEXT","ORDER_PREV","DIRECTION_LEFT","DIRECTION_RIGHT","EVENT_SLIDE","EVENT_SLID","EVENT_KEYDOWN","EVENT_MOUSEENTER","EVENT_MOUSELEAVE","EVENT_DRAG_START","EVENT_LOAD_DATA_API","CLASS_NAME_CAROUSEL","CLASS_NAME_SLIDE","CLASS_NAME_END","CLASS_NAME_START","CLASS_NAME_NEXT","CLASS_NAME_PREV","SELECTOR_ACTIVE","SELECTOR_ITEM","SELECTOR_ACTIVE_ITEM","SELECTOR_ITEM_IMG","SELECTOR_INDICATORS","SELECTOR_DATA_SLIDE","SELECTOR_DATA_RIDE","KEY_TO_DIRECTION","Carousel","endCallBack","carousels","EVENT_SHOW","EVENT_SHOWN","EVENT_HIDE","EVENT_HIDDEN","CLASS_NAME_COLLAPSE","CLASS_NAME_COLLAPSING","CLASS_NAME_COLLAPSED","CLASS_NAME_DEEPER_CHILDREN","CLASS_NAME_HORIZONTAL","WIDTH","HEIGHT","SELECTOR_ACTIVES","Collapse","toggleList","ESCAPE_KEY","TAB_KEY","ARROW_UP_KEY","ARROW_DOWN_KEY","RIGHT_MOUSE_BUTTON","EVENT_KEYDOWN_DATA_API","EVENT_KEYUP_DATA_API","CLASS_NAME_DROPUP","CLASS_NAME_DROPEND","CLASS_NAME_DROPSTART","CLASS_NAME_DROPUP_CENTER","CLASS_NAME_DROPDOWN_CENTER","SELECTOR_DATA_TOGGLE_SHOWN","SELECTOR_MENU","SELECTOR_NAVBAR","SELECTOR_NAVBAR_NAV","SELECTOR_VISIBLE_ITEMS","PLACEMENT_TOP","PLACEMENT_TOPEND","PLACEMENT_BOTTOM","PLACEMENT_BOTTOMEND","PLACEMENT_RIGHT","PLACEMENT_LEFT","PLACEMENT_TOPCENTER","PLACEMENT_BOTTOMCENTER","Dropdown","Popper","openToggles","EVENT_MOUSEDOWN","Backdrop","EVENT_FOCUSIN","EVENT_KEYDOWN_TAB","TAB_NAV_FORWARD","TAB_NAV_BACKWARD","FocusTrap","SELECTOR_FIXED_CONTENT","SELECTOR_STICKY_CONTENT","PROPERTY_PADDING","PROPERTY_MARGIN","ScrollBarHelper","EVENT_HIDE_PREVENTED","EVENT_RESIZE","EVENT_CLICK_DISMISS","EVENT_MOUSEDOWN_DISMISS","EVENT_KEYDOWN_DISMISS","CLASS_NAME_OPEN","CLASS_NAME_STATIC","OPEN_SELECTOR","SELECTOR_DIALOG","SELECTOR_MODAL_BODY","Modal","CLASS_NAME_SHOWING","CLASS_NAME_HIDING","CLASS_NAME_BACKDROP","Offcanvas","ARIA_ATTRIBUTE_PATTERN","DefaultAllowlist","uriAttributes","SAFE_URL_PATTERN","allowedAttribute","sanitizeHtml","DefaultContentType","TemplateFactory","DISALLOWED_ATTRIBUTES","CLASS_NAME_MODAL","SELECTOR_TOOLTIP_INNER","SELECTOR_MODAL","EVENT_MODAL_HIDE","TRIGGER_HOVER","TRIGGER_FOCUS","TRIGGER_CLICK","TRIGGER_MANUAL","EVENT_INSERTED","EVENT_CLICK","EVENT_FOCUSOUT","AttachmentMap","SELECTOR_TITLE","SELECTOR_CONTENT","EVENT_ACTIVATE","CLASS_NAME_DROPDOWN_ITEM","SELECTOR_DATA_SPY","SELECTOR_TARGET_LINKS","SELECTOR_NAV_LIST_GROUP","SELECTOR_NAV_LINKS","SELECTOR_NAV_ITEMS","SELECTOR_LIST_ITEMS","SELECTOR_LINK_ITEMS","SELECTOR_DROPDOWN","SELECTOR_DROPDOWN_TOGGLE","ScrollSpy","targetLinks","activeNodes","HOME_KEY","END_KEY","CLASS_DROPDOWN","SELECTOR_DROPDOWN_MENU","NOT_SELECTOR_DROPDOWN_TOGGLE","SELECTOR_TAB_PANEL","SELECTOR_OUTER","SELECTOR_INNER","SELECTOR_INNER_ELEM","SELECTOR_DATA_TOGGLE_ACTIVE","Tab","EVENT_MOUSEOVER","EVENT_MOUSEOUT","CLASS_NAME_HIDE","Toast"],"version":3,"file":"app.js.map"}